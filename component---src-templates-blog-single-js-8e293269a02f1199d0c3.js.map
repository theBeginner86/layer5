{"version":3,"sources":["webpack://Layer5/./src/components/Related-Posts/relatedPosts.style.js","webpack://Layer5/./src/components/Related-Posts/index.js","webpack://Layer5/./src/sections/Blog/Blog-single/blogSingle.style.js","webpack://Layer5/./src/sections/Blog/BlogPostSignOff/blogpost-signoff.styles.js","webpack://Layer5/./src/sections/Blog/BlogPostSignOff/index.js","webpack://Layer5/./src/components/Related-Posts/relatedPostsFactory.js","webpack://Layer5/./src/sections/Blog/Blog-single/index.js","webpack://Layer5/./src/templates/blog-single.js"],"names":["styled","props","theme","primaryColor","secondaryColor","postType","relatedPosts","mainHead","lastCardHead","linkToAllItems","className","window","dots","innerWidth","arrows","infinite","speed","slidesToShow","slidesToScroll","map","post","xs","key","fields","slug","Card","frontmatter","lg","Link","to","black","white","author","isSlugAvailable","useStaticQuery","allMdx","nodes","some","matter","name","src","layer5_img","alt","slugify","authorField","posts","currentPostSlug","this","filter","maxPosts","category","tags","setMaxPosts","m","setCategory","setTags","getPosts","identityMap","length","console","error","getSlug","addToMap","Object","prototype","hasOwnProperty","call","points","addCategoryPoints","addTagsPoints","forEach","tag","arrayIdentityMap","keys","splice","data","mdx","body","RelatedPostsFactory","PageHeader","title","subtitle","thumbnail","MDXRenderer","image","publicURL","Navigation","Footer"],"mappings":"sLA2JA,E,SAzJ4BA,kBAAH,iFAAGA,CAAH,skGAyCR,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,gBAMrB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,kBAMrB,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,gBAQrB,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,gBAOrB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,kBAIrB,SAAAH,GAAK,OAAIA,EAAMC,MAAME,kBAqEb,SAAAH,GAAK,OAAIA,EAAMC,MAAME,kBAGrB,SAAAH,GAAK,OAAIA,EAAMC,MAAME,kB,sBCxF9C,EAhDqB,SAAAH,GAAU,IAEtBI,EAAsEJ,EAAtEI,SAAWC,EAA2DL,EAA3DK,aAAeC,EAA4CN,EAA5CM,SAAWC,EAAiCP,EAAjCO,aAAeC,EAAkBR,EAAlBQ,eAE3D,OACE,gBAAC,EAAD,KACE,uBAAKC,UAAU,iBACb,0BAAKH,IAGa,oBAAXI,QACC,gBAAC,IAAD,CACEC,KAAQD,OAAOE,WAAa,IAC5BC,OAASH,OAAOE,YAAc,IAC9BE,UAAW,EACXC,MAAO,MACPC,aAAeN,OAAOE,YAAc,IAAM,EAAIF,OAAOE,YAAc,IAAM,EAAI,EAC7EK,eAAiB,GAGF,UAAbb,EAAuBC,EAAaa,KAAI,YAAa,IAAXC,EAAU,EAAVA,KACxC,OACE,gBAAC,KAAD,CAAKV,UAAU,UAAUW,GAAI,GAAIC,IAAKF,EAAKG,OAAOC,MAChD,gBAACC,EAAA,EAAD,CAAMC,YAAaN,EAAKM,YAAaH,OAAQH,EAAKG,aAGrDjB,EAAaa,KAAI,SAACC,GACnB,OACE,gBAAC,KAAD,CAAKV,UAAU,UAAUW,GAAI,GAAIC,IAAKF,EAAKG,OAAOC,MAChD,gBAACC,EAAA,EAAD,CAAMC,YAAaN,EAAKM,YAAaH,OAAQH,EAAKG,aAK1D,gBAAC,KAAD,CAAKF,GAAI,GAAIM,GAAI,GAAIjB,UAAU,YAC7B,uBAAKA,UAAU,iBACb,gBAAC,EAAAkB,KAAD,CAAMC,GAAIpB,GACR,0BAAKD,GACL,gBAAC,MAAD,a,iOCAxB,EA9CwBR,oBAAH,wEAAGA,CAAH,s/BAmBA,SAAAC,GAAK,OAAIA,EAAMC,MAAM4B,SAQZ,SAAA7B,GAAK,OAAIA,EAAMC,MAAME,kBAC1B,SAAAH,GAAK,OAAIA,EAAMC,MAAM6B,S,WCZ9C,EAhBgC/B,oBAAJ,sFAAIA,CAAJ,+OCiD5B,EA/BwB,SAAC,GAAe,IAAbgC,EAAY,EAAZA,OACrBC,GAAkB,EACnBD,IAkBDC,GAjBqBC,oBAAe,aAiBLC,OAAOC,MAAMC,MAAK,SAAAC,GAAM,OAAIA,EAAOZ,YAAYa,MAAQP,EAAOO,SAE/F,OACE,gBAAC,EAAD,UACqB,gBAAhBP,EAAOO,KACN,qBAAG7B,UAAU,YAAW,uBAAK8B,IAAKC,IAAYC,IAAI,WAAlD,SACA,qBAAGhC,UAAU,YAxCH,SAACsB,EAAQC,GAC3B,OACE,gCAEIA,EACE,gBAAC,EAAAL,KAAD,CAAMC,GAAE,sBAAwBc,IAAQX,EAAOO,OAC7C,4BAAOP,EAAOO,OAEd,4BAAOP,EAAOO,OAgCSK,CAAYZ,EAAQC,M,82BCiDvD,E,WA3FE,WAAaY,EAAOC,GAClBC,KAAKF,MAAQA,EAAMG,QACjB,SAAC5B,GAAD,OAAUA,EAAKG,OAAOC,OAASsB,KAEjCC,KAAKD,gBAAkBA,EACvBC,KAAKE,SAAW,EAChBF,KAAKG,SAAW,KAChBH,KAAKI,KAAO,G,2BAGdC,YAAA,SAAaC,GAEX,OADAN,KAAKE,SAAWI,EACTN,M,EAGTO,YAAA,SAAaJ,GAEX,OADAH,KAAKG,SAAWA,EACTH,M,EAGTQ,QAAA,SAASJ,GAEP,OADAJ,KAAKI,KAAOA,EACLJ,M,EAGTS,SAAA,WAAa,IACHN,EAAoCH,KAApCG,SAAUC,EAA0BJ,KAA1BI,KAAMN,EAAoBE,KAApBF,MAAOI,EAAaF,KAAbE,SACzBQ,EAAc,GAEpB,IAAe,KAATN,GAAkC,IAAhBA,EAAKO,OAE3B,OADAC,QAAQC,MAAM,0DACP,GAGT,IAAmB,KAAbV,EAEJ,OADAS,QAAQC,MAAM,kEACP,GAuCT,IApCA,IAoCA,EApCMC,EAAU,SAAAzC,GAAI,OAAIA,EAAKG,OAAOC,MAE9BsC,EAAW,SAAA1C,GACf,IAAMI,EAAOqC,EAAQzC,GACjB2C,OAAOC,UAAUC,eAAeC,KAAKT,EAAajC,KACpDiC,EAAYjC,GAAQ,CAClBJ,KAAMA,EACN+C,OAAQ,KAKRC,EAAoB,SAAChD,EAAM8B,GAC/B,IACM1B,EAAOqC,EAAQzC,GAElBA,EAAKM,YAAYwB,WAAYA,IAC9BO,EAAYjC,GAAM2C,QAJG,IAQnBE,EAAgB,SAACjD,EAAM+B,GAC3B,IACM3B,EAAOqC,EAAQzC,GAErBA,EAAKM,YAAYyB,KAAKmB,SAAQ,SAACC,GACzB,IAASpB,EAAMoB,KACjBd,EAAYjC,GAAM2C,QALL,OAcnB,IAAiBtB,KAAjB,aAAwB,CAAC,IAAhBzB,EAAe,QACtB0C,EAAS1C,GACTgD,EAAkBhD,EAAM8B,GACxBmB,EAAcjD,EAAM+B,GAGtB,IAAMqB,EATGT,OAAOU,KAAKhB,GAAatC,KAAI,SAACK,GAAD,OAAUiC,EAAYjC,MAe5D,OAJqB,IACnBgD,EAAkB,CAAC,UAAW,CAAC,SAGbE,OAAO,EAAGzB,I,KCGlC,EAlFmB,SAAC,GAAY,IAAD,IAAV0B,KACwBC,IAAnClD,EADqB,EACrBA,YAAamD,EADQ,EACRA,KAAMtD,EADE,EACFA,OA+BrBsB,GA9BWX,oBAAe,YA8BTC,OAAOC,MACxB9B,EAAe,IAAIwE,EACvBjC,EAAOtB,EAAOC,MACd4B,YAAY,GACXE,YAAY5B,EAAYwB,UACxBK,QAAQ7B,EAAYyB,MACpBK,WAEH,OACE,gBAAC,EAAD,KACE,gBAACuB,EAAA,EAAD,CACEC,MAAOtD,EAAYsD,MACnBC,SAAUvD,EAAYuD,SACtB/B,SAAUxB,EAAYwB,SACtBlB,OAAQ,CAAEO,KAAMb,EAAYM,QAC5BkD,UAAWxD,EAAYwD,YAEzB,uBAAKxE,UAAU,uBACb,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,EAAAyE,YAAD,KAAcN,IAEhB,gBAAC,EAAD,CACE7C,OAAQ,CAAEO,KAAMb,EAAYM,UAE9B,uBAAKtB,UAAU,mBACb,uBAAKA,UAAU,QACb,qCACA,2BACGgB,EAAYyB,MAAQzB,EAAYyB,KAAKhC,KAAI,SAAAoD,GAAG,OAC3C,gBAAC,EAAA3C,KAAD,CAAMN,IAAQI,EAAYsD,MAAjB,IAA0BT,EACjC1C,GAAE,aAAec,IAAQ4B,IAASA,SAM5C,gBAAC,IAAD,CACElE,SAAS,QACTC,aAAcA,EACdC,SAAS,gBACTC,aAAa,YACbC,eAAe,c,iCChC3B,EAduB,SAAC,GAAY,IAAXkE,EAAU,EAAVA,KACvB,OACE,gBAAC,KAAD,CAAezE,MAAOA,KACpB,gBAAC,IAAD,KACE,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAK8E,MAAOL,EAAKC,IAAIlD,YAAYsD,MAAOI,MAAOT,EAAKC,IAAIlD,YAAYwD,UAAUG,YAC9E,gBAACC,EAAA,EAAD,MACA,gBAAC,EAAD,CAAYX,KAAMA,IAClB,gBAACY,EAAA,EAAD","file":"component---src-templates-blog-single-js-8e293269a02f1199d0c3.js","sourcesContent":["import styled from \"styled-components\";\n\nconst RelatedPostsWrapper = styled.div`\n\n    .widgets-title{\n        margin: 1rem 0 2rem 0.5rem;\n        h3{\n            font-size: 1.5rem;\n        }\n    }\n    @media screen and (max-width:500px){\n        .widgets-title{\n            h3{\n                text-align: center;\n            }\n        }\n    }\n\n    .cardCol{\n        padding: 0 1rem;\n    }\n    @media screen and (max-width: 992px) {\n        .cardCol{\n            padding: 0 1rem;\n            margin: auto;\n        }\n    }\n\n    .slick-list{\n        padding-top: 2px;\n        text-align: center;\n    }\n    @media screen and (max-width: 992px) {\n        .slick-list{\n            margin: 0;\t\n        }\n    }\n\n    .slick-arrow{\n        width: 4.8rem;\t\n        height: 5rem;\n    }\t\n    .slick-arrow:before{\t\n        color: ${props => props.theme.primaryColor};\n        font-size: 6rem;\n        display: inline-block;\n        height: 3rem;\n    }\n    .slick-arrow:hover:before{\t\n        color: ${props => props.theme.secondaryColor};\n    }\n    .slick-prev:before{\t\n        content: \"‹\";\t\n        line-height: 0;\n        opacity: 1;\n        color: ${props => props.theme.primaryColor};\n        margin-left: -3rem;\n    }\n    .slick-next:before{\t\n        content: \"›\";\n        line-height: 0;\n        opacity: 1;\n        margin-left: 2rem;\n        color: ${props => props.theme.primaryColor};\n    }\n    .slick-disabled{\t\n        visibility: hidden;\n    }\n    .slick-dots li button:before {\n        font-size: 0.6rem;\n        color: ${props => props.theme.secondaryColor};\n    }\n    .slick-dots li.slick-active button:before {\n        opacity: 1;\n        color: ${props => props.theme.secondaryColor};\n    }\n\n    .post-meta-block{\n        text-align: left;\n    }\n\n    .post-content-block{\n        height: 10rem;\n\n        .post-title {\n            text-align: left;\n        }\n    }\n\n    .allBlogs{\n        height: 22rem;\n    }\n\n    @media screen and (min-width: 1200px) {\n        .post-content-block {\n            height: 8rem;\n        }\n\n        .allBlogs{\n            height: 19.5rem;\n        }\n    }\n\n    @media screen and (max-width: 720px) and (min-width: 385px){\n        .post-content-block{\n            height: 8rem;\n        }\n\n        .allBlogs{\n            height: 19.5rem;\n        }\n    }\n\n    .allBlogs_card{\n        display: inline-block;\n        height: inherit;\n        width: inherit;\n        border-radius: 0.5rem;\n        box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.2);\n        transition: box-shadow 0.3s;\n\n        h2{\n            padding: 0.5rem 0;\n        }\n\n        a{\n            height: inherit;\n            width: inherit;\n            font-size: 1.8rem;\n            font-weight: 600;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            svg{\n                margin-left: 0px;\n                padding: 0.5rem 0 0.3rem;\n                font-size: 4rem;\n                transition: all 0.3s;\n            }\n        }\n        &:hover{\n            box-shadow: 0px 2px 15px 4px rgba(0,0,0,0.2);\n            h2{\n                color: ${props => props.theme.secondaryColor};\n            }\n            svg{\n                color: ${props => props.theme.secondaryColor};\n                margin-left: 3px;\n                transform: scale(1.3);\n            }\n        }\n    }\n`;\n\n\nexport default RelatedPostsWrapper;\n","import React from \"react\";\nimport { Link} from \"gatsby\";\nimport { IoIosArrowRoundForward } from \"react-icons/io\";\nimport Card from \"../Card\";\nimport RelatedPostsWrapper from \"./relatedPosts.style\";\nimport { Col } from \"../../reusecore/Layout\";\nimport Slider from \"react-slick\";\n\n\n\nconst RelatedPosts = props => {\n  \n  const {postType , relatedPosts , mainHead , lastCardHead , linkToAllItems} = props;\n\n  return (\n    <RelatedPostsWrapper>\n      <div className=\"widgets-title\">\n        <h3>{mainHead}</h3>\n      </div>\n      {\n        typeof window !== \"undefined\" &&\n                <Slider\n                  dots= { window.innerWidth < 992 }\n                  arrows={ window.innerWidth >= 992 }\n                  infinite= {false}\n                  speed= \"500\"\n                  slidesToShow= {window.innerWidth <= 720 ? 1 : window.innerWidth <= 991 ? 2 : 3}\n                  slidesToScroll= {1}\n                >\n                  {\n                    postType === \"blogs\" ? relatedPosts.map(({post}) => {\n                      return (\n                        <Col className=\"cardCol\" xs={12} key={post.fields.slug}>\n                          <Card frontmatter={post.frontmatter} fields={post.fields}/>\n                        </Col>\n                      );\n                    }):relatedPosts.map((post) => {\n                      return (\n                        <Col className=\"cardCol\" xs={12} key={post.fields.slug}>\n                          <Card frontmatter={post.frontmatter} fields={post.fields}/>\n                        </Col>\n                      );\n                    })\n                  }\n                  <Col xs={12} lg={12} className=\"allBlogs\">\n                    <div className=\"allBlogs_card\">\n                      <Link to={linkToAllItems}>\n                        <h2>{lastCardHead}</h2>\n                        <IoIosArrowRoundForward/>\n                      </Link>\n                    </div>\n                  </Col>\n                </Slider>\n      }\n    </RelatedPostsWrapper>\n  );\n};\n\nexport default RelatedPosts;\n","import styled from \"styled-components\";\n\nconst BlogPageWrapper = styled.div`\n\n    .single-post-wrapper{\n        margin-bottom: 4rem;\n    }\n\n    .post-info-block{\n        margin-top: 3rem;\n        border-bottom: 1px solid #e5e5e5;\n        padding-bottom: 2rem;\n    }\n\n    .tags{\n        display: flex;\n        span{\n            font-size: 1.2rem;\n            align-self: center;\n        }\n        a{\n            color: ${props => props.theme.black};\n            margin: 0.2rem;\n            display: inline-block;\n            padding: 0.3rem 0.8rem;\n            border-radius: 0.2rem;\n            background: #F0F0F0;\n            transition: all 0.3s linear;\n            &:hover{\n                background: ${props => props.theme.secondaryColor};\n                color: ${props => props.theme.white};\n            }\n        }\n        div{\n            display: inline-flex;\n            flex-wrap: wrap;\n        }\n    }\n    @media screen and (max-width: 360px){\n        .tags{\n            span{\n                position: relative;\n                top: 0.5rem;\n                align-self: flex-start;\n            }\n        }\n    }\n`;\nexport default BlogPageWrapper;\n","import styled from \"styled-components\";\n\nconst BlogPostSignOffWrapper  = styled.div`\n    display:flex;\n    padding:1rem 0rem;\n    .sign-off\n    {\n        padding:0rem 0.2rem;\n        font-style:italic;\n\n        img {\n            width: 5.5rem;\n            transform: skewX(-15deg);\n        }\n    }\n    \n`;\n\nexport default BlogPostSignOffWrapper;","import React from \"react\";\nimport {Link, graphql, useStaticQuery} from \"gatsby\";\nimport slugify from \"../../../utils/slugify\";\nimport layer5_img from \"../../../assets/images/layer5/layer5-only/svg/layer5-gray-no-trim.svg\";\nimport BlogPostSignOffWrapper from \"./blogpost-signoff.styles\";\n\nconst authorField = (author, isSlugAvailable) => {\n  return(\n    <>\n      {\n        isSlugAvailable ?\n          <Link to={`/community/members/${slugify(author.name)}`}>\n            <span>{author.name}</span>\n          </Link>\n          : <span>{author.name}</span>\n      }\n    </>\n  );\n};\n\nconst BlogPostSignOff = ({ author}) => {\n  let isSlugAvailable = false;\n  if(author){\n    const validMembers = useStaticQuery(\n      graphql`\n            query blogvalidMemberss{\n                allMdx(\n                    filter:{ \n                        fields:{ collection:{eq:\"members\"} }\n                    }\n                ) {\n                    nodes {\n                        frontmatter {\n                            name\n                        }\n                    }\n                }\n            }\n            `\n    );\n    isSlugAvailable = validMembers.allMdx.nodes.some(matter => matter.frontmatter.name == author.name);\n  }\n  return (\n    <BlogPostSignOffWrapper>\n      - {author.name === \"Layer5 Team\"\n        ? <p className=\"sign-off\"><img src={layer5_img} alt=\"Layer5\" /> Team</p>\n        : <p className=\"sign-off\">{authorField(author, isSlugAvailable)}</p>\n      }\n    </BlogPostSignOffWrapper>\n  );\n};\nexport default BlogPostSignOff;","import {includes, orderBy } from \"lodash\";\n\nclass RelatedPostsFactory {\n\n  constructor (posts, currentPostSlug){\n    this.posts = posts.filter(\n      (post) => post.fields.slug !== currentPostSlug\n    );\n    this.currentPostSlug = currentPostSlug;\n    this.maxPosts = 6;\n    this.category = null;\n    this.tags = [];\n  }\n\n  setMaxPosts (m) {\n    this.maxPosts = m;\n    return this;\n  }\n\n  setCategory (category) {\n    this.category = category;\n    return this;\n  }\n\n  setTags (tags) {\n    this.tags = tags;\n    return this;\n  }\n\n  getPosts () {\n    const { category, tags, posts, maxPosts } = this;\n    const identityMap = {};\n\n    if (!!tags === false || tags.length === 0) {\n      console.error(\"RelatedPostsFactory: Tags not provided, use setTags().\");\n      return [];\n    }\n\n    if (!!category === false) {\n      console.error(\"RelatedPostsFactory: Category not provided, use setCategory().\");\n      return [];\n    }\n\n    const getSlug = post => post.fields.slug;\n\n    const addToMap = post => {\n      const slug = getSlug(post);\n      if(!Object.prototype.hasOwnProperty.call(identityMap, slug)){\n        identityMap[slug] = {\n          post: post,\n          points: 0\n        };\n      }\n    };\n\n    const addCategoryPoints = (post, category) => {\n      const categoryPoints = 2;\n      const slug = getSlug(post);\n\n      if(post.frontmatter.category ===category){\n        identityMap[slug].points += categoryPoints;\n      }\n    };\n\n    const addTagsPoints = (post, tags) => {\n      const tagPoint = 1;\n      const slug = getSlug(post);\n\n      post.frontmatter.tags.forEach((tag) => {\n        if (includes(tags, tag)) {\n          identityMap[slug].points += tagPoint;\n        }\n      });\n    };\n\n    const getIdentityMapAsArray = () => {\n      return Object.keys(identityMap).map((slug) => identityMap[slug]);\n    };\n\n    for (let post of posts) {\n      addToMap(post);\n      addCategoryPoints(post, category);\n      addTagsPoints(post, tags);\n    }\n\n    const arrayIdentityMap = getIdentityMapAsArray();\n\n    const relatesPosts = orderBy(\n      arrayIdentityMap, [\"points\"], [\"desc\"]\n    );\n\n    return relatesPosts.splice(0, maxPosts);\n  }\n}\n\nexport default RelatedPostsFactory;\n","import React from \"react\";\nimport { graphql, useStaticQuery, Link } from \"gatsby\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport slugify from \"../../../utils/slugify\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport PageHeader from \"../../../reusecore/PageHeader\";\nimport RelatedPosts from \"../../../components/Related-Posts\";\nimport BlogPageWrapper from \"./blogSingle.style\";\nimport BlogPostSignOff from \"../BlogPostSignOff\";\nimport RelatedPostsFactory from \"../../../components/Related-Posts/relatedPostsFactory\";\n\nconst BlogSingle = ({data}) => {\n  const { frontmatter, body, fields } = data.mdx;\n  const blogData = useStaticQuery(\n    graphql`query relatedPosts {\n  allMdx(\n    sort: {fields: [frontmatter___date], order: DESC}\n    filter: {fields: {collection: {eq: \"blog\"}}, frontmatter: {published: {eq: true}}}\n  ) {\n    nodes {\n      frontmatter {\n        title\n        date(formatString: \"MMM Do YYYY\")\n        author\n        category\n        tags\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n          extension\n          publicURL\n        }\n      }\n      fields {\n        slug\n      }\n    }\n  }\n}\n`\n  );\n  \n  const posts = blogData.allMdx.nodes;\n  const relatedPosts = new RelatedPostsFactory (\n    posts, fields.slug\n  ).setMaxPosts(6)\n    .setCategory(frontmatter.category)\n    .setTags(frontmatter.tags)\n    .getPosts();\n\n  return (\n    <BlogPageWrapper>\n      <PageHeader\n        title={frontmatter.title}\n        subtitle={frontmatter.subtitle}\n        category={frontmatter.category}\n        author={{ name: frontmatter.author }}\n        thumbnail={frontmatter.thumbnail}\n      />\n      <div className=\"single-post-wrapper\">\n        <Container>\n          <SRLWrapper>\n            <MDXRenderer>{body}</MDXRenderer>\n          </SRLWrapper>\n          <BlogPostSignOff\n            author={{ name: frontmatter.author }}\n          />\n          <div className=\"post-info-block\">\n            <div className=\"tags\">\n              <span>Tags:</span>\n              <div>\n                {frontmatter.tags && frontmatter.tags.map(tag => (\n                  <Link key={`${frontmatter.title}-${tag}`}\n                    to={`/blog/tag/${slugify(tag)}`}>{tag}\n                  </Link>\n                ))}\n              </div>\n            </div>\n          </div>\n          <RelatedPosts\n            postType=\"blogs\"\n            relatedPosts={relatedPosts}\n            mainHead=\"Related Blogs\" \n            lastCardHead=\"All Blogs\" \n            linkToAllItems=\"/blog\"\n          />\n        </Container>\n      </div>\n    </BlogPageWrapper>\n  );\n};\n\nexport default BlogSingle;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport { ThemeProvider } from \"styled-components\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport Navigation from \"../sections/General/Navigation\";\nimport BlogSingle from \"../sections/Blog/Blog-single\";\nimport Footer from \"../sections/General/Footer\";\n\nimport { GlobalStyle } from \"../sections/app.style\";\nimport theme from \"../theme/app/themeStyles\";\n\nexport const query = graphql`query BlogsBySlug($slug: String!) {\n  mdx(fields: {slug: {eq: $slug}}) {\n    body\n    frontmatter {\n      title\n      subtitle\n      date(formatString: \"MMMM Do, YYYY\")\n      author\n      category\n      tags\n      thumbnail {\n        childImageSharp {\n          gatsbyImageData(width: 500, layout: CONSTRAINED)\n        }\n        extension\n        publicURL\n      }\n    }\n    fields {\n      slug\n    }\n  }\n}\n`;\n\nconst BlogSinglePage = ({data}) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <GlobalStyle />\n        <SEO title={data.mdx.frontmatter.title} image={data.mdx.frontmatter.thumbnail.publicURL}/>\n        <Navigation />\n        <BlogSingle data={data}/>\n        <Footer />\n      </Layout>\n    </ThemeProvider>\n  );\n};\n\nexport default BlogSinglePage;\n\n"],"sourceRoot":""}