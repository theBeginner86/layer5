<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Layer5 Resources]]></title><description><![CDATA[Expect more from your infrastructure. Cloud native, open source software for your cloud native infrastructure and applications. Allowing developers to focus on business logic, not infrastructure concerns. Empowering operators to confidentally run modern infrastructure.]]></description><link>https://layer5.io</link><generator>GatsbyJS</generator><lastBuildDate>Sun, 23 Oct 2022 15:11:13 GMT</lastBuildDate><item><title><![CDATA[Service Mesh: Istio]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Service Mesh: Istio",
  "date": "2022-08-31 10:30:05 -0530",
  "author": "Deepesha Burse",
  "thumbnail": "../../../../assets/images/service-mesh-icons/istio.svg",
  "darkthumbnail": "../../../../assets/images/service-mesh-icons/istio-white.svg",
  "description": "Explanation of Istio",
  "type": "Article",
  "published": true,
  "category": "Service Mesh",
  "mesh": "Istio",
  "tags": ["Service Mesh", "Istio"],
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("p", null, " Microservice architectures offer some solutions while posing new ones. Application division into separate services makes scaling, updating, and development easier. It also provides you with a lot more moving pieces to connect and secure. It can get quite complicated to manage all of the network services, including load balancing, traffic management, authentication and authorisation, etc. "), mdx("p", null, " Istio, an open-source service mesh created by Google, IBM, and Lyft, enables you to connect, monitor, and secure microservices that are hosted on-premises, in the cloud, or with orchestration systems like Kubernetes and Mesos. The beta version of Istio was announced in the year 2018 in KubeCon on Google Cloud. "), mdx("p", null, " Before moving on to what Istio is and how it works, let us look into what service meshes are and why there was an urgent need for them as microservices started getting used more. "), mdx("h3", null, " Service Mesh "), mdx("p", null, " A service mesh is an infrastructural layer that is used to provide secure communication between different services for on-prem, cloud or multi-cloud infrastructure. It allows us to add features like observability, traffic management, and security without having to add that to our code. The term \"service mesh\" refers to both the kind of software you employ to carry out this pattern and the security or network domain that results from its application. "), mdx("p", null, " Service meshes are divided into two parts: the control plane and the data plane. The control plane's responsibilities include securing the mesh, facilitating service discovery, doing regular health checks, enforcing policies, and handling other operational issues. A central registration of services and their corresponding IP addresses is referred to as service discovery. To share with other services how to communicate with it and to assist enforce rules on which services are allowed to communicate with which other services, the application must be registered on the control plane. "), mdx("p", null, " The communication between services, on the other hand, is handled by the data plane. Because many service mesh solutions use a sidecar proxy to manage data plane connections, the amount of knowledge that the services must have about the network environment is constrained. "), mdx("img", {
    src: serviceMesh,
    className: "image-center",
    alt: "Service Mesh"
  }), mdx("h3", null, " Inside the Istio service mesh "), mdx("p", null, " A data plane and a control plane are logically separate parts of an Istio service mesh.", mdx("ul", null, mdx("li", null, " A group of intelligent proxies (Envoy) that are deployed as sidecars make up the data plane. All network connection among the microservices is mediated and managed by these proxies. Additionally, they gather and compile data on all mesh communications. "), mdx("li", null, " The proxies are controlled and set up by the control plane to route traffic. "))), mdx("img", {
    src: arch,
    className: "image-center",
    alt: "Istio Service Mesh Architecture"
  }), mdx("h4", null, " Envoy "), mdx("p", null, " The data plane of Istio consists of the Envoy sidecar proxy. Envoy is an edge and service proxy that is open source and free that aids in separating network concerns from core applications. Applications don't care about the network topology; they just transmit and receive messages to and from localhost. Envoy is fundamentally a network proxy that operates at the OSI model's L3 and L4 layers. It operates by processing connections through a series of pluggable network filters. Envoy additionally provides support for an extra L7 layer filter for HTTP-based traffic. Envoy also offers excellent support for the HTTP/2 and gRPC transports. "), mdx("p", null, " Many of the features provided by Istio such as security, traffic control, network resiliency are possible due to Envoy. "), mdx("h4", null, " Istiod "), mdx("p", null, " Service discovery, configuration, and certificate management are offered by Istiod. "), mdx("p", null, " High level routing rules that govern traffic behavior are transformed into Envoy-specific configurations by Istiod and propagated to the sidecars during runtime. Any sidecar that complies with the Envoy API can use Pilot, which synthesizes platform-specific service discovery techniques into an abstract form. "), mdx("p", null, " Istio can handle discovery in a variety of settings, including Kubernetes or virtual machines. "), mdx("p", null, " To exert finer control over the traffic in your service mesh, you can ask Istiod to modify the Envoy configuration using the Traffic Management API. "), mdx("p", null, " Strong service-to-service and end-user authentication are made possible by Istiod security's integrated identity and credential management. Istio can be used to enhance unencrypted service mesh traffic. "), mdx("p", null, " Operators can enforce regulations with Istio based on service identity rather than on layer 3 or layer 4 network IDs, which are more prone to instability. Additionally, you can limit who has access to your services by using Istio's authorisation capability. "), mdx("p", null, " In order to enable secure mTLS connection in the data plane, Istiod performs the role of a Certificate Authority (CA) and issues certificates. "), mdx("h3", null, " Features "), mdx("h4", null, " Traffic Management "), mdx("p", null, " Performance is impacted by traffic routing, both within and across clusters, which improves deployment strategy. You can simply manage the flow of traffic and API requests between services using Istio's traffic routing rules. Istio makes it simple to configure critical activities like A/B testing, canary deployments, and staged rollouts with percentage-based traffic divides, as well as service-level attributes like circuit breakers, timeouts, and retries. "), mdx("h4", null, " Observability "), mdx("p", null, " It becomes harder to comprehend behaviour and performance as services become more complicated. Istio produces comprehensive telemetry for each communication taking place within a service mesh. This telemetry makes service activity observable, enabling operators to maintain, optimise, and debug their applications. Even better, you can implement practically all of this instrumentation without making any changes to your applications. Operators are able to fully comprehend how the monitored services are communicating with Istio. "), mdx("p", null, " Detailed metrics, distributed traces, and complete access logs are all included in Istio's telemetry. You get complete and thorough service mesh observability with Istio. "), mdx("h4", null, " Security Capabilities "), mdx("p", null, " Particular security requirements for microservices include defense against man-in-the-middle attacks, adaptable access rules, auditing tools, and mutual TLS. Istio comes with a comprehensive security solution that enables administrators to handle each of these problems. To safeguard your services and data, it offers strong identity, strong policy, transparent TLS encryption, and authentication, authorization, and audit (AAA) tools. "), mdx("p", null, " The security architecture used by Istio is built on security-by-default, and it aims to provide in-depth defense so you may deploy security-conscious apps even across networks with a low level of trust. ")));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/service-mesh/service-mesh-istio</link><guid isPermaLink="false">https://layer5.io/resources/service-mesh/service-mesh-istio</guid><dc:creator><![CDATA[Deepesha Burse]]></dc:creator><pubDate>Wed, 31 Aug 2022 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/731763d720780a49c2ffdfede8c28f4b/istio.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;p&gt; Microservice architectures offer some solutions while posing new ones. Application division into separate services makes scaling, updating, and development easier. It also provides you with a lot more moving pieces to connect and secure. It can get quite complicated to manage all of the network services, including load balancing, traffic management, authentication and authorisation, etc. &lt;/p&gt;&lt;p&gt; Istio, an open-source service mesh created by Google, IBM, and Lyft, enables you to connect, monitor, and secure microservices that are hosted on-premises, in the cloud, or with orchestration systems like Kubernetes and Mesos. The beta version of Istio was announced in the year 2018 in KubeCon on Google Cloud. &lt;/p&gt;&lt;p&gt; Before moving on to what Istio is and how it works, let us look into what service meshes are and why there was an urgent need for them as microservices started getting used more. &lt;/p&gt;&lt;h3&gt; Service Mesh &lt;/h3&gt;&lt;p&gt; A service mesh is an infrastructural layer that is used to provide secure communication between different services for on-prem, cloud or multi-cloud infrastructure. It allows us to add features like observability, traffic management, and security without having to add that to our code. The term &amp;quot;service mesh&amp;quot; refers to both the kind of software you employ to carry out this pattern and the security or network domain that results from its application. &lt;/p&gt;&lt;p&gt; Service meshes are divided into two parts: the control plane and the data plane. The control plane&amp;#x27;s responsibilities include securing the mesh, facilitating service discovery, doing regular health checks, enforcing policies, and handling other operational issues. A central registration of services and their corresponding IP addresses is referred to as service discovery. To share with other services how to communicate with it and to assist enforce rules on which services are allowed to communicate with which other services, the application must be registered on the control plane. &lt;/p&gt;&lt;p&gt; The communication between services, on the other hand, is handled by the data plane. Because many service mesh solutions use a sidecar proxy to manage data plane connections, the amount of knowledge that the services must have about the network environment is constrained. &lt;/p&gt;&lt;img src=&quot;static/service-mesh-609aa147db2609960150f75fb05ab088.svg&quot; class=&quot;image-center&quot; alt=&quot;Service Mesh&quot;/&gt;&lt;h3&gt; Inside the Istio service mesh &lt;/h3&gt;&lt;p&gt; A data plane and a control plane are logically separate parts of an Istio service mesh.&lt;ul&gt;&lt;li&gt; A group of intelligent proxies (Envoy) that are deployed as sidecars make up the data plane. All network connection among the microservices is mediated and managed by these proxies. Additionally, they gather and compile data on all mesh communications. &lt;/li&gt;&lt;li&gt; The proxies are controlled and set up by the control plane to route traffic. &lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;img src=&quot;static/arch-040603070065c5c8a1013a81573f9981.svg&quot; class=&quot;image-center&quot; alt=&quot;Istio Service Mesh Architecture&quot;/&gt;&lt;h4&gt; Envoy &lt;/h4&gt;&lt;p&gt; The data plane of Istio consists of the Envoy sidecar proxy. Envoy is an edge and service proxy that is open source and free that aids in separating network concerns from core applications. Applications don&amp;#x27;t care about the network topology; they just transmit and receive messages to and from localhost. Envoy is fundamentally a network proxy that operates at the OSI model&amp;#x27;s L3 and L4 layers. It operates by processing connections through a series of pluggable network filters. Envoy additionally provides support for an extra L7 layer filter for HTTP-based traffic. Envoy also offers excellent support for the HTTP/2 and gRPC transports. &lt;/p&gt;&lt;p&gt; Many of the features provided by Istio such as security, traffic control, network resiliency are possible due to Envoy. &lt;/p&gt;&lt;h4&gt; Istiod &lt;/h4&gt;&lt;p&gt; Service discovery, configuration, and certificate management are offered by Istiod. &lt;/p&gt;&lt;p&gt; High level routing rules that govern traffic behavior are transformed into Envoy-specific configurations by Istiod and propagated to the sidecars during runtime. Any sidecar that complies with the Envoy API can use Pilot, which synthesizes platform-specific service discovery techniques into an abstract form. &lt;/p&gt;&lt;p&gt; Istio can handle discovery in a variety of settings, including Kubernetes or virtual machines. &lt;/p&gt;&lt;p&gt; To exert finer control over the traffic in your service mesh, you can ask Istiod to modify the Envoy configuration using the Traffic Management API. &lt;/p&gt;&lt;p&gt; Strong service-to-service and end-user authentication are made possible by Istiod security&amp;#x27;s integrated identity and credential management. Istio can be used to enhance unencrypted service mesh traffic. &lt;/p&gt;&lt;p&gt; Operators can enforce regulations with Istio based on service identity rather than on layer 3 or layer 4 network IDs, which are more prone to instability. Additionally, you can limit who has access to your services by using Istio&amp;#x27;s authorisation capability. &lt;/p&gt;&lt;p&gt; In order to enable secure mTLS connection in the data plane, Istiod performs the role of a Certificate Authority (CA) and issues certificates. &lt;/p&gt;&lt;h3&gt; Features &lt;/h3&gt;&lt;h4&gt; Traffic Management &lt;/h4&gt;&lt;p&gt; Performance is impacted by traffic routing, both within and across clusters, which improves deployment strategy. You can simply manage the flow of traffic and API requests between services using Istio&amp;#x27;s traffic routing rules. Istio makes it simple to configure critical activities like A/B testing, canary deployments, and staged rollouts with percentage-based traffic divides, as well as service-level attributes like circuit breakers, timeouts, and retries. &lt;/p&gt;&lt;h4&gt; Observability &lt;/h4&gt;&lt;p&gt; It becomes harder to comprehend behaviour and performance as services become more complicated. Istio produces comprehensive telemetry for each communication taking place within a service mesh. This telemetry makes service activity observable, enabling operators to maintain, optimise, and debug their applications. Even better, you can implement practically all of this instrumentation without making any changes to your applications. Operators are able to fully comprehend how the monitored services are communicating with Istio. &lt;/p&gt;&lt;p&gt; Detailed metrics, distributed traces, and complete access logs are all included in Istio&amp;#x27;s telemetry. You get complete and thorough service mesh observability with Istio. &lt;/p&gt;&lt;h4&gt; Security Capabilities &lt;/h4&gt;&lt;p&gt; Particular security requirements for microservices include defense against man-in-the-middle attacks, adaptable access rules, auditing tools, and mutual TLS. Istio comes with a comprehensive security solution that enables administrators to handle each of these problems. To safeguard your services and data, it offers strong identity, strong policy, transparent TLS encryption, and authentication, authorization, and audit (AAA) tools. &lt;/p&gt;&lt;p&gt; The security architecture used by Istio is built on security-by-default, and it aims to provide in-depth defense so you may deploy security-conscious apps even across networks with a low level of trust. &lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[DevOps Adoption: Identifying the Right Metrics]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "DevOps Adoption: Identifying the Right Metrics",
  "thumbnail": "./devops-adoption.png",
  "darkthumbnail": "./devops-adoption.png",
  "date": "2022-08-23 10:30:05 -0530",
  "category": "DevOps",
  "tags": ["DevOps"],
  "type": "Infographic",
  "featured": false,
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("p", null, "According to Puppet\u2019s State of DevOps Report 2021, 83% of IT professionals report that their organizations have previously implemented DevOps practices or are doing so right now to unlock higher business value, achieve faster time to delivery, and boost security of systems."), mdx("p", null, "However, DevOps teams from many industries frequently struggle to identify the right\xA0metrics to monitor and measure\xA0success. In this ", mdx(Link, {
    to: DevOps,
    mdxType: "Link"
  }, "infographic"), ", we highlight the metrics all DevOps professionals should measure to:"), mdx("ul", null, mdx("li", null, "Identify places in the pipeline to speed up deployments."), mdx("li", null, "Make data-driven decisions to improve the deployment process."), mdx("li", null, "Analyze the speed at which products are reaching the market in comparison to competitors.")), mdx("h3", {
    style: {
      "marginTop": "1rem"
    }
  }, "Monitor\xA0these 5 metrics to understand how to speed up your DevOps toolchain:"), mdx("ul", null, mdx("li", null, "Deployment Time"), mdx("li", null, "Change Failure Rate"), mdx("li", null, "Recovery Time"), mdx("li", null, "Release Cadence"), mdx("li", null, "Lead Time")), mdx(Link, {
    to: DevOps,
    mdxType: "Link"
  }, mdx("img", {
    src: DevOpsAdoption,
    alt: "Right metrics for adopting DevOps"
  }))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/devops/devops-adoption-identifying-the-right-metrics</link><guid isPermaLink="false">https://layer5.io/resources/devops/devops-adoption-identifying-the-right-metrics</guid><pubDate>Tue, 23 Aug 2022 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/a2819b9ad130794ff7e748bcf7537899/devops-adoption.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;p&gt;According to Puppet’s State of DevOps Report 2021, 83% of IT professionals report that their organizations have previously implemented DevOps practices or are doing so right now to unlock higher business value, achieve faster time to delivery, and boost security of systems.&lt;/p&gt;&lt;p&gt;However, DevOps teams from many industries frequently struggle to identify the right metrics to monitor and measure success. In this &lt;a href=&quot;/static/devops-adoption-choosing-the-right-metrics-a064d95e7d0e37af18817d28b58ef4ff.pdf&quot;&gt;infographic&lt;/a&gt;, we highlight the metrics all DevOps professionals should measure to:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Identify places in the pipeline to speed up deployments.&lt;/li&gt;&lt;li&gt;Make data-driven decisions to improve the deployment process.&lt;/li&gt;&lt;li&gt;Analyze the speed at which products are reaching the market in comparison to competitors.&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;margin-top:1rem&quot;&gt;Monitor these 5 metrics to understand how to speed up your DevOps toolchain:&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Deployment Time&lt;/li&gt;&lt;li&gt;Change Failure Rate&lt;/li&gt;&lt;li&gt;Recovery Time&lt;/li&gt;&lt;li&gt;Release Cadence&lt;/li&gt;&lt;li&gt;Lead Time&lt;/li&gt;&lt;/ul&gt;&lt;a href=&quot;/static/devops-adoption-choosing-the-right-metrics-a064d95e7d0e37af18817d28b58ef4ff.pdf&quot;&gt;&lt;img src=&quot;static/devops-adoption-c302fe6ec5ec33186ca65d846ae9fd4e.png&quot; alt=&quot;Right metrics for adopting DevOps&quot;/&gt;&lt;/a&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[What is GitOps?]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "What is GitOps?",
  "thumbnail": "../../../../assets/images/socialIcons/github-dark.svg",
  "darkthumbnail": "../../../../assets/images/socialIcons/github-light.svg",
  "date": "2022-08-16 10:30:05 -0530",
  "category": "Cloud Native",
  "tags": ["GitOps"],
  "type": "Article",
  "technology": "Kubernetes",
  "product": "Meshery",
  "featured": false,
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("p", null, "GitOps revolves around the central notion that infrastructure can be treated as code. It is an operational framework that incorporates DevOps best practices for infrastructure automation, including version control, collaboration, compliance, and CI/CD tooling, which are often used for application development. Like code, not only can you store your infrastructure configuration in a source code version system, but you can also take your infrastructure configuration and any changes to its configuration through the same change management process that you do when updating your applications and services. In part, GitOps is about change management, and consequently, it is about risk reduction and risk management. When you automate a process and classify the manner in which you systemize the process, risk is reduced through the consistency and series of processes and reviews changes go through."), mdx("p", null, "GitOps is the acknowledgement that declarative systems that everything is (or should be) defined as code. With all code in a source code system, that system becomes the source of truth and in the system of record for how your infrastructure is running. Well, that is, assuming that your infrastructure configuration hasn't drifted from its desired state defined in your source code system. If Git is the source of truth, you cannot run operations manually by executing random commands. Doing so would mean that Git would stop being the only source of truth. Instead, the only goal of operations is to define the desired state as code and store it in git. Then, let the machines synchronize that with the actual state. Such synchronization must be continuous so that the two states are (almost) always in sync. In other words, GitOps is about defining everything as code, storing that code in Git, and letting the machines detect the drift between the desired and the actual state \u2013 and making sure that drifts are resolved as soon as possible, hence resulting in the two states being almost always in sync."), mdx("h2", null, " Principles of GitOps"), mdx("h3", null, " 1) Declarative"), mdx("p", null, " According to this principle, the entire system should have a declarative description. Let us first understand what a system description is. What is committed to your Git repository is called the System Description. One or more files that define each system component and its state will be included in the system description. According to GitOps, the way in which we store those definitions is crucial, and we must do so declaratively. That implies that the description of our system will be saved as data."), mdx("p", null, " In the declarative approach, we specify how we want the system to look not how we can achieve that state. If we want to make any changes, we change the description instead of the series of steps to get there. Declarative configuration is critical for GitOps because it provides a description of the system that an automated agent can understand and utilize to take action."), mdx("h3", null, " 2) Single Source of Truth"), mdx("p", null, " The second principle mandates that we keep that system description inside of Git. Therefore, we decide to maintain the official blueprints, which outline the ideal system state version in Git. A git commit is required if we wish to modify the blueprint. The blueprint can also be called the desired state. This helps developers, testers, operations, security, and automations to have a single reference and keep uniformity in everyone\u2019s vision."), mdx("p", null, " GitOps also improves a system's ability to recover from failure because it's simple to roll back an unsuccessful change or restore the entire system from the repository."), mdx("h3", null, " 3) Automated Change Delivery"), mdx("p", null, " Only automation allows us to apply modifications made to the blueprint to systems already in operation. Delivery of changes is entirely automatic. GitOps doesn't allow manual editing. Because standard workflows only need GitHub, which is such a well-known platform, automation enables changes to be delivered through simpler for developers to use workflows. Additionally, automation standardizes your delivery processes, improving the predictability and consistency of system operations."), mdx("h3", null, " 4) Automated State Control"), mdx("p", null, " The fourth principle uses automation to keep our operating system in alignment with the desired state. Drift is the deviation of the runtime state of our system from the desired state. The system's blueprints and what is actually operating in the system don't match. Therefore, if the operating system drifts from what we have specified in Git, an operator will restore it by bringing it back to the intended condition."), mdx("h2", null, " Benefits of GitOps"), mdx("h3", null, " 1) Improves compliance and security:"), mdx("p", null, " Since teams use a single platform for infrastructure management, a streamlined toolchain reduces attack surfaces. Teams can use the version control system to roll back to a desired state in the event of an assault. GitOps lessens outages and downtime as a result, allowing teams to continue working on projects in a secure environment."), mdx("h3", null, " 2) Boosts productivity and cooperation:"), mdx("p", null, " GitOps includes CI/CD pipelines, Git workflows, and infrastructure as code best practices for software development. These prerequisite tools, knowledge, and skill sets are already present in operations teams, thus adopting GitOps won't need a steep learning curve. GitOps workflows streamline procedures in order to improve visibility, establish a single source of truth, and have a small number of tools on hand."), mdx("h3", null, " 3) Automation enhances developer efficiency and lowers costs:"), mdx("p", null, " Productivity rises with CI/CD tooling and continuous deployment since teams can concentrate on development rather than laboriously manual processes thanks to automation. Since team members can use any language and tools they like before pushing updates to GitHub, GitOps workflows enhance the developer experience. Infrastructure automation increases output and decreases downtime while enabling better cloud resource management, which can also save costs."), mdx("h3", null, " 4) Increases stability and reliability:"), mdx("p", null, " Human mistake is decreased through infrastructure that is codified and repeatable. Code reviews and collaboration are made easier by merge requests, which also assist teams in finding and fixing issues before they are released to the public. Additionally, there is less risk because all infrastructure changes are tracked through merge requests and may be undone if an iteration is unsuccessful. By allowing rollbacks to a more stable state and providing distributed backup copies in the event of a significant outage, Git processes speed up recovery time. GitOps gives teams the freedom to iterate more quickly and release new features without worrying about creating an unstable environment."), mdx("h3", null, " 5) Faster development and deployment:"), mdx("p", null, " GitOps provides quicker and more frequent deployments, making it easier for teams to make a minimum viable change. Teams can ship many times per day and roll back changes if there is a problem by utilizing GitOps best practices. Team members can offer business and customer value more quickly thanks to high velocity deployments. Teams are more flexible and able to react to customer needs more quickly with continuous integration."), mdx("h2", null, " Key Components of a GitOps workflow"), mdx("p", null, " To summarize, the following are the four components we require to a GitOps workflow:"), mdx("ol", null, mdx("li", null, " Git repository: The code and configuration of the application are verified there. "), mdx("li", null, " CD pipeline: It is responsible for building, testing, and deploying the application. "), mdx("li", null, " Application deployment tool: It is employed to manage the target environment's application resources. "), mdx("li", null, " Monitoring system: It keeps tabs on the performance of the application and gives the development team feedback. "))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/cloud-native/what-is-gitops</link><guid isPermaLink="false">https://layer5.io/resources/cloud-native/what-is-gitops</guid><pubDate>Tue, 16 Aug 2022 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/a8d747801f0e266dbc9bb2b192cd3dc1/github-dark.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;p&gt;GitOps revolves around the central notion that infrastructure can be treated as code. It is an operational framework that incorporates DevOps best practices for infrastructure automation, including version control, collaboration, compliance, and CI/CD tooling, which are often used for application development. Like code, not only can you store your infrastructure configuration in a source code version system, but you can also take your infrastructure configuration and any changes to its configuration through the same change management process that you do when updating your applications and services. In part, GitOps is about change management, and consequently, it is about risk reduction and risk management. When you automate a process and classify the manner in which you systemize the process, risk is reduced through the consistency and series of processes and reviews changes go through.&lt;/p&gt;&lt;p&gt;GitOps is the acknowledgement that declarative systems that everything is (or should be) defined as code. With all code in a source code system, that system becomes the source of truth and in the system of record for how your infrastructure is running. Well, that is, assuming that your infrastructure configuration hasn&amp;#x27;t drifted from its desired state defined in your source code system. If Git is the source of truth, you cannot run operations manually by executing random commands. Doing so would mean that Git would stop being the only source of truth. Instead, the only goal of operations is to define the desired state as code and store it in git. Then, let the machines synchronize that with the actual state. Such synchronization must be continuous so that the two states are (almost) always in sync. In other words, GitOps is about defining everything as code, storing that code in Git, and letting the machines detect the drift between the desired and the actual state – and making sure that drifts are resolved as soon as possible, hence resulting in the two states being almost always in sync.&lt;/p&gt;&lt;h2&gt; Principles of GitOps&lt;/h2&gt;&lt;h3&gt; 1) Declarative&lt;/h3&gt;&lt;p&gt; According to this principle, the entire system should have a declarative description. Let us first understand what a system description is. What is committed to your Git repository is called the System Description. One or more files that define each system component and its state will be included in the system description. According to GitOps, the way in which we store those definitions is crucial, and we must do so declaratively. That implies that the description of our system will be saved as data.&lt;/p&gt;&lt;p&gt; In the declarative approach, we specify how we want the system to look not how we can achieve that state. If we want to make any changes, we change the description instead of the series of steps to get there. Declarative configuration is critical for GitOps because it provides a description of the system that an automated agent can understand and utilize to take action.&lt;/p&gt;&lt;h3&gt; 2) Single Source of Truth&lt;/h3&gt;&lt;p&gt; The second principle mandates that we keep that system description inside of Git. Therefore, we decide to maintain the official blueprints, which outline the ideal system state version in Git. A git commit is required if we wish to modify the blueprint. The blueprint can also be called the desired state. This helps developers, testers, operations, security, and automations to have a single reference and keep uniformity in everyone’s vision.&lt;/p&gt;&lt;p&gt; GitOps also improves a system&amp;#x27;s ability to recover from failure because it&amp;#x27;s simple to roll back an unsuccessful change or restore the entire system from the repository.&lt;/p&gt;&lt;h3&gt; 3) Automated Change Delivery&lt;/h3&gt;&lt;p&gt; Only automation allows us to apply modifications made to the blueprint to systems already in operation. Delivery of changes is entirely automatic. GitOps doesn&amp;#x27;t allow manual editing. Because standard workflows only need GitHub, which is such a well-known platform, automation enables changes to be delivered through simpler for developers to use workflows. Additionally, automation standardizes your delivery processes, improving the predictability and consistency of system operations.&lt;/p&gt;&lt;h3&gt; 4) Automated State Control&lt;/h3&gt;&lt;p&gt; The fourth principle uses automation to keep our operating system in alignment with the desired state. Drift is the deviation of the runtime state of our system from the desired state. The system&amp;#x27;s blueprints and what is actually operating in the system don&amp;#x27;t match. Therefore, if the operating system drifts from what we have specified in Git, an operator will restore it by bringing it back to the intended condition.&lt;/p&gt;&lt;h2&gt; Benefits of GitOps&lt;/h2&gt;&lt;h3&gt; 1) Improves compliance and security:&lt;/h3&gt;&lt;p&gt; Since teams use a single platform for infrastructure management, a streamlined toolchain reduces attack surfaces. Teams can use the version control system to roll back to a desired state in the event of an assault. GitOps lessens outages and downtime as a result, allowing teams to continue working on projects in a secure environment.&lt;/p&gt;&lt;h3&gt; 2) Boosts productivity and cooperation:&lt;/h3&gt;&lt;p&gt; GitOps includes CI/CD pipelines, Git workflows, and infrastructure as code best practices for software development. These prerequisite tools, knowledge, and skill sets are already present in operations teams, thus adopting GitOps won&amp;#x27;t need a steep learning curve. GitOps workflows streamline procedures in order to improve visibility, establish a single source of truth, and have a small number of tools on hand.&lt;/p&gt;&lt;h3&gt; 3) Automation enhances developer efficiency and lowers costs:&lt;/h3&gt;&lt;p&gt; Productivity rises with CI/CD tooling and continuous deployment since teams can concentrate on development rather than laboriously manual processes thanks to automation. Since team members can use any language and tools they like before pushing updates to GitHub, GitOps workflows enhance the developer experience. Infrastructure automation increases output and decreases downtime while enabling better cloud resource management, which can also save costs.&lt;/p&gt;&lt;h3&gt; 4) Increases stability and reliability:&lt;/h3&gt;&lt;p&gt; Human mistake is decreased through infrastructure that is codified and repeatable. Code reviews and collaboration are made easier by merge requests, which also assist teams in finding and fixing issues before they are released to the public. Additionally, there is less risk because all infrastructure changes are tracked through merge requests and may be undone if an iteration is unsuccessful. By allowing rollbacks to a more stable state and providing distributed backup copies in the event of a significant outage, Git processes speed up recovery time. GitOps gives teams the freedom to iterate more quickly and release new features without worrying about creating an unstable environment.&lt;/p&gt;&lt;h3&gt; 5) Faster development and deployment:&lt;/h3&gt;&lt;p&gt; GitOps provides quicker and more frequent deployments, making it easier for teams to make a minimum viable change. Teams can ship many times per day and roll back changes if there is a problem by utilizing GitOps best practices. Team members can offer business and customer value more quickly thanks to high velocity deployments. Teams are more flexible and able to react to customer needs more quickly with continuous integration.&lt;/p&gt;&lt;h2&gt; Key Components of a GitOps workflow&lt;/h2&gt;&lt;p&gt; To summarize, the following are the four components we require to a GitOps workflow:&lt;/p&gt;&lt;ol&gt;&lt;li&gt; Git repository: The code and configuration of the application are verified there. &lt;/li&gt;&lt;li&gt; CD pipeline: It is responsible for building, testing, and deploying the application. &lt;/li&gt;&lt;li&gt; Application deployment tool: It is employed to manage the target environment&amp;#x27;s application resources. &lt;/li&gt;&lt;li&gt; Monitoring system: It keeps tabs on the performance of the application and gives the development team feedback. &lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Service Mesh: Consul]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Service Mesh: Consul",
  "date": "2022-08-05 10:30:05 -0530",
  "author": "Deepesha Burse",
  "thumbnail": "../../../../assets/images/service-mesh-icons/consul.svg",
  "darkthumbnail": "../../../../assets/images/service-mesh-icons/consul.svg",
  "description": "Explanation of Consul Connect",
  "type": "Article",
  "published": true,
  "category": "Service Mesh",
  "mesh": "Consul",
  "tags": ["Service Mesh", "Consul"],
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("h3", null, " What is a Service Mesh? "), mdx("p", null, " A service mesh is a dedicated layer that provides secure service-to-service communication for on-prem, cloud, or multi-cloud infrastructure. Although service meshes are typically used with a microservice architectural pattern, they are useful in any situation involving complex networking. Their functionalities include traffic control, resiliency, observability and security. Traffic steering is used for content and it allows optimal usage of our resources. Service meshes provide control over chaotic situations (which usually arise in complex networks) along with proper identification and policies to enhance security. "), mdx("p", null, " Service meshes can be divided into the control plane and the data plane. The role of the control plane is to secure the mesh, facilitate service discovery, conduct frequent health checks, enforce policies and other operational concerns. Service discovery refers to a central registry of the services and their respective IP addresses. The application needs to be registered on the control plane for it to be able to share with other services how to communicate with it and helps to enforce rules on which service gets to communicate with which other services. "), mdx("p", null, " The data plane, on the other hand, handles the communication between services. The amount of knowledge that the services need to have about the network environment is limited by the fact that many service mesh solutions use a sidecar proxy to conduct data plane connections. "), mdx("img", {
    src: serviceMesh,
    className: "image-center",
    alt: "Service Mesh"
  }), mdx("h3", null, " What is Consul? "), mdx("p", null, " Consul Service Mesh (also known as Consul Connect) provides service-to-service connection authorization and encryption using mutual Transport Layer Security (TLS). Consul is the control plane of the service mesh. Consul can be used with Virtual Machines (VMs), containers, or with container orchestration platforms such as Nomad and Kubernetes. Applications can use sidecar proxies to establish TLS connections for inbound and outbound connections or natively integrate with Connect by using Connect aware SDKs for optimal performance and security. "), mdx("p", null, " It is a multi-networking tool that provides a fully functional service mesh solution to address the networking and security issues associated with running cloud infrastructure and microservices. Consul offers a software technique for segmentation and routing. It also offers advantages such as handling failures, retries, and network observability. You can utilize any of these characteristics alone as required or combine them to create a full service mesh and achieve zero trust security. "), mdx("h3", null, " Architecture "), mdx("p", null, " Consul is a distributed system built for a node cluster to operate on. A physical server, cloud instance, virtual machine, or container can all function as a Consul node. The collection of interconnected nodes that Consul runs on is known as a datacenter. Consul supports multiple datacenters and considers this as a common case. It is expected that there will be many clients and three to five servers in a datacenter. This creates a balance between performance and availability in the event of a breakdown because consensus slows down as more machines are added. The number of clients, however, is unlimited and can easily increase to thousands or tens of thousands. "), mdx("img", {
    src: datacenter,
    className: "image-center",
    alt: "Image of datacenter"
  }), mdx("p", null, " The Consul Agent is responsible for maintaining membership information, registering services, running checks, responding to queries, etc. It is required to run on every node that is a part of the Consul cluster. In some places, client agents may cache data from the servers to make it available locally for performance and reliability. They can either run in server mode or client mode. Client nodes make up for most of the cluster and are lightweight processes. They act as an interface between server nodes for most operations. They run on every node where services are running. "), mdx("p", null, " Along with core agent operations, a server node participates in the consensus quorum. The Raft protocol, which offers excellent consistency and availability in the event of failure, serves as the foundation for the quorum. Because they consume more resources than client nodes, server nodes should run on dedicated instances. "), mdx("img", {
    src: agent,
    className: "image-center",
    alt: "Consul Agent"
  }), mdx("p", null, " A per-service proxy sidecar manages incoming and outgoing service connections by automatically wrapping and verifying TLS connections. Consul includes its own built-in L4 proxy and has first class support for Envoy. Other than this, we can choose to use any other proxy to plug in as well. The following diagram shows how proxies work: "), mdx("img", {
    src: proxy,
    className: "image-center",
    alt: "Side-car proxy"
  }), mdx("p", null, " The lifecycle of a Consul cluster:", mdx("ol", null, mdx("li", null, " An agent is started. "), mdx("li", null, " An agent joins the cluster. "), mdx("li", null, " Information of the agent is communicated throughout the cluster"), mdx("li", null, " Existing servers will begin replicating to the new node. "))), mdx("h3", null, " Benefits and Compatibility of Consul Connect "), mdx("p", null, " New methods of networking are necessary due to the development of cloud infrastructure and microservices designs. There are numerous tools and companies, all of which make different attempts to address the issue. The Consul service mesh solution offers a pure software approach with an emphasis on simplicity and wide compatibility and makes no assumptions about the underlying network. "), mdx("p", null, " Consul service mesh streamlines application deployment into a zero-trust network and makes service discovery easier in complex networking situations. "), mdx("p", null, " Features of Consul Service Mesh:", mdx("br", null), mdx("ol", null, mdx("li", null, " Service Discovery", mdx("p", null, " Consul provides a service catalog, configurable service routing, health checks, automatic load balancing, and geo-failover across multiple instances of the same service. The capacity to control changes in the service landscape of your network becomes essential when new versions of a service are introduced and must coexist with existing instances of the same application, frequently running on different versions. The agent provides a simple service definition format to declare the availability of a service and to potentially associate it with a health check. ")), mdx("li", null, " Zero-trust Security Model", mdx("p", null, " Trust can be exploited and with the increasing number of services, there are higher chances of breach. The Consul service mesh control plane can be configured to enforce mutual TLS (mTLS), and will automatically generate and distribute the TLS certificates for every service in the mesh. The certificates are used for both service identity verification and communication encryption. ")), mdx("li", null, " Simplify Application Security with Intentions", mdx("p", null, " Communication between services is secure within the mesh once the service sidecar proxies have been set up. To designate which services are permitted to communicate with one another, you might want to build a more granular set of policies. Consul Intentions are used to limit which services can make requests or create connections and define access control for services through Connect. We can manage intentions via the UI, CLI, or API. The proxy or a natively integrated application enforces intentions on inbound connections or requests. ")))), mdx("p", null, " Compatibility of Consul Connect:", mdx("br", null), mdx("ol", null, mdx("li", null, " First-Class Kubernetes Support", mdx("p", null, " By offering an official Helm chart for installing, configuring, and upgrading Consul on Kubernetes, Consul enables first-class Kubernetes support. The chart automates Kubernetes's Consul service mesh installation and configuration. ")), mdx("li", null, " Platform Agnostic and Multi-Cluster Mesh", mdx("p", null, " Consul works with all cloud providers and architectures. You can expand the scope of your Kubernetes clusters to include services that aren't run using Kubernetes by using the service catalog sync and auto-join features. In order to facilitate safe service-to-service communication between Nomad tasks and jobs, Consul additionally interfaces with HashiCorp Nomad. "))))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/service-mesh/service-mesh-consul</link><guid isPermaLink="false">https://layer5.io/resources/service-mesh/service-mesh-consul</guid><dc:creator><![CDATA[Deepesha Burse]]></dc:creator><pubDate>Fri, 05 Aug 2022 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/ed21c2c53f2c64e86b016cfdfe7018ae/consul.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;h3&gt; What is a Service Mesh? &lt;/h3&gt;&lt;p&gt; A service mesh is a dedicated layer that provides secure service-to-service communication for on-prem, cloud, or multi-cloud infrastructure. Although service meshes are typically used with a microservice architectural pattern, they are useful in any situation involving complex networking. Their functionalities include traffic control, resiliency, observability and security. Traffic steering is used for content and it allows optimal usage of our resources. Service meshes provide control over chaotic situations (which usually arise in complex networks) along with proper identification and policies to enhance security. &lt;/p&gt;&lt;p&gt; Service meshes can be divided into the control plane and the data plane. The role of the control plane is to secure the mesh, facilitate service discovery, conduct frequent health checks, enforce policies and other operational concerns. Service discovery refers to a central registry of the services and their respective IP addresses. The application needs to be registered on the control plane for it to be able to share with other services how to communicate with it and helps to enforce rules on which service gets to communicate with which other services. &lt;/p&gt;&lt;p&gt; The data plane, on the other hand, handles the communication between services. The amount of knowledge that the services need to have about the network environment is limited by the fact that many service mesh solutions use a sidecar proxy to conduct data plane connections. &lt;/p&gt;&lt;img src=&quot;static/service-mesh-609aa147db2609960150f75fb05ab088.svg&quot; class=&quot;image-center&quot; alt=&quot;Service Mesh&quot;/&gt;&lt;h3&gt; What is Consul? &lt;/h3&gt;&lt;p&gt; Consul Service Mesh (also known as Consul Connect) provides service-to-service connection authorization and encryption using mutual Transport Layer Security (TLS). Consul is the control plane of the service mesh. Consul can be used with Virtual Machines (VMs), containers, or with container orchestration platforms such as Nomad and Kubernetes. Applications can use sidecar proxies to establish TLS connections for inbound and outbound connections or natively integrate with Connect by using Connect aware SDKs for optimal performance and security. &lt;/p&gt;&lt;p&gt; It is a multi-networking tool that provides a fully functional service mesh solution to address the networking and security issues associated with running cloud infrastructure and microservices. Consul offers a software technique for segmentation and routing. It also offers advantages such as handling failures, retries, and network observability. You can utilize any of these characteristics alone as required or combine them to create a full service mesh and achieve zero trust security. &lt;/p&gt;&lt;h3&gt; Architecture &lt;/h3&gt;&lt;p&gt; Consul is a distributed system built for a node cluster to operate on. A physical server, cloud instance, virtual machine, or container can all function as a Consul node. The collection of interconnected nodes that Consul runs on is known as a datacenter. Consul supports multiple datacenters and considers this as a common case. It is expected that there will be many clients and three to five servers in a datacenter. This creates a balance between performance and availability in the event of a breakdown because consensus slows down as more machines are added. The number of clients, however, is unlimited and can easily increase to thousands or tens of thousands. &lt;/p&gt;&lt;img src=&quot;static/datacenter-architecture-37152141459a591a624d6878e71817de.png&quot; class=&quot;image-center&quot; alt=&quot;Image of datacenter&quot;/&gt;&lt;p&gt; The Consul Agent is responsible for maintaining membership information, registering services, running checks, responding to queries, etc. It is required to run on every node that is a part of the Consul cluster. In some places, client agents may cache data from the servers to make it available locally for performance and reliability. They can either run in server mode or client mode. Client nodes make up for most of the cluster and are lightweight processes. They act as an interface between server nodes for most operations. They run on every node where services are running. &lt;/p&gt;&lt;p&gt; Along with core agent operations, a server node participates in the consensus quorum. The Raft protocol, which offers excellent consistency and availability in the event of failure, serves as the foundation for the quorum. Because they consume more resources than client nodes, server nodes should run on dedicated instances. &lt;/p&gt;&lt;img src=&quot;static/consul-agent-architecture-089f5381fe7bad46ed0bad733b454cc4.png&quot; class=&quot;image-center&quot; alt=&quot;Consul Agent&quot;/&gt;&lt;p&gt; A per-service proxy sidecar manages incoming and outgoing service connections by automatically wrapping and verifying TLS connections. Consul includes its own built-in L4 proxy and has first class support for Envoy. Other than this, we can choose to use any other proxy to plug in as well. The following diagram shows how proxies work: &lt;/p&gt;&lt;img src=&quot;static/service-proxy-architecture-a6b5364641023e65373a238beaf79ca0.png&quot; class=&quot;image-center&quot; alt=&quot;Side-car proxy&quot;/&gt;&lt;p&gt; The lifecycle of a Consul cluster:&lt;ol&gt;&lt;li&gt; An agent is started. &lt;/li&gt;&lt;li&gt; An agent joins the cluster. &lt;/li&gt;&lt;li&gt; Information of the agent is communicated throughout the cluster&lt;/li&gt;&lt;li&gt; Existing servers will begin replicating to the new node. &lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;&lt;h3&gt; Benefits and Compatibility of Consul Connect &lt;/h3&gt;&lt;p&gt; New methods of networking are necessary due to the development of cloud infrastructure and microservices designs. There are numerous tools and companies, all of which make different attempts to address the issue. The Consul service mesh solution offers a pure software approach with an emphasis on simplicity and wide compatibility and makes no assumptions about the underlying network. &lt;/p&gt;&lt;p&gt; Consul service mesh streamlines application deployment into a zero-trust network and makes service discovery easier in complex networking situations. &lt;/p&gt;&lt;p&gt; Features of Consul Service Mesh:&lt;br/&gt;&lt;ol&gt;&lt;li&gt; Service Discovery&lt;p&gt; Consul provides a service catalog, configurable service routing, health checks, automatic load balancing, and geo-failover across multiple instances of the same service. The capacity to control changes in the service landscape of your network becomes essential when new versions of a service are introduced and must coexist with existing instances of the same application, frequently running on different versions. The agent provides a simple service definition format to declare the availability of a service and to potentially associate it with a health check. &lt;/p&gt;&lt;/li&gt;&lt;li&gt; Zero-trust Security Model&lt;p&gt; Trust can be exploited and with the increasing number of services, there are higher chances of breach. The Consul service mesh control plane can be configured to enforce mutual TLS (mTLS), and will automatically generate and distribute the TLS certificates for every service in the mesh. The certificates are used for both service identity verification and communication encryption. &lt;/p&gt;&lt;/li&gt;&lt;li&gt; Simplify Application Security with Intentions&lt;p&gt; Communication between services is secure within the mesh once the service sidecar proxies have been set up. To designate which services are permitted to communicate with one another, you might want to build a more granular set of policies. Consul Intentions are used to limit which services can make requests or create connections and define access control for services through Connect. We can manage intentions via the UI, CLI, or API. The proxy or a natively integrated application enforces intentions on inbound connections or requests. &lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;&lt;p&gt; Compatibility of Consul Connect:&lt;br/&gt;&lt;ol&gt;&lt;li&gt; First-Class Kubernetes Support&lt;p&gt; By offering an official Helm chart for installing, configuring, and upgrading Consul on Kubernetes, Consul enables first-class Kubernetes support. The chart automates Kubernetes&amp;#x27;s Consul service mesh installation and configuration. &lt;/p&gt;&lt;/li&gt;&lt;li&gt; Platform Agnostic and Multi-Cluster Mesh&lt;p&gt; Consul works with all cloud providers and architectures. You can expand the scope of your Kubernetes clusters to include services that aren&amp;#x27;t run using Kubernetes by using the service catalog sync and auto-join features. In order to facilitate safe service-to-service communication between Nomad tasks and jobs, Consul additionally interfaces with HashiCorp Nomad. &lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Managing Containers]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Managing Containers",
  "thumbnail": "./docker.svg",
  "darkthumbnail": "./docker.svg",
  "date": "2022-07-06 10:30:05 -0530",
  "category": "Kubernetes",
  "type": "Article",
  "technology": "Kubernetes",
  "tags": ["Docker", "Kubernetes"],
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("div", {
    className: "intro"
  }, mdx("p", null, "Learn more about managing containers with our ", mdx("a", {
    className: "blog",
    href: "https://github.com/layer5io/containers-101-workshop"
  }, "Containers 101 Workshop"), ". Walk-through four hands-on exercises with Docker.")), mdx("p", null, "Container management refers to a set of practices that govern and maintain containerization software. Container management tools automate the creation, deployment, destruction and scaling of application or systems containers. Containerization is an approach to software development that isolates processes that share an OS kernel -- unlike virtual machines (VMs), which require their own -- and binds application libraries and dependencies into one deployable unit. This makes containers lightweight to run, as they require only the application configuration information and code from the host OS. This design also increases interoperability compared to VM hosting. Each container instance can scale independently with demand."), mdx("p", null, "Modern Linux container technology was popularized by the Docker project, which started in 2013. Interest soon expanded beyond containerization itself, to the intricacies of how to effectively and efficiently deploy and manage containers."), mdx("p", null, "In 2015, Google introduced the container orchestration platform Kubernetes, which was based on its internal data center management software called Borg. At its most basic level, open source Kubernetes automates the process of running, scheduling, scaling and managing a group of Linux containers. With more stable releases throughout 2017 and 2018, Kubernetes rapidly attracted industry adoption, and today it is the de facto container management technology."), mdx("p", null, "IT teams use containers for cloud-native, distributed -- often microservices- based -- applications, and to package legacy applications for increased portability and efficient deployment. Containers have surged in popularity as IT organizations embrace DevOps, which emphasizes rapid application deployment. Organizations can containerize application code from development through test and deployment."), mdx("h2", null, "Benefits of container management"), mdx("p", null, "The chief benefit of container management is simplified management for clusters of container hosts. IT admins and developers can start, stop and restart containers, as well as release updates or check health status, among other actions. Container management includes orchestration and schedulers, security tools, storage, and virtual network management systems and monitoring."), mdx("h3", null, "Wrangling container sprawl"), mdx("p", null, "Organizations can set policies that ensure containers share a host -- or cannot share a host -- based on application design and resource requirements For example, IT admins should colocate containers that communicate heavily to avoid latency. Or, containers with large resource requirements might require an anti-affinity rule to avoid physical storage overload. Container instances can spin up to meet demand -- then shut down -- frequently. Containers also must communicate for distributed applications to work, without opening an attack surface to hackers."), mdx("p", null, "A container management ecosystem automates orchestration, log management, monitoring, networking, load balancing, testing and secrets management, along with other processes. Automation enables IT organizations to manage large containerized environments that are too vast for a human operator to keep up with."), mdx("h2", null, "Challenges of container management"), mdx("p", null, "One drawback to container management is its complexity, particularly as it relates to open source container orchestration platforms such as Kubernetes and Apache Mesos. The installation and setup for container orchestration tools can be arduous and error prone. IT operations staff need container management skills and training. It is crucial, for example, to understand the relationships between clusters of host servers as well as how the container network corresponds to applications and dependencies."), mdx("p", null, "Issues of persistence and storage present significant container management challenges. Containers are ephemeral -- designed to exist only when needed. Stateful application activities are difficult because any data produced within a container ceases to exist when the container spins down."), mdx("p", null, "Container security is another concern. Container orchestrators have several components, including an API server and monitoring and management tools. These pieces make it a major attack vector for hackers. Container management system vulnerabilities mirror standard types of OS vulnerabilities, such as those related to access and authorization, images and intercontainer network traffic. Organizations should minimize risk with security best practices -- for example, identify trusted image sources and close network connections unless they're needed."), mdx("h2", null, "Container management strategy"), mdx("p", null, "Forward-thinking enterprise IT organizations and startups alike use containers and container management tools to quickly deploy and update applications. IT organizations must first implement the correct infrastructure setup for containers, with a solid grasp of the scope and scale of the containerization project in terms of business projections for growth and developers' requirements. IT admins must also know how the existing infrastructure's pieces connect and communicate to preserve those relationships in a containerized environment. Containers can run on bare-metal servers, VMs or in the cloud -- or in a hybrid setup -- based on IT requirements."), mdx("p", null, "In addition, the container management tool or platform should meet the project's needs for multi-tenancy; user and application isolation; authentication; resource requirements and constraints; logging, monitoring and alerts; backup management; license management; and other management tasks. IT organizations should understand their hosting commitment and future container plans, such as if the company will adopt multiple cloud platforms or a microservices architecture."), mdx("h2", null, "Kubernetes implementation considerations"), mdx("p", null, "As described above, containers are arranged into pods in Kubernetes, which run on clusters of nodes; pods, nodes and clusters are controlled by a master. One pod can include one or multiple containers. IT admins should carefully consider the relationships between pods, nodes and clusters when they set up Kubernetes."), mdx("p", null, "Organizations should plan their container deployment based on how many pieces of the application can scale under load -- this depends on the application, not the deployment method. Additionally, capacity planning is vital for balanced pod-to-node mapping, and IT admins should ensure high availability with redundancy with master node components."), mdx("p", null, "IT organizations can address container security concerns by applying some general IT security best practices to containerization. For example, create multiple security layers throughout the environment, scan all container images for vulnerabilities, enforce signed certificates and run the most up-to-date version of any container or application image. Containers introduce the benefits of an immutable infrastructure methodology as well; the regular disposal and redeployment of containers, with their associated components and dependencies, improves overall system availability and security. Additionally, Kubernetes multi-tenancy promises greater resource isolation, but recently revealed security vulnerabilities make multicluster management preferred for now."), mdx("p", null, "Networking is another significant factor. Kubernetes networking occurs within pods, between pods and in user-to-containerized resource connections. Kubernetes enables pods and nodes to communicate without address translation, allocating subnets as necessary. Lastly, IT admins working with Kubernetes should prepare to troubleshoot common container performance problems, including those caused by unavailable nodes and noisy neighbors, in an implementation.")));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/kubernetes/managing-containers</link><guid isPermaLink="false">https://layer5.io/resources/kubernetes/managing-containers</guid><pubDate>Wed, 06 Jul 2022 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/70f4c7f444e8b3494ddc0fb955f86d40/docker.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;div class=&quot;intro&quot;&gt;&lt;p&gt;Learn more about managing containers with our &lt;a class=&quot;blog&quot; href=&quot;https://github.com/layer5io/containers-101-workshop&quot;&gt;Containers 101 Workshop&lt;/a&gt;. Walk-through four hands-on exercises with Docker.&lt;/p&gt;&lt;/div&gt;&lt;p&gt;Container management refers to a set of practices that govern and maintain containerization software. Container management tools automate the creation, deployment, destruction and scaling of application or systems containers. Containerization is an approach to software development that isolates processes that share an OS kernel -- unlike virtual machines (VMs), which require their own -- and binds application libraries and dependencies into one deployable unit. This makes containers lightweight to run, as they require only the application configuration information and code from the host OS. This design also increases interoperability compared to VM hosting. Each container instance can scale independently with demand.&lt;/p&gt;&lt;p&gt;Modern Linux container technology was popularized by the Docker project, which started in 2013. Interest soon expanded beyond containerization itself, to the intricacies of how to effectively and efficiently deploy and manage containers.&lt;/p&gt;&lt;p&gt;In 2015, Google introduced the container orchestration platform Kubernetes, which was based on its internal data center management software called Borg. At its most basic level, open source Kubernetes automates the process of running, scheduling, scaling and managing a group of Linux containers. With more stable releases throughout 2017 and 2018, Kubernetes rapidly attracted industry adoption, and today it is the de facto container management technology.&lt;/p&gt;&lt;p&gt;IT teams use containers for cloud-native, distributed -- often microservices- based -- applications, and to package legacy applications for increased portability and efficient deployment. Containers have surged in popularity as IT organizations embrace DevOps, which emphasizes rapid application deployment. Organizations can containerize application code from development through test and deployment.&lt;/p&gt;&lt;h2&gt;Benefits of container management&lt;/h2&gt;&lt;p&gt;The chief benefit of container management is simplified management for clusters of container hosts. IT admins and developers can start, stop and restart containers, as well as release updates or check health status, among other actions. Container management includes orchestration and schedulers, security tools, storage, and virtual network management systems and monitoring.&lt;/p&gt;&lt;h3&gt;Wrangling container sprawl&lt;/h3&gt;&lt;p&gt;Organizations can set policies that ensure containers share a host -- or cannot share a host -- based on application design and resource requirements For example, IT admins should colocate containers that communicate heavily to avoid latency. Or, containers with large resource requirements might require an anti-affinity rule to avoid physical storage overload. Container instances can spin up to meet demand -- then shut down -- frequently. Containers also must communicate for distributed applications to work, without opening an attack surface to hackers.&lt;/p&gt;&lt;p&gt;A container management ecosystem automates orchestration, log management, monitoring, networking, load balancing, testing and secrets management, along with other processes. Automation enables IT organizations to manage large containerized environments that are too vast for a human operator to keep up with.&lt;/p&gt;&lt;h2&gt;Challenges of container management&lt;/h2&gt;&lt;p&gt;One drawback to container management is its complexity, particularly as it relates to open source container orchestration platforms such as Kubernetes and Apache Mesos. The installation and setup for container orchestration tools can be arduous and error prone. IT operations staff need container management skills and training. It is crucial, for example, to understand the relationships between clusters of host servers as well as how the container network corresponds to applications and dependencies.&lt;/p&gt;&lt;p&gt;Issues of persistence and storage present significant container management challenges. Containers are ephemeral -- designed to exist only when needed. Stateful application activities are difficult because any data produced within a container ceases to exist when the container spins down.&lt;/p&gt;&lt;p&gt;Container security is another concern. Container orchestrators have several components, including an API server and monitoring and management tools. These pieces make it a major attack vector for hackers. Container management system vulnerabilities mirror standard types of OS vulnerabilities, such as those related to access and authorization, images and intercontainer network traffic. Organizations should minimize risk with security best practices -- for example, identify trusted image sources and close network connections unless they&amp;#x27;re needed.&lt;/p&gt;&lt;h2&gt;Container management strategy&lt;/h2&gt;&lt;p&gt;Forward-thinking enterprise IT organizations and startups alike use containers and container management tools to quickly deploy and update applications. IT organizations must first implement the correct infrastructure setup for containers, with a solid grasp of the scope and scale of the containerization project in terms of business projections for growth and developers&amp;#x27; requirements. IT admins must also know how the existing infrastructure&amp;#x27;s pieces connect and communicate to preserve those relationships in a containerized environment. Containers can run on bare-metal servers, VMs or in the cloud -- or in a hybrid setup -- based on IT requirements.&lt;/p&gt;&lt;p&gt;In addition, the container management tool or platform should meet the project&amp;#x27;s needs for multi-tenancy; user and application isolation; authentication; resource requirements and constraints; logging, monitoring and alerts; backup management; license management; and other management tasks. IT organizations should understand their hosting commitment and future container plans, such as if the company will adopt multiple cloud platforms or a microservices architecture.&lt;/p&gt;&lt;h2&gt;Kubernetes implementation considerations&lt;/h2&gt;&lt;p&gt;As described above, containers are arranged into pods in Kubernetes, which run on clusters of nodes; pods, nodes and clusters are controlled by a master. One pod can include one or multiple containers. IT admins should carefully consider the relationships between pods, nodes and clusters when they set up Kubernetes.&lt;/p&gt;&lt;p&gt;Organizations should plan their container deployment based on how many pieces of the application can scale under load -- this depends on the application, not the deployment method. Additionally, capacity planning is vital for balanced pod-to-node mapping, and IT admins should ensure high availability with redundancy with master node components.&lt;/p&gt;&lt;p&gt;IT organizations can address container security concerns by applying some general IT security best practices to containerization. For example, create multiple security layers throughout the environment, scan all container images for vulnerabilities, enforce signed certificates and run the most up-to-date version of any container or application image. Containers introduce the benefits of an immutable infrastructure methodology as well; the regular disposal and redeployment of containers, with their associated components and dependencies, improves overall system availability and security. Additionally, Kubernetes multi-tenancy promises greater resource isolation, but recently revealed security vulnerabilities make multicluster management preferred for now.&lt;/p&gt;&lt;p&gt;Networking is another significant factor. Kubernetes networking occurs within pods, between pods and in user-to-containerized resource connections. Kubernetes enables pods and nodes to communicate without address translation, allocating subnets as necessary. Lastly, IT admins working with Kubernetes should prepare to troubleshoot common container performance problems, including those caused by unavailable nodes and noisy neighbors, in an implementation.&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Kubernetes Architecture 101]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Kubernetes Architecture 101",
  "thumbnail": "../kubernetes.svg",
  "darkthumbnail": "../kubernetes.svg",
  "date": "2022-07-05 10:30:05 -0530",
  "category": "Kubernetes",
  "type": "Article",
  "technology": "Kubernetes",
  "tags": ["Docker", "Kubernetes"],
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("p", null, "The way Kubernetes is architected is what makes it powerful. Kubernetes has a basic client and server architecture, but it goes way beyond that. Kubernetes has the ability to do rolling updates, it also adapts to additional workloads by auto scaling nodes if it needs to and it can also self-heal in the case of a pod meltdown. These innate abilities provide developers and operations teams with a huge advantage in that your applications will have little to no down time. In this section we provide a brief overview of the master and its worker nodes with a high level overview of how Kubernetes manages workloads."), mdx("div", {
    className: "right"
  }, mdx("img", {
    src: ArchDiagram,
    alt: "Simple Kubernetes Architecture Diagram"
  }), mdx("i", null, "Simple Kubernetes Architecture Diagram")), mdx("h1", null, "Kubernetes Components"), mdx("p", null, "Let's dive into each of the Kubernetes components, starting with the Master node."), mdx("h2", null, "Kubernetes Master"), mdx("p", null, "The Kubernetes master is the primary control unit for the cluster. The master is responsible for managing and scheduling the workloads in addition to the networking and communications across the entire cluster. The master node is responsible for the management of Kubernetes cluster. This is the entry point of all administrative tasks. The master node is the one taking care of orchestrating the worker nodes, where the actual services are running."), mdx("p", null, "These are the components that run on the master:"), mdx("h3", null, "Etcd Storage"), mdx("p", null, "Etcd is an open-source key-value data store that can be accessed by all nodes in the cluster. It stores configuration data of the cluster\u2019s state. etcd is a simple, distributed, consistent key-value store. It\u2019s mainly used for shared configuration and service discovery."), mdx("p", null, "It provides a REST API for CRUD operations as well as an interface to register watchers on specific nodes, which enables a reliable way to notify the rest of the cluster about configuration changes."), mdx("p", null, "An example of data stored by Kubernetes in etcd is jobs being scheduled, created and deployed, pod/service details and state, namespaces and replication information, etc."), mdx("h3", null, "Kube-API-Server"), mdx("p", null, "Kube-API-Server manages requests from the worker nodes, and it receives REST requests for modifications, and serves as a front-end to control cluster. The API server is the entry points for all the REST commands used to control the cluster. It processes the REST requests, validates them, and executes the bound business logic. The result state has to be persisted somewhere, and that brings us to the next component of the master node."), mdx("h3", null, "Kube-scheduler"), mdx("p", null, "Kube-scheduler schedules the pods on nodes based on resource utilization and also decides where services are deployed. The deployment of configured pods and services onto the nodes happens thanks to the scheduler component. The scheduler has the information regarding resources available on the members of the cluster, as well as the ones required for the configured service to run and hence is able to decide where to deploy a specific service."), mdx("h3", null, "Kube-controller-manager"), mdx("p", null, "Kube-controller-manager runs a number of distinct controller processes in the background to regulate the shared state of the cluster and perform routine tasks. When there is a change to a service, the controller recognizes the change and initiates an update to bring the cluster up to the desired state. Optionally you can run different kinds of controllers inside the master node. controller-manager is a daemon embedding those."), mdx("p", null, "A controller uses apiserver to watch the shared state of the cluster and makes corrective changes to the current state to change it to the desired one.\nAn example of such a controller is the Replication controller, which takes care of the number of pods in the system. The replication factor is configured by the user, and it's the controller\u2019s responsibility to recreate a failed pod or remove an extra-scheduled one. Other examples of controllers are endpoints controller, namespace controller, and serviceaccounts controller, but we will not dive into details here."), mdx("h2", null, "Worker Nodes"), mdx("p", null, "These nodes run the workloads according the schedule provided by the master. The interaction between the master and worker nodes are what\u2019s known as the control plane. The pods are run here, so the worker node contains all the necessary services to manage the networking between the containers, communicate with the master node, and assign resources to the containers scheduled."), mdx("h3", null, "Kubelet"), mdx("p", null, "Kubelet ensures that all containers in the node are running and are in a healthy state.  If a node fails, a replication controller observes this change and launches pods on another healthy pod. Integrated into the kubelet binary is \u2018cAdvisor` that auto-discovers all containers and collects CPU, memory, file system, and network usage statistics and also provides machine usage stats by analyzing the \u2018root\u2019 container. "), mdx("p", null, "Kubelet gets the configuration of a pod from the apiserver and ensures that the described containers are up and running. This is the worker service that\u2019s responsible for communicating with the master node. It also communicates with etcd, to get information about services and write the details about newly created ones."), mdx("h3", null, "Kube Proxy"), mdx("p", null, "Kube Proxy acts as a network proxy and a load balancer for a service on a single worker node. . It takes care of the network routing for TCP and UDP packets. It forwards the request to the correct pods across isolated networks in a cluster. "), mdx("h3", null, "Pods"), mdx("p", null, "A pod is the basic building block on Kubernetes. It represents the workloads that get deployed. Pods are generally collections of related containers, but a pod may also only have one container. A pod shares network/storage and also a specification for how to run the containers."), mdx("h3", null, "Containers"), mdx("p", null, "Containers are the lowest level of microservice. These are placed inside of the pods and need external IP addresses to view any outside processes. Docker is not the only supported container runtime, but is by far, the most popular. Docker runs on each of the worker nodes, and runs the configured pods. It takes care of downloading the images and starting the containers."), mdx("h3", null, "kubectl"), mdx("p", null, "Kubectl is a command line tool to communicate with the API service and send commands to the master node. kubectl must be configured to communicate with your cluster. If you have multiple clusters, you might try using kubectx, which makes switching between contexts easy."), mdx("h4", null, "Managing objects with kubectl"), mdx("p", null, "You can divide a Kubernetes cluster into multiple environments by using namespaces (e.g., Dev1, Dev2, QA1, QA2, etc.), and each environment can be managed by a different user. One of the inconveniences of writing kubectl commands is that every time you write a command, you need the --namespace option at the end. People often forget this and end up creating objects (pods, services, deployments) in the wrong namespace. "), mdx("p", null, "With this trick, you can set the namespace preference before running kubectl commands. Run the following command before executing the kubectl commands, and it will save the namespace for all subsequent kubectl commands for your current context:"), mdx("pre", null, mdx("code", {
    parentName: "pre"
  }, "kubectl config set-context $(kubectl config current-context) --namespace=mynamespace\n"))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/kubernetes/kubernetes-architecture-101</link><guid isPermaLink="false">https://layer5.io/resources/kubernetes/kubernetes-architecture-101</guid><pubDate>Tue, 05 Jul 2022 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/9287b4a708bb510f64057ea305498b77/kubernetes.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;p&gt;The way Kubernetes is architected is what makes it powerful. Kubernetes has a basic client and server architecture, but it goes way beyond that. Kubernetes has the ability to do rolling updates, it also adapts to additional workloads by auto scaling nodes if it needs to and it can also self-heal in the case of a pod meltdown. These innate abilities provide developers and operations teams with a huge advantage in that your applications will have little to no down time. In this section we provide a brief overview of the master and its worker nodes with a high level overview of how Kubernetes manages workloads.&lt;/p&gt;&lt;div class=&quot;right&quot;&gt;&lt;img src=&quot;static/kubernetes-highlevel-architecture-5759d8cb4ac0991f91ef736d48e531fc.png&quot; alt=&quot;Simple Kubernetes Architecture Diagram&quot;/&gt;&lt;i&gt;Simple Kubernetes Architecture Diagram&lt;/i&gt;&lt;/div&gt;&lt;h1&gt;Kubernetes Components&lt;/h1&gt;&lt;p&gt;Let&amp;#x27;s dive into each of the Kubernetes components, starting with the Master node.&lt;/p&gt;&lt;h2&gt;Kubernetes Master&lt;/h2&gt;&lt;p&gt;The Kubernetes master is the primary control unit for the cluster. The master is responsible for managing and scheduling the workloads in addition to the networking and communications across the entire cluster. The master node is responsible for the management of Kubernetes cluster. This is the entry point of all administrative tasks. The master node is the one taking care of orchestrating the worker nodes, where the actual services are running.&lt;/p&gt;&lt;p&gt;These are the components that run on the master:&lt;/p&gt;&lt;h3&gt;Etcd Storage&lt;/h3&gt;&lt;p&gt;Etcd is an open-source key-value data store that can be accessed by all nodes in the cluster. It stores configuration data of the cluster’s state. etcd is a simple, distributed, consistent key-value store. It’s mainly used for shared configuration and service discovery.&lt;/p&gt;&lt;p&gt;It provides a REST API for CRUD operations as well as an interface to register watchers on specific nodes, which enables a reliable way to notify the rest of the cluster about configuration changes.&lt;/p&gt;&lt;p&gt;An example of data stored by Kubernetes in etcd is jobs being scheduled, created and deployed, pod/service details and state, namespaces and replication information, etc.&lt;/p&gt;&lt;h3&gt;Kube-API-Server&lt;/h3&gt;&lt;p&gt;Kube-API-Server manages requests from the worker nodes, and it receives REST requests for modifications, and serves as a front-end to control cluster. The API server is the entry points for all the REST commands used to control the cluster. It processes the REST requests, validates them, and executes the bound business logic. The result state has to be persisted somewhere, and that brings us to the next component of the master node.&lt;/p&gt;&lt;h3&gt;Kube-scheduler&lt;/h3&gt;&lt;p&gt;Kube-scheduler schedules the pods on nodes based on resource utilization and also decides where services are deployed. The deployment of configured pods and services onto the nodes happens thanks to the scheduler component. The scheduler has the information regarding resources available on the members of the cluster, as well as the ones required for the configured service to run and hence is able to decide where to deploy a specific service.&lt;/p&gt;&lt;h3&gt;Kube-controller-manager&lt;/h3&gt;&lt;p&gt;Kube-controller-manager runs a number of distinct controller processes in the background to regulate the shared state of the cluster and perform routine tasks. When there is a change to a service, the controller recognizes the change and initiates an update to bring the cluster up to the desired state. Optionally you can run different kinds of controllers inside the master node. controller-manager is a daemon embedding those.&lt;/p&gt;&lt;p&gt;A controller uses apiserver to watch the shared state of the cluster and makes corrective changes to the current state to change it to the desired one.
An example of such a controller is the Replication controller, which takes care of the number of pods in the system. The replication factor is configured by the user, and it&amp;#x27;s the controller’s responsibility to recreate a failed pod or remove an extra-scheduled one. Other examples of controllers are endpoints controller, namespace controller, and serviceaccounts controller, but we will not dive into details here.&lt;/p&gt;&lt;h2&gt;Worker Nodes&lt;/h2&gt;&lt;p&gt;These nodes run the workloads according the schedule provided by the master. The interaction between the master and worker nodes are what’s known as the control plane. The pods are run here, so the worker node contains all the necessary services to manage the networking between the containers, communicate with the master node, and assign resources to the containers scheduled.&lt;/p&gt;&lt;h3&gt;Kubelet&lt;/h3&gt;&lt;p&gt;Kubelet ensures that all containers in the node are running and are in a healthy state.  If a node fails, a replication controller observes this change and launches pods on another healthy pod. Integrated into the kubelet binary is ‘cAdvisor` that auto-discovers all containers and collects CPU, memory, file system, and network usage statistics and also provides machine usage stats by analyzing the ‘root’ container. &lt;/p&gt;&lt;p&gt;Kubelet gets the configuration of a pod from the apiserver and ensures that the described containers are up and running. This is the worker service that’s responsible for communicating with the master node. It also communicates with etcd, to get information about services and write the details about newly created ones.&lt;/p&gt;&lt;h3&gt;Kube Proxy&lt;/h3&gt;&lt;p&gt;Kube Proxy acts as a network proxy and a load balancer for a service on a single worker node. . It takes care of the network routing for TCP and UDP packets. It forwards the request to the correct pods across isolated networks in a cluster. &lt;/p&gt;&lt;h3&gt;Pods&lt;/h3&gt;&lt;p&gt;A pod is the basic building block on Kubernetes. It represents the workloads that get deployed. Pods are generally collections of related containers, but a pod may also only have one container. A pod shares network/storage and also a specification for how to run the containers.&lt;/p&gt;&lt;h3&gt;Containers&lt;/h3&gt;&lt;p&gt;Containers are the lowest level of microservice. These are placed inside of the pods and need external IP addresses to view any outside processes. Docker is not the only supported container runtime, but is by far, the most popular. Docker runs on each of the worker nodes, and runs the configured pods. It takes care of downloading the images and starting the containers.&lt;/p&gt;&lt;h3&gt;kubectl&lt;/h3&gt;&lt;p&gt;Kubectl is a command line tool to communicate with the API service and send commands to the master node. kubectl must be configured to communicate with your cluster. If you have multiple clusters, you might try using kubectx, which makes switching between contexts easy.&lt;/p&gt;&lt;h4&gt;Managing objects with kubectl&lt;/h4&gt;&lt;p&gt;You can divide a Kubernetes cluster into multiple environments by using namespaces (e.g., Dev1, Dev2, QA1, QA2, etc.), and each environment can be managed by a different user. One of the inconveniences of writing kubectl commands is that every time you write a command, you need the --namespace option at the end. People often forget this and end up creating objects (pods, services, deployments) in the wrong namespace. &lt;/p&gt;&lt;p&gt;With this trick, you can set the namespace preference before running kubectl commands. Run the following command before executing the kubectl commands, and it will save the namespace for all subsequent kubectl commands for your current context:&lt;/p&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl&quot;&gt;&lt;button class=&quot;CodeBlock__CopyCode-sc-4qx7vm-2 XqrAp&quot;&gt;Copy&lt;/button&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl prism-code language-undefined&quot; style=&quot;color:#d6deeb;background-color:#011627&quot;&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;kubectl config set-context $(kubectl config current-context) --namespace=mynamespace&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[What is Multi-Cluster Kubernetes?]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "What is Multi-Cluster Kubernetes?",
  "thumbnail": "./kubernetes.svg",
  "darkthumbnail": "./kubernetes.svg",
  "date": "2022-07-05 10:30:05 -0530",
  "category": "Kubernetes",
  "type": "Article",
  "technology": "Kubernetes",
  "tags": ["Docker", "Kubernetes", "Meshery"],
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, "Developers who work in fast-paced environments face the risk of infrastructure sprawl in their VMs or servers. Even with the rise in containerized deployments on Kubernetes and other platforms, admins still must determine how to efficiently manage hundreds and thousands of clusters for various projects.", mdx("p", null, "Common concerns for an organization\u2019s project deployments include how to run multiple workloads and whether a cluster is large enough to handle the work."), mdx("p", null, "A Kubernetes multi-cluster setup can solve these problems. Multi-cluster architecture is a strategy for spinning up several clusters to achieve better isolation, availability, and scalability. In this type of implementation, an application\u2019s infrastructure is distributed and maintained across multiple clusters. Because this strategy can also make cluster management more difficult, it needs to be handled properly."), mdx("h2", null, "What Is a Kubernetes Multi-Cluster Setup?"), mdx("p", null, "Kubernetes works with clusters to efficiently run and manage workloads."), mdx("p", null, "In Kubernetes multi-cluster orchestration, platforms such as managed services help you to run workloads across multiple clusters and environments. The multiple clusters can be configured within a single physical host, within multiple hosts in the same data center, or even in a single cloud provider across different regions. This allows you to provision your workloads in several clusters, rather than just one."), mdx("p", null, "This type of deployment enables more scalability, availability, and isolation for your workloads and environments. It also enables you to better coordinate the planning, delivery, and management of these environments."), mdx("p", null, "A key feature of multi-cluster Kubernetes architecture is that each cluster is highly independent, managing its internal state for maximum resource provisioning and service configuration."), mdx("h2", null, "Why Use a Kubernetes Multi-Cluster Setup?"), mdx("p", null, "There are multiple use cases for a multi-cluster deployment. You can use it to deploy workloads spanning multiple regions for increased availability, eliminate cloud blast radius, prevent compliance issues, and enforce security around your clusters and tenants."), mdx("p", null, "As your environment grows, so do the potential issues you need to solve in order to align your cluster maintenance with your business needs. Using a Kubernetes multi-cluster setup can help with the following concerns."), mdx("h2", null, "Cluster Discovery and Tenant Isolation"), mdx("p", null, "It is common for projects to exist in dev, staging, and production environments. To achieve this kind of isolation, you require multiple Kubernetes environments."), mdx("p", null, "Conventionally, using namespaces would be enough for discovery and isolation in a single cluster, but Kubernetes isn\u2019t a direct multitenant system. Namespaces are also not great for isolation since any compromise in the namespace means that your cluster is also compromised. Additionally, badly configured applications in a namespace can consume more resources than expected, which impacts other applications in the cluster."), mdx("p", null, "Kubernetes multi-cluster environments enable you to isolate users and projects by cluster, simplifying the process."), mdx("h2", null, "Failover"), mdx("p", null, "Architecting multi-cluster workloads minimizes the downtime issues common within a single cluster, because you can freely transfer the workloads to other running clusters."), mdx("h1", null, "Multi-Cluster, Multitenancy, or a Mix?"), mdx("p", null, "Kubernetes is a complex, high-level platform that offers multiple options for your deployments: single server, multitenant, or multi-cluster."), mdx("p", null, "Multitenancy means a cluster is shared among several workloads, or tenants. Multiple users share the same cluster resources and control plane. Multitenant clusters require fair allocation of resources to the tenants as well as isolation of tenants from each other, in order to minimize the effects of a faulty tenant on other tenants and the overall cluster."), mdx("p", null, "A multi-cluster setup, on the other hand, involves several clusters deployed across one or many data centers. This type of deployment can be used to separate development and production. It improves availability and enhances security around workloads."), mdx("p", null, "The best choice for your organization depends on factors that include the technical expertise of your team, your infrastructure availability, and your budget. Many organizations separate their critical production services from non-critical services by placing them in separate tenants across tiers, teams, locations, or infrastructure providers. Projects that are time- and resource-dependent (where resources are spun up and down on the go) are, however, suitable for multi-cluster architecture."), mdx("h1", null, "When to Use a Multi-Cluster Setup"), mdx("p", null, "To decide whether your projects would function best in a multi-cluster deployment, you first need to define your goals."), mdx("p", null, "You should know the challenges you are trying to solve and how transitioning to a multi-cluster setup would help your organization. Projects that are performance-dependent with workloads that are sensitive to factors like latency can take advantage of the high availability and isolation available in multi-cluster setups. In other words, you can run workloads with intensive computations that don\u2019t need to share resources."), mdx("p", null, "You\u2019ll need to collect workload data and other feedback from your various teams before making a decision. You should assess your teams\u2019 expertise: are they well-versed in provisioning single clusters, even before transitioning to multi-clusters? You\u2019ll also need to evaluate your business model and how such an infrastructure transition could affect your users or customers."), mdx("p", null, "The following are some of the advantages of transitioning to a Kubernetes multi-cluster setup."), mdx("ul", null, mdx("li", null, "Tenant Isolation"), "You might want to establish order while accommodating your development teams. The multi-cluster architecture allows workload isolation. For example, you could spin up separate clusters for staging and production.", mdx("p", null, "With multiple clusters, any tenant configuration changes affect only that specific cluster. This way, cluster admins can easily identify issues, run new feature experiments, and carry out workload shifts without troubling other tenants and clusters."), mdx("li", null, "No  Single Point of Failure"), "Running a single cluster can expose your project to a single point of failure, in which one malfunctioning component can bring down an entire system. Using a multi-cluster environment enables you to shift your workloads between clusters so that your projects continue to function if one cluster is down or even disappears entirely.", mdx("li", null, "No Vendor Lock-In"), "There are multiple third-party cloud vendors available with varying resource offerings. Because of evolving resource pricing and models, organizations change their usage models over time as well. A Kubernetes multi-cluster setup ensures your workloads are cloud-agnostic so that you can safely use multiple vendors or move workloads from one cloud to another."), mdx("p", null, "Kubernetes provisions clusters that run and manage our workloads. Depending on the needs of an organization, Kubernetes deployments can be replicated to have the same workloads accessible across multiple nodes and environments. This concept is called Kubernetes multi-cluster orchestration. It\u2019s simply provisioning your workloads in several Kubernetes clusters (going beyond a single cluster). "), mdx("p", null, "A Kubernetes multi-cluster defines deployment strategies to introduce scalability, availability, and isolation for your workloads and environments. A Kubernetes multi-cluster is fully embraced when an organization coordinates the planning, delivery, and management of several Kubernetes environments using appropriate tools and processes."), mdx("h2", null, "Why Do You Need a Kubernetes Multi-Cluster?"), mdx("p", null, "In simple deployment cases, Kubernetes can spin workloads in a single cluster. However, some cases need advanced deployment models, and for such scenarios, a multi-cluster architecture is suitable and can improve the performance of your workloads."), mdx("p", null, "Simply put, a development team may need a Kubernetes multi-cluster to handle workloads spanning regions, eliminate a cloud blast radius, manage compliance requirements, solve multi-tenancy conflicts, and enforce security around clusters and tenants."), mdx("h3", null, "Cluster Upgrades and Security Management"), mdx("p", null, "Teams that rely heavily on Kubernetes for deployments need to plan for regular upgrades and patches on their environments for comprehensive security fixes."), mdx("p", null, "Running cluster upgrades without due care or proper tools can break more things, and more so when dependent resources are overloaded. Tools like kOPs and Cluster APIs can therefore be used to apply upgrades to your running clusters."), mdx("p", null, "The tools that you install to run your clusters depend entirely on the workloads that your clusters support. How you upgrade a cluster and its tools also depends on how you initially deployed and ran the Kubernetes cluster, that is, whether you\u2019re using a hosted Kubernetes provider or some other means for deployment. Most hosted providers support and handle automatic upgrades, which relieves developers from manual upgrades and patching."), mdx("p", null, "Upgrading a cluster and its toolset follows the approach of upgrading the control plane first, then the nodes in a cluster, followed by upgrading clients such as ", mdx("inlineCode", {
    parentName: "p"
  }, "kubectl"), "."), mdx("h3", null, "Managing Kubernetes Multi-Cluster Complexity"), mdx("p", null, "The complexity of management tasks across multiple Kubernetes clusters greatly increases your the number of clusters increase. You need higher-level view and control as you manage workloads across clusters; need to be able to simply switch between clusters; you need a management plane. "), mdx(Link, {
    className: "blog",
    to: "/meshery",
    mdxType: "Link"
  }, "Meshery"), " is the open source, cloud native management plane that enables the adoption, operation, and management of Kubernetes, any service mesh, and their workloads.", mdx("p", null, "MeshSync, a custom controller managed by Meshery Operator, uniquely contains cluster-wide details of all objects across any number of managed clusters separated by Kubernetes Cluster ID. "), mdx("h3", null, "Deprovisioning Clusters That Are No Longer Needed"), mdx("p", null, "When you deprovision a cluster, its running resources are also deleted. The control plane resources, the node instances, pods, and stored data are all deleted."), mdx("p", null, "Different hosted Kubernetes providers have varying ways of deleting Kubernetes clusters. For instance, GKE supports deletion of clusters from the Google Cloud CLI and Cloud Console. Other tools for spinning Kubernetes clusters such as kOps and Amazon EKS also support the deletion from their CLIs and consoles."), mdx("p", null, "Suppose you have provisioned your clusters with the Google Kubernetes Engine; you can run the following command in the gcloud CLI to deprovision your clusters that are no longer needed:"), mdx("pre", null, mdx("code", {
    parentName: "pre"
  }, "gcloud container clusters delete CLUSTER_NAME\n")), mdx("p", null, "At this point, you\u2019ve seen the operations around managing a cluster lifecycle, that is, creation, deletion, and upgrading of clusters."), mdx("h2", null, "Conclusion"), mdx("p", null, "Teams want working with clusters to be as easy as possible. This ease in operating clusters can be ensured by managing the cluster lifecycle. In this article, you learned what\u2019s involved in managing a cluster lifecycle. You\u2019ve seen how clusters are created at scale using various tools. You\u2019ve also seen what cluster upgrades and security patch management involve while trying to maintain the health of your clusters."), mdx("p", null, "The complexity of Kubernetes environments does present challenges, but setting clear goals and objectives for deploying your clusters can help you overcome any obstacles as your organization makes the transition."), mdx("p", null, "Finally, multi-cluster deployments are a good choice for organizations that are building highly distributed systems, with geographic and regulatory control in check to help scale workloads beyond the limits of single clusters. Multi-cluster deployment and management is useful for minimizing exposure of production services, preventing access to sensitive data in environments like development and testing. Organizations are now opting to deploy their more critical workloads on separate multiple clusters from their less critical ones.")));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/kubernetes/what-is-multi-cluster-kubernetes</link><guid isPermaLink="false">https://layer5.io/resources/kubernetes/what-is-multi-cluster-kubernetes</guid><pubDate>Tue, 05 Jul 2022 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/9287b4a708bb510f64057ea305498b77/kubernetes.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;Developers who work in fast-paced environments face the risk of infrastructure sprawl in their VMs or servers. Even with the rise in containerized deployments on Kubernetes and other platforms, admins still must determine how to efficiently manage hundreds and thousands of clusters for various projects.&lt;p&gt;Common concerns for an organization’s project deployments include how to run multiple workloads and whether a cluster is large enough to handle the work.&lt;/p&gt;&lt;p&gt;A Kubernetes multi-cluster setup can solve these problems. Multi-cluster architecture is a strategy for spinning up several clusters to achieve better isolation, availability, and scalability. In this type of implementation, an application’s infrastructure is distributed and maintained across multiple clusters. Because this strategy can also make cluster management more difficult, it needs to be handled properly.&lt;/p&gt;&lt;h2&gt;What Is a Kubernetes Multi-Cluster Setup?&lt;/h2&gt;&lt;p&gt;Kubernetes works with clusters to efficiently run and manage workloads.&lt;/p&gt;&lt;p&gt;In Kubernetes multi-cluster orchestration, platforms such as managed services help you to run workloads across multiple clusters and environments. The multiple clusters can be configured within a single physical host, within multiple hosts in the same data center, or even in a single cloud provider across different regions. This allows you to provision your workloads in several clusters, rather than just one.&lt;/p&gt;&lt;p&gt;This type of deployment enables more scalability, availability, and isolation for your workloads and environments. It also enables you to better coordinate the planning, delivery, and management of these environments.&lt;/p&gt;&lt;p&gt;A key feature of multi-cluster Kubernetes architecture is that each cluster is highly independent, managing its internal state for maximum resource provisioning and service configuration.&lt;/p&gt;&lt;h2&gt;Why Use a Kubernetes Multi-Cluster Setup?&lt;/h2&gt;&lt;p&gt;There are multiple use cases for a multi-cluster deployment. You can use it to deploy workloads spanning multiple regions for increased availability, eliminate cloud blast radius, prevent compliance issues, and enforce security around your clusters and tenants.&lt;/p&gt;&lt;p&gt;As your environment grows, so do the potential issues you need to solve in order to align your cluster maintenance with your business needs. Using a Kubernetes multi-cluster setup can help with the following concerns.&lt;/p&gt;&lt;h2&gt;Cluster Discovery and Tenant Isolation&lt;/h2&gt;&lt;p&gt;It is common for projects to exist in dev, staging, and production environments. To achieve this kind of isolation, you require multiple Kubernetes environments.&lt;/p&gt;&lt;p&gt;Conventionally, using namespaces would be enough for discovery and isolation in a single cluster, but Kubernetes isn’t a direct multitenant system. Namespaces are also not great for isolation since any compromise in the namespace means that your cluster is also compromised. Additionally, badly configured applications in a namespace can consume more resources than expected, which impacts other applications in the cluster.&lt;/p&gt;&lt;p&gt;Kubernetes multi-cluster environments enable you to isolate users and projects by cluster, simplifying the process.&lt;/p&gt;&lt;h2&gt;Failover&lt;/h2&gt;&lt;p&gt;Architecting multi-cluster workloads minimizes the downtime issues common within a single cluster, because you can freely transfer the workloads to other running clusters.&lt;/p&gt;&lt;h1&gt;Multi-Cluster, Multitenancy, or a Mix?&lt;/h1&gt;&lt;p&gt;Kubernetes is a complex, high-level platform that offers multiple options for your deployments: single server, multitenant, or multi-cluster.&lt;/p&gt;&lt;p&gt;Multitenancy means a cluster is shared among several workloads, or tenants. Multiple users share the same cluster resources and control plane. Multitenant clusters require fair allocation of resources to the tenants as well as isolation of tenants from each other, in order to minimize the effects of a faulty tenant on other tenants and the overall cluster.&lt;/p&gt;&lt;p&gt;A multi-cluster setup, on the other hand, involves several clusters deployed across one or many data centers. This type of deployment can be used to separate development and production. It improves availability and enhances security around workloads.&lt;/p&gt;&lt;p&gt;The best choice for your organization depends on factors that include the technical expertise of your team, your infrastructure availability, and your budget. Many organizations separate their critical production services from non-critical services by placing them in separate tenants across tiers, teams, locations, or infrastructure providers. Projects that are time- and resource-dependent (where resources are spun up and down on the go) are, however, suitable for multi-cluster architecture.&lt;/p&gt;&lt;h1&gt;When to Use a Multi-Cluster Setup&lt;/h1&gt;&lt;p&gt;To decide whether your projects would function best in a multi-cluster deployment, you first need to define your goals.&lt;/p&gt;&lt;p&gt;You should know the challenges you are trying to solve and how transitioning to a multi-cluster setup would help your organization. Projects that are performance-dependent with workloads that are sensitive to factors like latency can take advantage of the high availability and isolation available in multi-cluster setups. In other words, you can run workloads with intensive computations that don’t need to share resources.&lt;/p&gt;&lt;p&gt;You’ll need to collect workload data and other feedback from your various teams before making a decision. You should assess your teams’ expertise: are they well-versed in provisioning single clusters, even before transitioning to multi-clusters? You’ll also need to evaluate your business model and how such an infrastructure transition could affect your users or customers.&lt;/p&gt;&lt;p&gt;The following are some of the advantages of transitioning to a Kubernetes multi-cluster setup.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Tenant Isolation&lt;/li&gt;You might want to establish order while accommodating your development teams. The multi-cluster architecture allows workload isolation. For example, you could spin up separate clusters for staging and production.&lt;p&gt;With multiple clusters, any tenant configuration changes affect only that specific cluster. This way, cluster admins can easily identify issues, run new feature experiments, and carry out workload shifts without troubling other tenants and clusters.&lt;/p&gt;&lt;li&gt;No  Single Point of Failure&lt;/li&gt;Running a single cluster can expose your project to a single point of failure, in which one malfunctioning component can bring down an entire system. Using a multi-cluster environment enables you to shift your workloads between clusters so that your projects continue to function if one cluster is down or even disappears entirely.&lt;li&gt;No Vendor Lock-In&lt;/li&gt;There are multiple third-party cloud vendors available with varying resource offerings. Because of evolving resource pricing and models, organizations change their usage models over time as well. A Kubernetes multi-cluster setup ensures your workloads are cloud-agnostic so that you can safely use multiple vendors or move workloads from one cloud to another.&lt;/ul&gt;&lt;p&gt;Kubernetes provisions clusters that run and manage our workloads. Depending on the needs of an organization, Kubernetes deployments can be replicated to have the same workloads accessible across multiple nodes and environments. This concept is called Kubernetes multi-cluster orchestration. It’s simply provisioning your workloads in several Kubernetes clusters (going beyond a single cluster). &lt;/p&gt;&lt;p&gt;A Kubernetes multi-cluster defines deployment strategies to introduce scalability, availability, and isolation for your workloads and environments. A Kubernetes multi-cluster is fully embraced when an organization coordinates the planning, delivery, and management of several Kubernetes environments using appropriate tools and processes.&lt;/p&gt;&lt;h2&gt;Why Do You Need a Kubernetes Multi-Cluster?&lt;/h2&gt;&lt;p&gt;In simple deployment cases, Kubernetes can spin workloads in a single cluster. However, some cases need advanced deployment models, and for such scenarios, a multi-cluster architecture is suitable and can improve the performance of your workloads.&lt;/p&gt;&lt;p&gt;Simply put, a development team may need a Kubernetes multi-cluster to handle workloads spanning regions, eliminate a cloud blast radius, manage compliance requirements, solve multi-tenancy conflicts, and enforce security around clusters and tenants.&lt;/p&gt;&lt;h3&gt;Cluster Upgrades and Security Management&lt;/h3&gt;&lt;p&gt;Teams that rely heavily on Kubernetes for deployments need to plan for regular upgrades and patches on their environments for comprehensive security fixes.&lt;/p&gt;&lt;p&gt;Running cluster upgrades without due care or proper tools can break more things, and more so when dependent resources are overloaded. Tools like kOPs and Cluster APIs can therefore be used to apply upgrades to your running clusters.&lt;/p&gt;&lt;p&gt;The tools that you install to run your clusters depend entirely on the workloads that your clusters support. How you upgrade a cluster and its tools also depends on how you initially deployed and ran the Kubernetes cluster, that is, whether you’re using a hosted Kubernetes provider or some other means for deployment. Most hosted providers support and handle automatic upgrades, which relieves developers from manual upgrades and patching.&lt;/p&gt;&lt;p&gt;Upgrading a cluster and its toolset follows the approach of upgrading the control plane first, then the nodes in a cluster, followed by upgrading clients such as &lt;code&gt;kubectl&lt;/code&gt;.&lt;/p&gt;&lt;h3&gt;Managing Kubernetes Multi-Cluster Complexity&lt;/h3&gt;&lt;p&gt;The complexity of management tasks across multiple Kubernetes clusters greatly increases your the number of clusters increase. You need higher-level view and control as you manage workloads across clusters; need to be able to simply switch between clusters; you need a management plane. &lt;/p&gt;&lt;a class=&quot;blog&quot; href=&quot;/meshery&quot;&gt;Meshery&lt;/a&gt; is the open source, cloud native management plane that enables the adoption, operation, and management of Kubernetes, any service mesh, and their workloads.&lt;p&gt;MeshSync, a custom controller managed by Meshery Operator, uniquely contains cluster-wide details of all objects across any number of managed clusters separated by Kubernetes Cluster ID. &lt;/p&gt;&lt;h3&gt;Deprovisioning Clusters That Are No Longer Needed&lt;/h3&gt;&lt;p&gt;When you deprovision a cluster, its running resources are also deleted. The control plane resources, the node instances, pods, and stored data are all deleted.&lt;/p&gt;&lt;p&gt;Different hosted Kubernetes providers have varying ways of deleting Kubernetes clusters. For instance, GKE supports deletion of clusters from the Google Cloud CLI and Cloud Console. Other tools for spinning Kubernetes clusters such as kOps and Amazon EKS also support the deletion from their CLIs and consoles.&lt;/p&gt;&lt;p&gt;Suppose you have provisioned your clusters with the Google Kubernetes Engine; you can run the following command in the gcloud CLI to deprovision your clusters that are no longer needed:&lt;/p&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl&quot;&gt;&lt;button class=&quot;CodeBlock__CopyCode-sc-4qx7vm-2 XqrAp&quot;&gt;Copy&lt;/button&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl prism-code language-undefined&quot; style=&quot;color:#d6deeb;background-color:#011627&quot;&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;gcloud container clusters delete CLUSTER_NAME&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;p&gt;At this point, you’ve seen the operations around managing a cluster lifecycle, that is, creation, deletion, and upgrading of clusters.&lt;/p&gt;&lt;h2&gt;Conclusion&lt;/h2&gt;&lt;p&gt;Teams want working with clusters to be as easy as possible. This ease in operating clusters can be ensured by managing the cluster lifecycle. In this article, you learned what’s involved in managing a cluster lifecycle. You’ve seen how clusters are created at scale using various tools. You’ve also seen what cluster upgrades and security patch management involve while trying to maintain the health of your clusters.&lt;/p&gt;&lt;p&gt;The complexity of Kubernetes environments does present challenges, but setting clear goals and objectives for deploying your clusters can help you overcome any obstacles as your organization makes the transition.&lt;/p&gt;&lt;p&gt;Finally, multi-cluster deployments are a good choice for organizations that are building highly distributed systems, with geographic and regulatory control in check to help scale workloads beyond the limits of single clusters. Multi-cluster deployment and management is useful for minimizing exposure of production services, preventing access to sensitive data in environments like development and testing. Organizations are now opting to deploy their more critical workloads on separate multiple clusters from their less critical ones.&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[TechStrong TV Interview]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "TechStrong TV Interview",
  "subtitle": "Open Source Summit NA 2022",
  "thumbnail": "./techstrong.png",
  "darkthumbnail": "./techstrong.png",
  "date": "2022-06-25 10:30:05 -0530",
  "category": "Interview",
  "tags": ["Interview"],
  "type": "Interview",
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("p", null, "TechStrong TV hosts a variety of live conversations and panel discussions with world\u2019s leading technology experts and leaders at global tech events and user conferences. In this episode of TechStrong TV, straight out of ", mdx(Link, {
    to: "/community/events/open-source-summit-north-america-2022",
    mdxType: "Link"
  }, "Open Source Summit NA 2022"), " , catch guest ", mdx(Link, {
    to: "https://layer5.io/community/members/lee-calcote",
    mdxType: "Link"
  }, "Lee Calcote"), " from Layer5 and host Alan Shimel discuss the power of ", mdx(Link, {
    to: "/projects",
    mdxType: "Link"
  }, "Layer5 projects"), " in managing service meshes, Kubernetes and the rest of your cloud native infrastucture. They also dive into some of the other network-centric CNCF projects like CoreDNS and gRPC. Tune in now!"), mdx(Button, {
    primary: true,
    url: "https://digitalanarchist.com/videos/open-source-summit-na-2022/lee-calcote-layer5",
    className: "btn-center",
    mdxType: "Button"
  }, mdx("h3", null, "Check out the TechStrong TV Interview with Layer5!"))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/interview/techstrong-tv-interview</link><guid isPermaLink="false">https://layer5.io/resources/interview/techstrong-tv-interview</guid><pubDate>Sat, 25 Jun 2022 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/12cf27fc20e91ecb3f581a9f5b187743/techstrong.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;p&gt;TechStrong TV hosts a variety of live conversations and panel discussions with world’s leading technology experts and leaders at global tech events and user conferences. In this episode of TechStrong TV, straight out of &lt;a href=&quot;/community/events/open-source-summit-north-america-2022&quot;&gt;Open Source Summit NA 2022&lt;/a&gt; , catch guest &lt;a href=&quot;https://layer5.io/community/members/lee-calcote&quot;&gt;Lee Calcote&lt;/a&gt; from Layer5 and host Alan Shimel discuss the power of &lt;a href=&quot;/projects&quot;&gt;Layer5 projects&lt;/a&gt; in managing service meshes, Kubernetes and the rest of your cloud native infrastucture. They also dive into some of the other network-centric CNCF projects like CoreDNS and gRPC. Tune in now!&lt;/p&gt;&lt;a href=&quot;https://digitalanarchist.com/videos/open-source-summit-na-2022/lee-calcote-layer5&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn btn-center&quot;&gt;&lt;h3&gt;Check out the TechStrong TV Interview with Layer5!&lt;/h3&gt; &lt;/button&gt;&lt;/a&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Istio Virtual Service]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Istio Virtual Service",
  "thumbnail": "../../../../assets/images/service-mesh-icons/istio.svg",
  "darkthumbnail": "../../../../assets/images/service-mesh-icons/istio.svg",
  "date": "2022-06-16 10:30:05 -0530",
  "type": "Article",
  "category": "Service Mesh",
  "mesh": "Istio",
  "technology": "Kubernetes",
  "tags": ["Istio", "Envoy"],
  "featured": false,
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("p", null, "Istio Virtual Service defines a set of traffic routing rules to apply when host is addressed. Each routing rule defines standards for the traffic of a specific protocol. If the traffic is matched, then it is sent to a named destination service defined in the registry."), mdx("p", null, "The source of traffic can also be matched within a routing rule that allows routing to be customized for every specific client context."), mdx("div", {
    className: "fact-left"
  }, mdx("p", null, "The below example on Kubernetes routes all HTTP traffic by default to pods of the reviews service with the label \u201Cversion: v1\u201D. Additionally, HTTP requests with path starting with /wpcatalog/ or /consumercatalog/ will be rewritten to /newcatalog and sent to the pods with label \u201Cversion: v2\u201D.")), mdx("pre", null, mdx("code", {
    parentName: "pre"
  }, "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: reviews-route\nspec:\n  hosts:\n  - reviews.prod.svc.cluster.local\n  http:\n  - name: \"reviews-v2-routes\"\n    match:\n    - uri:\n        prefix: \"/wpcatalog\"\n    - uri:\n        prefix: \"/consumercatalog\"\n    rewrite:\n      uri: \"/newcatalog\"\n    route:\n    - destination:\n        host: reviews.prod.svc.cluster.local\n        subset: v2\n  - name: \"reviews-v1-route\"\n    route:\n    - destination:\n        host: reviews.prod.svc.cluster.local\n        subset: v1\n\n")), mdx("h2", null, "Virtual Service Configuration Affecting Traffic Routing "), mdx("p", null, "A single Virtual Service can be used to describe all the traffic properties of the hosts, including those for multiple HTTP and TCP ports."), mdx("div", null, mdx("h3", null, "Hosts"), mdx("ul", null, mdx("li", null, "The application traffic created by hosts, clients, servers, and applications that use the network as a transport is contained in the physical network data plane (also known as the forwarding plane). As a result, data plane traffic should never have source or destination IP addresses that are assigned to network elements like routers and switches; instead, it should be originated from and delivered to end devices like PCs and servers. To forward data plane traffic as swiftly as possible, routers and switches use hardware chips called application-specific integrated circuits (ASICs). A forwarding information base is referenced by the physical networking data plane (FIB)."), mdx("li", null, "The destination hosts to which traffic is being sent it could be a DNS name with wildcard prefix or an IP address depending on the platform."))), mdx("div", null, mdx("h3", null, "Gateways"), mdx("ul", null, mdx("li", null, "The names of gateways and sidecars that should apply all these routes. Gateways in other namespaces may be referred to by ", mdx("code", null, " gateway namespace>/gateway name "), "; specifying a gateway with no namespace qualifier is the same as specifying the VirtualService\u2019s namespace."))), mdx("div", null, mdx("h3", null, "HTTP"), mdx("ul", null, mdx("li", null, "An ordered list of route rules for HTTP traffic. The HTTP routes will be applied to the platform service ports named ", mdx("code", null, "\u2018http-\u2019/\u2018http2-\u2019/\u2018grpc-*\u2019, gateway ports with protocol HTTP/HTTP2/GRPC/ TLS-terminated-HTTPS "), " and service entry ports using HTTP/HTTP2/GRPC protocols."), mdx("li", null, "The first rule is matching an incoming request which is used."))), mdx("div", null, mdx("h3", null, "TCP"), mdx("ul", null, mdx("li", null, "An ordered list of all the routing rules for opaque TCP traffic. TCP routes will be applied to any of the port which is not a HTTP or TLS port."))), mdx("div", null, mdx("h3", null, "ExportTo"), mdx("ul", null, mdx("li", null, "Exporting a virtual service allows it to be used by the sidecars and the gateways defined in other namespaces."), mdx("li", null, "If no namespaces are specified then the virtual service is exported to all namespaces by default."))), mdx("h2", null, "Destination"), mdx("p", null, "A destination indicates that the network addressable service to which the request/connection will be sent. A DestinationRule defines policies that apply to traffic intended for a service after routing has occurred."), mdx("pre", null, mdx("code", {
    parentName: "pre"
  }, "apiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: reviews-destination\nspec:\n  host: reviews.prod.svc.cluster.local\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n  - name: v2\n    labels:\n      version: v2\n\n")), mdx("div", {
    className: "fact-left"
  }, mdx("p", null, "A version of the route destination is identified with a reference to a named service subset which should be declared in a corresponding DestinationRule."))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/service-mesh/istio-virtual-service</link><guid isPermaLink="false">https://layer5.io/resources/service-mesh/istio-virtual-service</guid><pubDate>Thu, 16 Jun 2022 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/731763d720780a49c2ffdfede8c28f4b/istio.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;p&gt;Istio Virtual Service defines a set of traffic routing rules to apply when host is addressed. Each routing rule defines standards for the traffic of a specific protocol. If the traffic is matched, then it is sent to a named destination service defined in the registry.&lt;/p&gt;&lt;p&gt;The source of traffic can also be matched within a routing rule that allows routing to be customized for every specific client context.&lt;/p&gt;&lt;div class=&quot;fact-left&quot;&gt;&lt;p&gt;The below example on Kubernetes routes all HTTP traffic by default to pods of the reviews service with the label “version: v1”. Additionally, HTTP requests with path starting with /wpcatalog/ or /consumercatalog/ will be rewritten to /newcatalog and sent to the pods with label “version: v2”.&lt;/p&gt;&lt;/div&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl&quot;&gt;&lt;button class=&quot;CodeBlock__CopyCode-sc-4qx7vm-2 XqrAp&quot;&gt;Copy&lt;/button&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl prism-code language-undefined&quot; style=&quot;color:#d6deeb;background-color:#011627&quot;&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;apiVersion: networking.istio.io/v1alpha3&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;kind: VirtualService&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;metadata:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  name: reviews-route&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;spec:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  hosts:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  - reviews.prod.svc.cluster.local&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  http:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  - name: &amp;quot;reviews-v2-routes&amp;quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    match:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    - uri:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;        prefix: &amp;quot;/wpcatalog&amp;quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    - uri:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;        prefix: &amp;quot;/consumercatalog&amp;quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    rewrite:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      uri: &amp;quot;/newcatalog&amp;quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    route:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    - destination:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;        host: reviews.prod.svc.cluster.local&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;        subset: v2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  - name: &amp;quot;reviews-v1-route&amp;quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    route:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    - destination:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;        host: reviews.prod.svc.cluster.local&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;        subset: v1&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;h2&gt;Virtual Service Configuration Affecting Traffic Routing &lt;/h2&gt;&lt;p&gt;A single Virtual Service can be used to describe all the traffic properties of the hosts, including those for multiple HTTP and TCP ports.&lt;/p&gt;&lt;div&gt;&lt;h3&gt;Hosts&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;The application traffic created by hosts, clients, servers, and applications that use the network as a transport is contained in the physical network data plane (also known as the forwarding plane). As a result, data plane traffic should never have source or destination IP addresses that are assigned to network elements like routers and switches; instead, it should be originated from and delivered to end devices like PCs and servers. To forward data plane traffic as swiftly as possible, routers and switches use hardware chips called application-specific integrated circuits (ASICs). A forwarding information base is referenced by the physical networking data plane (FIB).&lt;/li&gt;&lt;li&gt;The destination hosts to which traffic is being sent it could be a DNS name with wildcard prefix or an IP address depending on the platform.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;h3&gt;Gateways&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;The names of gateways and sidecars that should apply all these routes. Gateways in other namespaces may be referred to by &lt;code&gt; gateway namespace&amp;gt;/gateway name &lt;/code&gt;; specifying a gateway with no namespace qualifier is the same as specifying the VirtualService’s namespace.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;h3&gt;HTTP&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;An ordered list of route rules for HTTP traffic. The HTTP routes will be applied to the platform service ports named &lt;code&gt;‘http-’/‘http2-’/‘grpc-*’, gateway ports with protocol HTTP/HTTP2/GRPC/ TLS-terminated-HTTPS &lt;/code&gt; and service entry ports using HTTP/HTTP2/GRPC protocols.&lt;/li&gt;&lt;li&gt;The first rule is matching an incoming request which is used.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;h3&gt;TCP&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;An ordered list of all the routing rules for opaque TCP traffic. TCP routes will be applied to any of the port which is not a HTTP or TLS port.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;h3&gt;ExportTo&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Exporting a virtual service allows it to be used by the sidecars and the gateways defined in other namespaces.&lt;/li&gt;&lt;li&gt;If no namespaces are specified then the virtual service is exported to all namespaces by default.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;h2&gt;Destination&lt;/h2&gt;&lt;p&gt;A destination indicates that the network addressable service to which the request/connection will be sent. A DestinationRule defines policies that apply to traffic intended for a service after routing has occurred.&lt;/p&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl&quot;&gt;&lt;button class=&quot;CodeBlock__CopyCode-sc-4qx7vm-2 XqrAp&quot;&gt;Copy&lt;/button&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl prism-code language-undefined&quot; style=&quot;color:#d6deeb;background-color:#011627&quot;&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;apiVersion: networking.istio.io/v1alpha3&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;kind: DestinationRule&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;metadata:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  name: reviews-destination&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;spec:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  host: reviews.prod.svc.cluster.local&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  subsets:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  - name: v1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    labels:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      version: v1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  - name: v2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    labels:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      version: v2&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;div class=&quot;fact-left&quot;&gt;&lt;p&gt;A version of the route destination is identified with a reference to a named service subset which should be declared in a corresponding DestinationRule.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Istio Authorization Policy]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Istio Authorization Policy",
  "thumbnail": "../../../../assets/images/service-mesh-icons/istio.svg",
  "darkthumbnail": "../../../../assets/images/service-mesh-icons/istio.svg",
  "date": "2022-06-01 10:30:05 -0530",
  "type": "Article",
  "category": "Service Mesh",
  "mesh": "Istio",
  "technology": "Docker",
  "tags": ["Istio"],
  "featured": false,
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("div", {
    className: "intro"
  }, mdx("p", null, "Istio is a massive project with a wide range of capabilities and deployment options. We will learn about the Istio\u2019s authorization policy with an example .")), mdx("p", null, mdx("h2", null, "Let\u2019s see Istio\u2019s Security Architecture ")), mdx("p", null, "Before we directly jump into Istio's Authorization policies let's have a glance at Istio's Security architecture. The below diagram is directly referenced from Istio documentation. From the control plane, users can create things like authorization policies authentication policies, and policies will get translated into envoy config and streamed bent the varied proxies that form up the service mesh, on the information plane side there is east-west traffic from service b to c and also the actual communication takes place through sidecar proxies. If the traffic is entering it moves to the Ingress gateway and if it\u2019s leaving it can attend the Egress gateway in between all this we will apply JWT enforcements."), mdx("p", null, mdx("img", {
    src: istiosecurityarch,
    align: "center",
    alt: "comparative spectrum"
  })), mdx("h2", null, " Istio includes a high-level architecture that involves multiple factors such as:"), mdx("p", null, mdx("ul", null, mdx("li", null, "  Certificate Authority for key and certificate management "), mdx("li", null, " Sidecar and perimeter proxies work as Policy Enforcement Points to secure communication between the clients and servers. "), mdx("li", null, " A set of Envoy proxy extensions is there to manage telemetry and auditing "))), mdx("h2", null, " Istio\u2019s Authorization policies"), mdx("p", null, mdx("ul", null, mdx("li", null, "  Workload-to-workload and end-user-to-workload authorization. "), mdx("li", null, " A Simple API includes one single Authorization Policy, which is easy to use and maintain."), mdx("li", null, "Flexible semantics: operators can define custom conditions on Istio attributes, and use DENY and permit actions. "), mdx("li", null, "  High performance: Istio authorization gets enforced natively on the Envoy. "), mdx("li", null, " High compatibility: supports gRPC, HTTP, HTTPS, and HTTP2 natively, additionaly as well as any plain TCP protocols. "))), mdx("h2", null, "Example Authorization Policy"), mdx("p", null, "In this example, we allow access to our service httpbin in namespace foo from any JWT (regardless of the principle) to use the GET method."), mdx("pre", null, mdx("code", {
    parentName: "pre"
  }, "apiVersion: \"security.istio.io/v1beta1\"\nkind: \"AuthorizationPolicy\"\nmetadata:\n  name: \"allow-reads\"\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  rules:\n  - from:\n    - source:\n        principals: [\"*\"]\n    to:\n    - operation:\n        methods: [\"GET\"]\n\n")), mdx("h2", null, "Access Flow with Auth Policies"), mdx("p", null, "There is some logic behind how authorization is set given defined AuthorizationPolicies. Below is that the flow as taken directly from the Istio documentation."), mdx("ul", null, mdx("li", null, "If there are any CUSTOM policies that match the request, evaluate and deny the request if the evaluation result's is deny."), mdx("li", null, "If there are any DENY policies that match with the request, deny the request."), mdx("li", null, "If there are not any ALLOW policies for the workload, allow the request."), mdx("li", null, "If any of the ALLOW policies gets match with the request, allow the request."), mdx("li", null, "Deny the request."))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/service-mesh/istio-authorization-policy</link><guid isPermaLink="false">https://layer5.io/resources/service-mesh/istio-authorization-policy</guid><pubDate>Wed, 01 Jun 2022 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/731763d720780a49c2ffdfede8c28f4b/istio.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;div class=&quot;intro&quot;&gt;&lt;p&gt;Istio is a massive project with a wide range of capabilities and deployment options. We will learn about the Istio’s authorization policy with an example .&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;h2&gt;Let’s see Istio’s Security Architecture &lt;/h2&gt;&lt;/p&gt;&lt;p&gt;Before we directly jump into Istio&amp;#x27;s Authorization policies let&amp;#x27;s have a glance at Istio&amp;#x27;s Security architecture. The below diagram is directly referenced from Istio documentation. From the control plane, users can create things like authorization policies authentication policies, and policies will get translated into envoy config and streamed bent the varied proxies that form up the service mesh, on the information plane side there is east-west traffic from service b to c and also the actual communication takes place through sidecar proxies. If the traffic is entering it moves to the Ingress gateway and if it’s leaving it can attend the Egress gateway in between all this we will apply JWT enforcements.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;static/istio-securityarch-48cc1d41d8816131a3bf66bd55fd78df.svg&quot; align=&quot;center&quot; alt=&quot;comparative spectrum&quot;/&gt;&lt;/p&gt;&lt;h2&gt; Istio includes a high-level architecture that involves multiple factors such as:&lt;/h2&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;  Certificate Authority for key and certificate management &lt;/li&gt;&lt;li&gt; Sidecar and perimeter proxies work as Policy Enforcement Points to secure communication between the clients and servers. &lt;/li&gt;&lt;li&gt; A set of Envoy proxy extensions is there to manage telemetry and auditing &lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;h2&gt; Istio’s Authorization policies&lt;/h2&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;  Workload-to-workload and end-user-to-workload authorization. &lt;/li&gt;&lt;li&gt; A Simple API includes one single Authorization Policy, which is easy to use and maintain.&lt;/li&gt;&lt;li&gt;Flexible semantics: operators can define custom conditions on Istio attributes, and use DENY and permit actions. &lt;/li&gt;&lt;li&gt;  High performance: Istio authorization gets enforced natively on the Envoy. &lt;/li&gt;&lt;li&gt; High compatibility: supports gRPC, HTTP, HTTPS, and HTTP2 natively, additionaly as well as any plain TCP protocols. &lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;h2&gt;Example Authorization Policy&lt;/h2&gt;&lt;p&gt;In this example, we allow access to our service httpbin in namespace foo from any JWT (regardless of the principle) to use the GET method.&lt;/p&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl&quot;&gt;&lt;button class=&quot;CodeBlock__CopyCode-sc-4qx7vm-2 XqrAp&quot;&gt;Copy&lt;/button&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl prism-code language-undefined&quot; style=&quot;color:#d6deeb;background-color:#011627&quot;&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;apiVersion: &amp;quot;security.istio.io/v1beta1&amp;quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;kind: &amp;quot;AuthorizationPolicy&amp;quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;metadata:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  name: &amp;quot;allow-reads&amp;quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  namespace: foo&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;spec:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  selector:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    matchLabels:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      app: httpbin&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  rules:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  - from:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    - source:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;        principals: [&amp;quot;*&amp;quot;]&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    to:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    - operation:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;        methods: [&amp;quot;GET&amp;quot;]&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;h2&gt;Access Flow with Auth Policies&lt;/h2&gt;&lt;p&gt;There is some logic behind how authorization is set given defined AuthorizationPolicies. Below is that the flow as taken directly from the Istio documentation.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;If there are any CUSTOM policies that match the request, evaluate and deny the request if the evaluation result&amp;#x27;s is deny.&lt;/li&gt;&lt;li&gt;If there are any DENY policies that match with the request, deny the request.&lt;/li&gt;&lt;li&gt;If there are not any ALLOW policies for the workload, allow the request.&lt;/li&gt;&lt;li&gt;If any of the ALLOW policies gets match with the request, allow the request.&lt;/li&gt;&lt;li&gt;Deny the request.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Istio Ingress Gateway in Kubernetes]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Istio Ingress Gateway in Kubernetes",
  "thumbnail": "./Istio Ingress Gateway.png",
  "darkthumbnail": "./Istio Ingress Gateway.png",
  "date": "2022-04-01 10:30:05 -0530",
  "category": "Service Mesh",
  "tags": ["Gateway"],
  "type": "Article",
  "product": "Meshery",
  "technology": "Kubernetes",
  "mesh": "Istio",
  "featured": false,
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("p", null, "Predominantly, Kubernetes has used an Ingress controller to handle the traffic that enters the cluster from the outside. Istio has replaced all the familiar Ingress resource with new Gateway and VirtualServices resources. They work in sync to route all the traffic into the mesh. Inside the mesh there is no requirement for Gateways since the services can access each other by a cluster local service name."), mdx("h3", null, "Let\u2019s understand the working with a representation"), mdx("p", null, mdx("img", {
    src: Rep,
    align: "center",
    alt: "Istio Ingress Gateway in Kubernetes No Title"
  })), mdx("p", null, mdx("ul", null, mdx("li", null, "Firstly A request is made by a client on a specific port"), mdx("li", null, "Then a load balancer on this port listens and forwards the request to one of the workers in theh cluster on same or a new port"), mdx("li", null, "Inside the cluster the request is routed to the Istio Ingress Gateway which is listened on the port of the load balancer"), mdx("li", null, "The Service forwards the requestto an Istio Ingress Gateway Pod which is managed by a deployment"), mdx("li", null, "The Ingress Gateway Pod is configured by a Gateway and a VirtualService."), mdx("li", null, "The Gateway configures all the ports, protocol, and certificates."), mdx("li", null, "The Virtual Service configures all the routing information to find the correct Servicein it."), mdx("li", null, "The Istio Ingress Gateway Pod routes the request to the application Service."), mdx("li", null, "And lastly, the application Service routes the request to an application Pod which is managed by a deployment."))), mdx("ul", null), mdx("h2", null, "Ingress Gateway Service"), mdx("p", null, "The Ingress Gateway Service must listen to all the ports to be able to forward the traffic to the Ingress Gateway pods. Here we will be using routing to bring all the port numbers back to their initial state."), mdx("p", null, "Note that a Kubernetes Service is not a real service, but, since we are using type: \"NodePort\", all the request will be handled by the kube-proxy provided by Kubernetes and forwarded to a node with a current running pod. Once on the node, an IP-tables is configured a request will be forwarded to the appropriate pod."), mdx("pre", null, mdx("code", {
    parentName: "pre",
    "className": "language-yaml"
  }, "\n# From the istio-ingressgateway service\n  ports:\n  - name: http2\n    nodePort: 30000\n    port: 80\n    protocol: TCP\n  - name: https\n    nodePort: 30443\n    port: 443\n    protocol: TCP\n  - name: mysql\n    nodePort: 30306\n    port: 3306\n    protocol: TCP\n")), mdx("p", null, "If we inspect the service, we will see that it defines more ports than we have describe above. So these ports will be used for all the internal Istio communication."), mdx("h2", null, "Ingress Gateway Deployment"), mdx("p", null, "It's a wrapper around the Envoy proxy and it is configured as the sidecars used inside the service mesh. When a Gateway or VirtualService gets changed, they are detected by the Istio Pilot controller and converts this information to an Envoy configuration and sends it to all the proxies, including the Envoy inside the IngressGateway."), mdx("p", null, "Since container ports are not supposed to be declared in Kubernetes pods, we don't have to declare the ports in the Ingress Gateway Deployment. If we look inside the deployment we can see that there are a number of ports that are already declared anyway. We have to take care about the Ingress Gateway Deployment in SSL certificates. To access the certificates inside the Gateway resources, make sure that we have mounted all the required certificates properly."), mdx("pre", null, mdx("code", {
    parentName: "pre",
    "className": "language-yaml"
  }, "\n# Example represents volume mounts\nvolumeMounts:\n- mountPath: /etc/istio/ingressgateway-certs\n  name: ingressgateway-certs\n  readOnly: true\n- mountPath: /etc/istio/ingressgateway-ca-certs\n  name: ingressgateway-ca-certs\n  readOnly: true\n\n# Example represents volumes\nvolumes:\n- name: ingressgateway-certs\n  secret:\n    defaultMode: 420\n    optional: true\n    secretName: istio-ingressgateway-certs\n- name: ingressgateway-ca-certs\n  secret:\n    defaultMode: 420\n    optional: true\n    secretName: istio-ingressgateway-ca-certs\n")), mdx("h2", null, "The Gateway"), mdx("p", null, "The Gateway resources are used to configure the ports for Envoy and also support for the Kubernetes Ingress. Since all the three ports are exposed with the servies, we need these ports to be handled by the Envoy. It can be handled by declaring one or more Gateways."), mdx("pre", null, mdx("code", {
    parentName: "pre",
    "className": "language-yaml"
  }, "\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: default-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n\n  - hosts:\n    - '*'\n    port:\n      name: http\n      number: 80\n      protocol: HTTP\n\n  - hosts:\n    - '*'\n    port:\n      name: https\n      number: 443\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      privateKey: /etc/istio/ingressgateway-certs/tls.key\n      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt\n\n  - hosts: # For all the TCP routing this fields will be ignored, but it will be matched\n    - '*'  # with the VirtualService, We use * since it will match anything.\n    port:\n      name: mysql\n      number: 3306\n      protocol: TCP\n")), mdx("h2", null, "VirtualService"), mdx("p", null, "The last interesting resource we have is the VirtualService, it used in concert with the Gateway to configure Envoy."), mdx("p", null, "A general configuration for an HTTP(s) service"), mdx("pre", null, mdx("code", {
    parentName: "pre",
    "className": "language-yaml"
  }, "\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: counter\nspec:\n  gateways:\n  - default-gateway.istio-system.svc.cluster.local\n  hosts:\n  - counter.lab.example.com\n  http:\n  - match:\n    - uri:\n      prefix: /\n    route:\n    - destination:\n        host: counter\n        port:\n          number: 80\n\n")), mdx("h2", null, "Application Service and Deployment"), mdx("p", null, "The request have now reached the application service and deployment. These are normal Kubernetes resources."), mdx("h2", null, "Extras:"), mdx("h3", null, "Debugging Istio Gateway"), mdx("p", null, "First we will use istioctl to check the configuration status of Istio Ingress Gateway:"), mdx("pre", null, mdx("code", {
    parentName: "pre",
    "className": "language-yaml"
  }, "\n# istioctl proxy-status istio-ingressgateway-5586f47659-r64lb.istio-system\nClusters Match\nListeners Match\nRoutes Match\n\n")), mdx("p", null, "If anything does not get synced with it, try restarting the ingress gateway pod once - it may be possible that it somehow an update got missed. If RDS looked good, we can check access logs of it."), mdx("pre", null, mdx("code", {
    parentName: "pre",
    "className": "language-yaml"
  }, "\n#kubectl get configmap istio -n istio-system -o yaml | grep \"accessLogFile: \"\ndisable access log.\\naccessLogFile: \\\"/dev/stdout\\\"\\n\\n# If accessLogEncoding\n\n")), mdx("p", null, "Once all the access logs are enabled, we can try torequest a few more times and check the logs on the Ingress Gateway:"), mdx("pre", null, mdx("code", {
    parentName: "pre",
    "className": "language-yaml"
  }, "\n# kubectl logs -n istio-system istio-ingressgateway-5586f47659-r64lb | grep -v deprecated\n\n"))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/service-mesh/istio-ingress-gateway-in-kubernetes</link><guid isPermaLink="false">https://layer5.io/resources/service-mesh/istio-ingress-gateway-in-kubernetes</guid><pubDate>Fri, 01 Apr 2022 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/7d817888386c321cf1d1e87dfbce798b/Istio Ingress Gateway.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;p&gt;Predominantly, Kubernetes has used an Ingress controller to handle the traffic that enters the cluster from the outside. Istio has replaced all the familiar Ingress resource with new Gateway and VirtualServices resources. They work in sync to route all the traffic into the mesh. Inside the mesh there is no requirement for Gateways since the services can access each other by a cluster local service name.&lt;/p&gt;&lt;h3&gt;Let’s understand the working with a representation&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;static/Istio Ingress Gateway No Title-080918fabe90005624619773f1cde554.png&quot; align=&quot;center&quot; alt=&quot;Istio Ingress Gateway in Kubernetes No Title&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;Firstly A request is made by a client on a specific port&lt;/li&gt;&lt;li&gt;Then a load balancer on this port listens and forwards the request to one of the workers in theh cluster on same or a new port&lt;/li&gt;&lt;li&gt;Inside the cluster the request is routed to the Istio Ingress Gateway which is listened on the port of the load balancer&lt;/li&gt;&lt;li&gt;The Service forwards the requestto an Istio Ingress Gateway Pod which is managed by a deployment&lt;/li&gt;&lt;li&gt;The Ingress Gateway Pod is configured by a Gateway and a VirtualService.&lt;/li&gt;&lt;li&gt;The Gateway configures all the ports, protocol, and certificates.&lt;/li&gt;&lt;li&gt;The Virtual Service configures all the routing information to find the correct Servicein it.&lt;/li&gt;&lt;li&gt;The Istio Ingress Gateway Pod routes the request to the application Service.&lt;/li&gt;&lt;li&gt;And lastly, the application Service routes the request to an application Pod which is managed by a deployment.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;ul&gt;&lt;/ul&gt;&lt;h2&gt;Ingress Gateway Service&lt;/h2&gt;&lt;p&gt;The Ingress Gateway Service must listen to all the ports to be able to forward the traffic to the Ingress Gateway pods. Here we will be using routing to bring all the port numbers back to their initial state.&lt;/p&gt;&lt;p&gt;Note that a Kubernetes Service is not a real service, but, since we are using type: &amp;quot;NodePort&amp;quot;, all the request will be handled by the kube-proxy provided by Kubernetes and forwarded to a node with a current running pod. Once on the node, an IP-tables is configured a request will be forwarded to the appropriate pod.&lt;/p&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl&quot;&gt;&lt;button class=&quot;CodeBlock__CopyCode-sc-4qx7vm-2 XqrAp&quot;&gt;Copy&lt;/button&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl prism-code language-yaml&quot; style=&quot;color:#d6deeb;background-color:#011627&quot;&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token comment&quot; style=&quot;color:rgb(99, 119, 119);font-style:italic&quot;&gt;# From the istio-ingressgateway service&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; http2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;nodePort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color:rgb(247, 140, 108)&quot;&gt;30000&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color:rgb(247, 140, 108)&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; TCP&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; https&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;nodePort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color:rgb(247, 140, 108)&quot;&gt;30443&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color:rgb(247, 140, 108)&quot;&gt;443&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; TCP&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; mysql&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;nodePort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color:rgb(247, 140, 108)&quot;&gt;30306&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color:rgb(247, 140, 108)&quot;&gt;3306&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; TCP&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;p&gt;If we inspect the service, we will see that it defines more ports than we have describe above. So these ports will be used for all the internal Istio communication.&lt;/p&gt;&lt;h2&gt;Ingress Gateway Deployment&lt;/h2&gt;&lt;p&gt;It&amp;#x27;s a wrapper around the Envoy proxy and it is configured as the sidecars used inside the service mesh. When a Gateway or VirtualService gets changed, they are detected by the Istio Pilot controller and converts this information to an Envoy configuration and sends it to all the proxies, including the Envoy inside the IngressGateway.&lt;/p&gt;&lt;p&gt;Since container ports are not supposed to be declared in Kubernetes pods, we don&amp;#x27;t have to declare the ports in the Ingress Gateway Deployment. If we look inside the deployment we can see that there are a number of ports that are already declared anyway. We have to take care about the Ingress Gateway Deployment in SSL certificates. To access the certificates inside the Gateway resources, make sure that we have mounted all the required certificates properly.&lt;/p&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl&quot;&gt;&lt;button class=&quot;CodeBlock__CopyCode-sc-4qx7vm-2 XqrAp&quot;&gt;Copy&lt;/button&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl prism-code language-yaml&quot; style=&quot;color:#d6deeb;background-color:#011627&quot;&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token comment&quot; style=&quot;color:rgb(99, 119, 119);font-style:italic&quot;&gt;# Example represents volume mounts&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;volumeMounts&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; /etc/istio/ingressgateway&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;certs&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; ingressgateway&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;certs&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token boolean important&quot; style=&quot;color:rgb(255, 88, 116)&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; /etc/istio/ingressgateway&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;ca&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;certs&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; ingressgateway&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;ca&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;certs&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token boolean important&quot; style=&quot;color:rgb(255, 88, 116)&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token plain&quot; style=&quot;display:inline-block&quot;&gt;
&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token comment&quot; style=&quot;color:rgb(99, 119, 119);font-style:italic&quot;&gt;# Example represents volumes&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; ingressgateway&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;certs&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;defaultMode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color:rgb(247, 140, 108)&quot;&gt;420&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token boolean important&quot; style=&quot;color:rgb(255, 88, 116)&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;secretName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; istio&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;ingressgateway&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;certs&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; ingressgateway&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;ca&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;certs&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;defaultMode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color:rgb(247, 140, 108)&quot;&gt;420&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token boolean important&quot; style=&quot;color:rgb(255, 88, 116)&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;secretName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; istio&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;ingressgateway&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;ca&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;certs&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;h2&gt;The Gateway&lt;/h2&gt;&lt;p&gt;The Gateway resources are used to configure the ports for Envoy and also support for the Kubernetes Ingress. Since all the three ports are exposed with the servies, we need these ports to be handled by the Envoy. It can be handled by declaring one or more Gateways.&lt;/p&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl&quot;&gt;&lt;button class=&quot;CodeBlock__CopyCode-sc-4qx7vm-2 XqrAp&quot;&gt;Copy&lt;/button&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl prism-code language-yaml&quot; style=&quot;color:#d6deeb;background-color:#011627&quot;&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; networking.istio.io/v1alpha3&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; Gateway&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; default&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;gateway&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; istio&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;system&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;istio&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; ingressgateway&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;servers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token plain&quot; style=&quot;display:inline-block&quot;&gt;
&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color:rgb(173, 219, 103)&quot;&gt;&amp;#x27;*&amp;#x27;&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; http&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color:rgb(247, 140, 108)&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; HTTP&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;token plain&quot; style=&quot;display:inline-block&quot;&gt;
&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color:rgb(173, 219, 103)&quot;&gt;&amp;#x27;*&amp;#x27;&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; https&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color:rgb(247, 140, 108)&quot;&gt;443&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; HTTPS&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;tls&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; SIMPLE&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;privateKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; /etc/istio/ingressgateway&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;certs/tls.key&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;serverCertificate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; /etc/istio/ingressgateway&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;certs/tls.crt&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;token plain&quot; style=&quot;display:inline-block&quot;&gt;
&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token comment&quot; style=&quot;color:rgb(99, 119, 119);font-style:italic&quot;&gt;# For all the TCP routing this fields will be ignored, but it will be matched&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color:rgb(173, 219, 103)&quot;&gt;&amp;#x27;*&amp;#x27;&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token comment&quot; style=&quot;color:rgb(99, 119, 119);font-style:italic&quot;&gt;# with the VirtualService, We use * since it will match anything.&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; mysql&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color:rgb(247, 140, 108)&quot;&gt;3306&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; TCP&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;h2&gt;VirtualService&lt;/h2&gt;&lt;p&gt;The last interesting resource we have is the VirtualService, it used in concert with the Gateway to configure Envoy.&lt;/p&gt;&lt;p&gt;A general configuration for an HTTP(s) service&lt;/p&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl&quot;&gt;&lt;button class=&quot;CodeBlock__CopyCode-sc-4qx7vm-2 XqrAp&quot;&gt;Copy&lt;/button&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl prism-code language-yaml&quot; style=&quot;color:#d6deeb;background-color:#011627&quot;&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; networking.istio.io/v1alpha3&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; VirtualService&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; counter&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;gateways&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; default&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;gateway.istio&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;system.svc.cluster.local&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; counter.lab.example.com&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; /&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;destination&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; counter&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;          &lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color:rgb(247, 140, 108)&quot;&gt;80&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;h2&gt;Application Service and Deployment&lt;/h2&gt;&lt;p&gt;The request have now reached the application service and deployment. These are normal Kubernetes resources.&lt;/p&gt;&lt;h2&gt;Extras:&lt;/h2&gt;&lt;h3&gt;Debugging Istio Gateway&lt;/h3&gt;&lt;p&gt;First we will use istioctl to check the configuration status of Istio Ingress Gateway:&lt;/p&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl&quot;&gt;&lt;button class=&quot;CodeBlock__CopyCode-sc-4qx7vm-2 XqrAp&quot;&gt;Copy&lt;/button&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl prism-code language-yaml&quot; style=&quot;color:#d6deeb;background-color:#011627&quot;&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token comment&quot; style=&quot;color:rgb(99, 119, 119);font-style:italic&quot;&gt;# istioctl proxy-status istio-ingressgateway-5586f47659-r64lb.istio-system&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;Clusters Match&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;Listeners Match&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;Routes Match&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;p&gt;If anything does not get synced with it, try restarting the ingress gateway pod once - it may be possible that it somehow an update got missed. If RDS looked good, we can check access logs of it.&lt;/p&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl&quot;&gt;&lt;button class=&quot;CodeBlock__CopyCode-sc-4qx7vm-2 XqrAp&quot;&gt;Copy&lt;/button&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl prism-code language-yaml&quot; style=&quot;color:#d6deeb;background-color:#011627&quot;&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token comment&quot; style=&quot;color:rgb(99, 119, 119);font-style:italic&quot;&gt;#kubectl get configmap istio -n istio-system -o yaml | grep &amp;quot;accessLogFile: &amp;quot;&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;disable access log.\naccessLogFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color:rgb(199, 146, 234)&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token plain&quot;&gt; \&amp;quot;/dev/stdout\&amp;quot;\n\n&lt;/span&gt;&lt;span class=&quot;token comment&quot; style=&quot;color:rgb(99, 119, 119);font-style:italic&quot;&gt;# If accessLogEncoding&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;p&gt;Once all the access logs are enabled, we can try torequest a few more times and check the logs on the Ingress Gateway:&lt;/p&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl&quot;&gt;&lt;button class=&quot;CodeBlock__CopyCode-sc-4qx7vm-2 XqrAp&quot;&gt;Copy&lt;/button&gt;&lt;pre class=&quot;CodeBlock__Pre-sc-4qx7vm-0 hdXkEl prism-code language-yaml&quot; style=&quot;color:#d6deeb;background-color:#011627&quot;&gt;&lt;div class=&quot;token-line&quot; style=&quot;color:#d6deeb&quot;&gt;&lt;span class=&quot;CodeBlock__LineNo-sc-4qx7vm-1 bFANTz&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token comment&quot; style=&quot;color:rgb(99, 119, 119);font-style:italic&quot;&gt;# kubectl logs -n istio-system istio-ingressgateway-5586f47659-r64lb | grep -v deprecated&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[An Introduction to Meshery (Webinar-on-Demand)]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "An Introduction to Meshery (Webinar-on-Demand)",
  "thumbnail": "../../../assets/images/meshery/full-logo/meshery-logo-light-text.svg",
  "darkthumbnail": "../../../assets/images/meshery/full-logo/meshery-logo-light-text.svg",
  "date": "2021-11-07 10:30:05 -0530",
  "category": "Meshery",
  "type": "Recorded Webinar",
  "product": "Meshery",
  "tags": ["Network Planes", "Meshery"],
  "featured": false,
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("p", null, mdx(Link, {
    to: "/cloud-native-management/meshery",
    mdxType: "Link"
  }, "Meshery"), " is an open source, vendor-neutral, extensible management plane that enables service mesh users to overcome the challenges of complex virtual networking, empowers them to design and apply patterns containing tried and true best practices, benchmarks the performance of your service mesh deployments and enables developers, operators, and product managers to understand and manage their cloud native services with confidence."), mdx("h3", null, "Let\u2019s learn how to manage service meshes with confidence with the extensible service mesh manager, ", mdx(Link, {
    to: "/cloud-native-management/meshery",
    mdxType: "Link"
  }, "Meshery"), "."), mdx("div", {
    className: "iframe-container"
  }, mdx("iframe", {
    width: "460",
    height: "215",
    src: "https://www.youtube.com/embed/mU8qHUGYsk8",
    loading: "lazy",
    title: "YouTube video player",
    frameBorder: "0",
    allow: "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",
    allowFullScreen: true
  }))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/meshery/an-introduction-to-meshery-webinar-on-demand</link><guid isPermaLink="false">https://layer5.io/resources/meshery/an-introduction-to-meshery-webinar-on-demand</guid><pubDate>Sun, 07 Nov 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/2f4a78ada287ae5dcc2e75fad653f671/meshery-logo-light-text.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;p&gt;&lt;a href=&quot;/cloud-native-management/meshery&quot;&gt;Meshery&lt;/a&gt; is an open source, vendor-neutral, extensible management plane that enables service mesh users to overcome the challenges of complex virtual networking, empowers them to design and apply patterns containing tried and true best practices, benchmarks the performance of your service mesh deployments and enables developers, operators, and product managers to understand and manage their cloud native services with confidence.&lt;/p&gt;&lt;h3&gt;Let’s learn how to manage service meshes with confidence with the extensible service mesh manager, &lt;a href=&quot;/cloud-native-management/meshery&quot;&gt;Meshery&lt;/a&gt;.&lt;/h3&gt;&lt;div class=&quot;iframe-container&quot;&gt;&lt;iframe width=&quot;460&quot; height=&quot;215&quot; src=&quot;https://www.youtube.com/embed/mU8qHUGYsk8&quot; loading=&quot;lazy&quot; title=&quot;YouTube video player&quot; frameBorder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Service Mesh FAQs]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Service Mesh FAQs",
  "thumbnail": "../../../assets/images/service-mesh-icons/service-mesh.svg",
  "darkthumbnail": "../../../assets/images/service-mesh-icons/service-mesh.svg",
  "date": "2021-11-05 10:30:05 -0530",
  "category": "FAQ",
  "tags": ["Service Mesh", "FAQ"],
  "type": "FAQ",
  "featured": false,
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("div", null, mdx(FAQ, {
    category: ["Service Mesh"],
    mdxType: "FAQ"
  }))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/faq/service-mesh-faqs</link><guid isPermaLink="false">https://layer5.io/resources/faq/service-mesh-faqs</guid><pubDate>Fri, 05 Nov 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/cb310234b6631abcabb632a85974a3dd/service-mesh.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;div&gt;&lt;section id=&quot;faq&quot; class=&quot;faqSectionstyle__FaqSectionWrapper-sc-197kv4v-0 iPiXYd&quot;&gt;&lt;div class=&quot;Container__ContainerWrapper-sc-1i64mot-0 Ygctb&quot;&gt;&lt;div class=&quot;SectionTitle__TitleWrap-sc-1r9bvfi-0 cfYUXe section-title&quot;&gt;&lt;h1&gt;&lt;span&gt;Frequently Asked Questions&lt;/span&gt;&lt;/h1&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;Accordion&quot; class=&quot;accordionstyle__AccordionWrapper-sc-zq6yo-0 wUaHE reusecore__accordion&quot;&gt;&lt;h2 class=&quot;category_name&quot;&gt;Service Mesh&lt;/h2&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-0&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-0&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;What value does a service mesh provide?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-0&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Service meshes provide visibility, resiliency, traffic, and security control of distributed application services. Much value is promised here, particularly to the extent that much is given without the need to change your application code.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-1&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-1&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;What if I deploy one service mesh, like Istio, then need to switch to another service mesh?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-1&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Use of Meshery and the Service Mesh Interface specification help avoid switching costs between service meshes.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The goal of Service Mesh Interface specifications are to provide an abstract, unified method of interacting with a service mesh.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;See if your service mesh adheres to SMI specifications at the link below.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;a href=&quot;/projects/service-mesh-interface-conformance&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn faqbutton&quot; title=&quot;Service Mesh Interface&quot;&gt; Service Mesh Interface&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-2&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-2&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;What are service mesh standards and why do they matter?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-2&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Three service mesh abstractions have arisen given the high number of service meshes available (see the Service Mesh Landscape)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Servcie Mesh Performance (SMP) - A standard for capturing and characterizing service mesh performance.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Service Mesh Interface (SMI) - A standard interface for using common service mesh functionality on Kubernetes.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Multi-Vendor Service Mesh Interoperation (Hamlet) - A set of API standards for enabling service mesh federation.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;a href=&quot;https://calcotestudios.com/talks/decks/slides-open-infrastructure-summit-2020-its-a-multi-mesh-world.html&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn faqbutton&quot; title=&quot;See Open Infrastructure Summit Presentation&quot;&gt; See Open Infrastructure Summit Presentation&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-3&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-3&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;How does a service mesh help me? in my role?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-3&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Operators don’t necessarily need to involve Developers to change how many times a service should retry before timing out or to run experiments (known as chaos engineering). They are empowered to affect service behavior independently.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Customer Success (support) teams can handle the revocation of client access without involving Operators.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Product Owners can use quota management to enforce price plan limitations for quantity-based consumption of particular services.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Developers can redirect their internal stakeholders to a canary with beta functionality without involving Operators.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Security Engineers can declaratively define authentication and authorization policies, enforced by the service mesh.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Network Engineers are empowered with an extraordinarily high degree of application-level control formerly simply unavailable to them.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-4&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-4&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;What is a service mesh?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-4&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Service meshes provide intent-based networking for microservices describing desired behavior of the network in the face of constantly changing conditions and network topology. At their core, service meshes provide:&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A services-first network; A developer-driven network;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A network that is primarily concerned with alleviating application developers from building infrastructure concerns into their application code; A network that empowers operators with the ability to declaratively define network behavior, node identity, and traffic flow through policy;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A network that enables service owners to control application logic without engaging developers to change its code.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Value derived from the layer of tooling that service meshes provide is most evident in the land of microservices. The more services, the more value derived from the mesh. In subsequent chapters, I show how service meshes provide value outside of the use of microservices and containers and help modernize existing services (running on virtual or bare metal servers) as well.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-5&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-5&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;When should I adopt a service mesh?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-5&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;There are many service meshes to choose from as well as a variety of deployment models. Which is right for you and your organization depends on where you are in your maturity curve (Cloud Native skill set), number of services, underlying infrastructure, and how centric technology is to your business. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;So, should you deploy a service mesh? More and more the answer is “yes”. Service meshes are quickly becoming a ubiquitous layer in modern infrastructures.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;a href=&quot;/deploy-service-mesh&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn faqbutton&quot; title=&quot;Factors When considering how strongly you need a service mesh&quot;&gt; Factors When considering how strongly you need a service mesh&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;askus_section&quot;&gt;&lt;h2&gt;Didn&amp;#x27;t find an answer to your question?&lt;/h2&gt;&lt;div class=&quot;Contact-Modal__ContactFormModalWrapper-sc-1sqlxv4-0 TKQLf&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn open-modal-btn&quot; title=&quot;Just Ask&quot;&gt; Just Ask&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Meshery FAQs]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Meshery FAQs",
  "thumbnail": "../../../assets/images/meshery/text-only/meshery-logo-dark-text.png",
  "darkthumbnail": "../../../assets/images/meshery/text-only/meshery-logo-dark-text.png",
  "date": "2021-11-03 10:30:05 -0530",
  "category": "FAQ",
  "tags": ["Meshery", "FAQ"],
  "type": "FAQ",
  "product": "Meshery",
  "featured": false,
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("div", null, mdx(FAQ, {
    category: ["Meshery"],
    mdxType: "FAQ"
  }))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/faq/meshery-faqs</link><guid isPermaLink="false">https://layer5.io/resources/faq/meshery-faqs</guid><pubDate>Wed, 03 Nov 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/a211895183c6656f8c108120b1a74454/meshery-logo-dark-text.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;div&gt;&lt;section id=&quot;faq&quot; class=&quot;faqSectionstyle__FaqSectionWrapper-sc-197kv4v-0 iPiXYd&quot;&gt;&lt;div class=&quot;Container__ContainerWrapper-sc-1i64mot-0 Ygctb&quot;&gt;&lt;div class=&quot;SectionTitle__TitleWrap-sc-1r9bvfi-0 cfYUXe section-title&quot;&gt;&lt;h1&gt;&lt;span&gt;Frequently Asked Questions&lt;/span&gt;&lt;/h1&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;Accordion&quot; class=&quot;accordionstyle__AccordionWrapper-sc-zq6yo-0 wUaHE reusecore__accordion&quot;&gt;&lt;h2 class=&quot;category_name&quot;&gt;Meshery&lt;/h2&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-6&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-6&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;Does Meshery manage service meshes?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-6&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Yes, as the cloud native management plane, Meshery provisions and manages the lifecycle of service meshes.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;a href=&quot;/cloud-native-management/meshery&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn faqbutton&quot; title=&quot;Run Meshery&quot;&gt; Run Meshery&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-7&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-7&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;Why do I need to authenticate my social account to use Meshery?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-7&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Create your account - avoid having to reconfigure Meshery each time you deploy it. When you use a social account to authenticate to Meshery, your environment configuration persists from session to session. Meshery sources from Mixer Prometheus adapter and uses Prometheus node-exporter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Rank your deployment - results of performance tests are anonymously collected using the Service Mesh Performance, so that Meshery may provide the public service of ranking the speed of your deployment against that of the rest of the world&amp;#x27;s users.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-8&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-8&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;Why use Meshery?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-8&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Meshery is an open source, vendor neutral project that facilitates testing across meshes.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Other performance benchmark tools are not packaged into a mesh testing utility, but are only load-generators unto their own.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;a href=&quot;/projects/service-mesh-performance&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn faqbutton&quot; title=&quot;Service Mesh Performance&quot;&gt; Service Mesh Performance&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-9&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-9&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;I have already selected and am operating a service mesh. Should I use Meshery?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-9&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;As a management plane, Meshery provides value in a number of ways post-adoption of a service mesh. For example, Meshery analyzes your deployments in evaluation of service mesh best practices and patterns, highlighting where you might be deviating. Meshery&amp;#x27;s Other ways can be articulated in its set of features spanning:&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Lifecycle Management&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Configuration Management&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Performance Management&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Workload Management&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;a href=&quot;/cloud-native-management/meshery&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn faqbutton&quot; title=&quot;Meshery&quot;&gt; Meshery&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-10&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-10&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;Is Meshery open source?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-10&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Yes, all of Layer5&amp;#x27;s projects are licensed under Apache v2, including Meshery.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;As the cloud native management plane, Meshery is an extensible platform, offering multiple extension points within which users and partners can customize and extend Meshery&amp;#x27;s functionality.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;askus_section&quot;&gt;&lt;h2&gt;Didn&amp;#x27;t find an answer to your question?&lt;/h2&gt;&lt;div class=&quot;Contact-Modal__ContactFormModalWrapper-sc-1sqlxv4-0 TKQLf&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn open-modal-btn&quot; title=&quot;Just Ask&quot;&gt; Just Ask&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Layer5 FAQs]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Layer5 FAQs",
  "thumbnail": "../../../assets/images/layer5/layer5-only/png/layer5-gradient.png",
  "darkthumbnail": "../../../assets/images/layer5/layer5-only/png/layer5-gradient.png",
  "date": "2021-11-02 10:30:05 -0530",
  "category": "FAQ",
  "tags": ["Layer5", "FAQ"],
  "type": "FAQ",
  "featured": false,
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("div", null, mdx(FAQ, {
    category: ["Layer5"],
    mdxType: "FAQ"
  }))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/faq/layer5-faqs</link><guid isPermaLink="false">https://layer5.io/resources/faq/layer5-faqs</guid><pubDate>Tue, 02 Nov 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/e1b625bdf5830b0408c741ec2b8f1597/layer5-gradient.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;div&gt;&lt;section id=&quot;faq&quot; class=&quot;faqSectionstyle__FaqSectionWrapper-sc-197kv4v-0 iPiXYd&quot;&gt;&lt;div class=&quot;Container__ContainerWrapper-sc-1i64mot-0 Ygctb&quot;&gt;&lt;div class=&quot;SectionTitle__TitleWrap-sc-1r9bvfi-0 cfYUXe section-title&quot;&gt;&lt;h1&gt;&lt;span&gt;Frequently Asked Questions&lt;/span&gt;&lt;/h1&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;Accordion&quot; class=&quot;accordionstyle__AccordionWrapper-sc-zq6yo-0 wUaHE reusecore__accordion&quot;&gt;&lt;h2 class=&quot;category_name&quot;&gt;Layer5&lt;/h2&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-11&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-11&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;Are Layer5&amp;#x27;s solutions open source?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-11&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Yes, all of Layer5&amp;#x27;s projects are licensed under Apache v2.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Layer5 also offers extensions to the Meshery project in which Enterprise-centric functionality is commercially offered and supported.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-12&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-12&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;As a member of one of Layer5&amp;#x27;s GitHub organizations, What is expected of me?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-12&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;As a member of one of Layer5&amp;#x27;s GitHub organizations, your user account is entitled with triage level permissions across all repositories in the org. You are expected to engage where the topic strikes your interest, triaging (assigning, clarifying, labeling, qualifying) any issue you feel comfortable doing so. You are encouraged to review any open pull request and offer feedback to or ask questions to the author.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Layer5 has a number of GitHub organziations in which it&amp;#x27;s projects are advanced. See the repository overview below.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;a href=&quot;https://docs.google.com/document/d/1brtiJhdzal_O6NBZU_JQXiBff2InNtmgL_G1JgAiZtk/edit&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn faqbutton&quot; title=&quot;Layer5 Repository Overview&quot;&gt; Layer5 Repository Overview&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-13&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-13&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;As a community member, what can I expect from Layer5? What does Layer5 expect of me?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-13&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The Layer5 community expects you to get as much or more out of your time than you give to the projects. We expect earnest effort from its contributors. What “earnest effort” means is different for each community member as all have different circumstances. Suffice to say, the more you put into your efforts, the greater your reward will be. Most community contributors stay with the project for many months, if not indefinitely. Length of involvement is entirely up to the individual community member. You can expect to be challenged, to be assisted, to learn, to be recognized for your effort and to have your contributions appreciated.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;As a member of the Layer5 community, you are expected to be a good representative of Layer5&amp;#x27;s cultures and values of helping fellow members and paying it forward as we all learn together. You are expected to offer your ideas and skills to help advance our community and its projects. You are expected to share your experiences with others, to be curious, to be helpful, to ask questions, to challenge others and to be challenged yourself, to spread the word about what we collectively do here, to invite new members, to learn, to share, to make friends, to build a network, to write blog posts, to tweet, to become maintainers, to become MeshMates, to earn an internship, to get hired by Layer5 - - any and all of these things.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;a href=&quot;https://layer5.io/community/meshmates&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn faqbutton&quot; title=&quot;Reach out to a MeshMate to find out more&quot;&gt; Reach out to a MeshMate to find out more&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-14&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-14&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;I see works of other contributors being highlighted. Will my contributions be highlighted, too?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-14&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;We might not get to everyone, but we try to elevate the works of all of our contributors. All of our community members are proud of their work and so are we! We want their work and names to be recognized across our collective technology industry. Make sure that you follow and engage with the Twitter, YouTube, and LinkedIn accounts.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;a href=&quot;https://twitter.com/layer5&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn faqbutton&quot; title=&quot;Layer5 on Twitter&quot;&gt; Layer5 on Twitter&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-15&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-15&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;I am not a coder. Can I contribute, too?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-15&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Some community members join to contribute to open source projects, others jump in to put those projects to use, some are here to help cultivate and steward our community, while others are here just to hangout and absorb. All members are most welcome. Make sure that you introduce yourself in the Layer5 Slack and let other community members get acquainted with you and vice-versa.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;a href=&quot;https://slack.layer5.io&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn faqbutton&quot; title=&quot;Layer5 Slack&quot;&gt; Layer5 Slack&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;askus_section&quot;&gt;&lt;h2&gt;Didn&amp;#x27;t find an answer to your question?&lt;/h2&gt;&lt;div class=&quot;Contact-Modal__ContactFormModalWrapper-sc-1sqlxv4-0 TKQLf&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn open-modal-btn&quot; title=&quot;Just Ask&quot;&gt; Just Ask&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Internship FAQs]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Internship FAQs",
  "thumbnail": "../../../assets/images/workshops/workshops.png",
  "darkthumbnail": "../../../assets/images/workshops/workshops.png",
  "date": "2021-11-01 10:30:05 -0530",
  "category": "FAQ",
  "tags": ["Internship", "FAQ"],
  "type": "FAQ",
  "featured": false,
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("div", null, mdx(FAQ, {
    category: ["internships"],
    mdxType: "FAQ"
  }))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/faq/internship-faqs</link><guid isPermaLink="false">https://layer5.io/resources/faq/internship-faqs</guid><pubDate>Mon, 01 Nov 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/19e6848a9ab1dd41f5e4afc0e48f629a/workshops.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;div&gt;&lt;section id=&quot;faq&quot; class=&quot;faqSectionstyle__FaqSectionWrapper-sc-197kv4v-0 iPiXYd&quot;&gt;&lt;div class=&quot;Container__ContainerWrapper-sc-1i64mot-0 Ygctb&quot;&gt;&lt;div class=&quot;SectionTitle__TitleWrap-sc-1r9bvfi-0 cfYUXe section-title&quot;&gt;&lt;h1&gt;&lt;span&gt;Frequently Asked Questions&lt;/span&gt;&lt;/h1&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;Accordion&quot; class=&quot;accordionstyle__AccordionWrapper-sc-zq6yo-0 wUaHE reusecore__accordion&quot;&gt;&lt;h2 class=&quot;category_name&quot;&gt;internships&lt;/h2&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-16&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-16&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;How do I land an internship with Layer5?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-16&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;To best position your candidacy for an internship with Layer5, engage in the community and its projects. Start contributing and keep contributing. Community members who consistently contribute are the first individuals to be awarded internships when new internship opportunities open up - particularly members who are making significantly impactful contributions.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Understand that internships are assigned as a recognition of work that you are already performing. They are not assigned in the hopes of you becoming a good contributor, but are awarded to support and reinforce efforts that you are already giving. Engage and make an impact on an area of a project. Show your passion for helping move the project forward, willingness to work hard, and capacity to learn.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Recognize that there are many hundreds of contributors and relatively few maintainers and MeshMates. If you don&amp;#x27;t get an immediate response, don&amp;#x27;t lose heart. Be tenacious and find a piece of one of the projects to be engaged with and advance.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;a href=&quot;/community/meshmates&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn faqbutton&quot; title=&quot;Engage a MeshMate&quot;&gt; Engage a MeshMate&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-17&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-17&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;How often does Layer5 offer internships?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-17&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Continuously. Layer5 has internships starting and stopping frequently. Some internships rigidly start and stop on particular dates, while other internships offered start as a batch of candidates show collective readiness. We work with individuals to align the timings of the internship with other activities in their life.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;a href=&quot;https://github.com/issues?q=is%3Aopen+is%3Aissue+archived%3Afalse+org%3Alayer5io+org%3Ameshery+org%3Aservice-mesh-performance+org%3Aservice-mesh-patterns+label%3A%22help+wanted%22+&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn faqbutton&quot; title=&quot;Grab a &amp;quot;Help Wanted&amp;quot; Issue&quot;&gt; Grab a &amp;quot;Help Wanted&amp;quot; Issue&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-18&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-18&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;What are characteristics of successful interns?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-18&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Interns that thrive at Layer5 are those that espouse the Layer5 culture of paying it forward. These interns freely help other contributors, understanding that 1) they learn as they teach and assist others, 2) their projects are furthered with more contributors engage, and 3) any contributors path to maintainership is one of enabling others.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Successful interns steward projects naturally as they become a resource to other contributors. These interns frequently become component and/or core maintainers.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Successful interns internalize the fact that the real value of engaging and contributing to projects is the experience gained. They understand that the experience is theirs for the taking and that project maintainers and Layer5 employees want you to seize the opportunity. We consider your success our success and embrace the concept that your meaningful engagement is to all our benefits.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;a href=&quot;/blog/tag/community&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn faqbutton&quot; title=&quot;Hear from other interns&quot;&gt; Hear from other interns&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItem&quot; class=&quot;accordionstyle__AccordionItemWrapper-sc-zq6yo-1 cwuCUo accordion__item&quot;&gt;&lt;div data-accordion-component=&quot;AccordionItemHeading&quot; class=&quot;accordionstyle__AccordionTitleWrapper-sc-zq6yo-4 hlOIub accordion__header&quot; role=&quot;heading&quot; aria-level=&quot;3&quot;&gt;&lt;div class=&quot;accordionstyle__AccordionItemButtonWrapper-sc-zq6yo-5 ilNMiK&quot; id=&quot;accordion__heading-raa-19&quot; aria-disabled=&quot;false&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;accordion__panel-raa-19&quot; role=&quot;button&quot; tabindex=&quot;0&quot; data-accordion-component=&quot;AccordionItemButton&quot;&gt;&lt;div class=&quot;accordionstyle__IconWrapper-sc-zq6yo-7 jCBZFW&quot;&gt;&lt;h5&gt;What are accomplishments of successful interns?&lt;/h5&gt;&lt;div class=&quot;accordionstyle__OpenIcon-sc-zq6yo-2 eqQQKC&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&quot;accordionstyle__CloseIcon-sc-zq6yo-3 fVIWdl&quot;&gt;&lt;svg stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; viewBox=&quot;0 0 512 512&quot; color=&quot;white&quot; style=&quot;color:white&quot; height=&quot;22&quot; width=&quot;22&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div data-accordion-component=&quot;AccordionItemPanel&quot; class=&quot;accordionstyle__AccordionBodyWrapper-sc-zq6yo-6 llPzmQ accordion__body&quot; aria-hidden=&quot;true&quot; id=&quot;accordion__panel-raa-19&quot; hidden=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Many Layer5 interns speak at large, public technology conferences like KubeCon, DockerCon, and so on. They write blog posts and share about their experience and learnings on social media. They engage with their whole self.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Many interns become open source maintainers, and have ongoing responsibility to steward Layer5 and CNCF projects.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;faqbutton&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;askus_section&quot;&gt;&lt;h2&gt;Didn&amp;#x27;t find an answer to your question?&lt;/h2&gt;&lt;div class=&quot;Contact-Modal__ContactFormModalWrapper-sc-1sqlxv4-0 TKQLf&quot;&gt;&lt;button class=&quot;btnstyle__ButtonStyle-sc-mhxpaj-0 fJwHWC appion__btn open-modal-btn&quot; title=&quot;Just Ask&quot;&gt; Just Ask&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Envoy and WebAssembly]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Envoy and WebAssembly",
  "thumbnail": "./wasm-envoy.svg",
  "darkthumbnail": "./wasm-envoy.svg",
  "date": "2021-10-29 10:30:05 -0530",
  "category": "WebAssembly Filters",
  "type": "Article",
  "technology": "WebAssembly",
  "tags": ["WebAssembly", "Envoy"],
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("div", {
    className: "intro"
  }, mdx("p", null, "Learn more about WebAssembly's use within service mesh data planes in ", mdx(Link, {
    className: "blog",
    to: "/learn/service-mesh-books/the-enterprise-path-to-service-mesh-architectures-2nd-edition",
    mdxType: "Link"
  }, "The Enterprise Path to Service Mesh Archictures (2nd Edition)"), " -  free book and excellent resource for anyone looking to understand WASM filters, Lua scripts, and other options available for extending the data plane.")), mdx("p", null, "WASM stands for WebAssembly, which is an open standard for defining a binary format for executable programs. It also defines Interfaces for interacting with host environments through the WebAssembly System Interface (WASI). Browsers and large web applications were the primary focus of these host environments, with the goal of securely running programmes to enhance performance. The W3C maintains WASM as an open standard, and all modern browsers have adopted it. WebAssembly is the fourth language that can run natively in web browsers, following HTML, CSS, and Javascript."), mdx("p", null, "Google's open-source high-performance JavaScript and WebAssembly engine, V8, is being embedded into Envoy, bringing WASM support to the platform. Envoy exposes an Application Binary Interface (ABI) to WASM modules via the WebAssembly System Interface, allowing them to function as Envoy filters. WASI operates effortlessly. Your application is written in one of your favorite languages, such as Rust, C++, or C. Then, for the host environment, build and compile them into a WebAssembly binary. For the resulting binary to execute, the WebAssembly runtime must offer the necessary interfaces to system calls. Conceptually, this is similar to JVM. If you have a JVM installed, then you can run any Java-like languages on it. Similarly, with a runtime, you can run the WebAssembly binary."), mdx("p", null, "Additional filters can be added to Envoy in one of two ways:", mdx("ul", null, mdx("li", null, "By incorporating your custom filter into Envoy's C++ source code and building a new version of Envoy natively. The disadvantage is that you'll have to maintain your own version of Envoy, but the advantage is that your custom filter will run at native speed."), mdx("li", null, "Via WASM, by developing your custom filter in C++, Rust, AssemblyScript, or Go and integrating it as a WebAssembly binary. The disadvantage is that WASM-based filters have considerable overhead, but the advantage is that WASM-based filters may be dynamically loaded and reloaded in Envoy at runtime."))), mdx("p", null, "On startup, Envoy's configuration is initialised using bootstrap. The xDS APIs in Envoy enable\xA0dynamic configuration loading and reloading during runtime. There are several sections in the Envoy configuration (e.g. LDS which is for configuring Listeners and CDS which is for configuring clusters). WASM plugins can be configured in each section (programs)."), mdx("h3", null, "Dynamically (Re)loadable Intelligence"), mdx("p", null, " Data planes are powerful because they can dynamically load WASM programs to inspect, rewrite, and reroute packets carrying application requests. WASM applications can integrate business logic considerations when filtering application requests when using a management plane. The service mesh can implement business logic, as well as common application infrastructure logic: "), mdx("ul", null, mdx("li", null, "Subscription plan enforcement: rate limiting requests based on user\u2019s subscription plan"), mdx("li", null, "Class of Service: directing requests to high performance clusters based on user demographics or activity"), mdx("li", null, "Multivariate testing: facilitating comparison a of high number of variables between deployments (service versions) and users")), mdx("div", {
    className: "fact"
  }, mdx("p", null, "To get a feel of these\xA0capabilities, try experimenting with the ", mdx(Link, {
    to: "/projects/image-hub",
    mdxType: "Link"
  }, "Image Hub"), ",a prototype application developed in Rust that runs on Consul and allows you to explore WebAssembly modules used as Envoy filters.")), mdx("div", {
    className: "center"
  }, mdx("img", {
    src: Infrastructure,
    align: "center",
    alt: "application infrastructure logic"
  }), mdx("p", null, "Figure 1:. How the intelligence of the cloud native management plane and the power of the service mesh data plane combine to deliver application infrastructure logic.  ")), mdx("p", null, "WebAssembly is intriguing in part because of its performance characteristics, which vary depending on the program/filter used. For network filtering use cases, some have a 10% to 20% overhead as compared to natively executed code.\xA0 Given its high degree of portability, WebAssembly resembles Docker in certain ways. WASM's virtual stack machine, like the Java Virtual Machine (JVM), is evolving into a write once, run anywhere system (WORA). WASM executables are precompiled with a wide range of languages that support it as a compilation target (currently around 40 languages).")));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/webassembly-filters/envoy-and-webassembly</link><guid isPermaLink="false">https://layer5.io/resources/webassembly-filters/envoy-and-webassembly</guid><pubDate>Fri, 29 Oct 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/06775492c84a32dae01532165deed01e/wasm-envoy.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;div class=&quot;intro&quot;&gt;&lt;p&gt;Learn more about WebAssembly&amp;#x27;s use within service mesh data planes in &lt;a class=&quot;blog&quot; href=&quot;/learn/service-mesh-books/the-enterprise-path-to-service-mesh-architectures-2nd-edition&quot;&gt;The Enterprise Path to Service Mesh Archictures (2nd Edition)&lt;/a&gt; -  free book and excellent resource for anyone looking to understand WASM filters, Lua scripts, and other options available for extending the data plane.&lt;/p&gt;&lt;/div&gt;&lt;p&gt;WASM stands for WebAssembly, which is an open standard for defining a binary format for executable programs. It also defines Interfaces for interacting with host environments through the WebAssembly System Interface (WASI). Browsers and large web applications were the primary focus of these host environments, with the goal of securely running programmes to enhance performance. The W3C maintains WASM as an open standard, and all modern browsers have adopted it. WebAssembly is the fourth language that can run natively in web browsers, following HTML, CSS, and Javascript.&lt;/p&gt;&lt;p&gt;Google&amp;#x27;s open-source high-performance JavaScript and WebAssembly engine, V8, is being embedded into Envoy, bringing WASM support to the platform. Envoy exposes an Application Binary Interface (ABI) to WASM modules via the WebAssembly System Interface, allowing them to function as Envoy filters. WASI operates effortlessly. Your application is written in one of your favorite languages, such as Rust, C++, or C. Then, for the host environment, build and compile them into a WebAssembly binary. For the resulting binary to execute, the WebAssembly runtime must offer the necessary interfaces to system calls. Conceptually, this is similar to JVM. If you have a JVM installed, then you can run any Java-like languages on it. Similarly, with a runtime, you can run the WebAssembly binary.&lt;/p&gt;&lt;p&gt;Additional filters can be added to Envoy in one of two ways:&lt;ul&gt;&lt;li&gt;By incorporating your custom filter into Envoy&amp;#x27;s C++ source code and building a new version of Envoy natively. The disadvantage is that you&amp;#x27;ll have to maintain your own version of Envoy, but the advantage is that your custom filter will run at native speed.&lt;/li&gt;&lt;li&gt;Via WASM, by developing your custom filter in C++, Rust, AssemblyScript, or Go and integrating it as a WebAssembly binary. The disadvantage is that WASM-based filters have considerable overhead, but the advantage is that WASM-based filters may be dynamically loaded and reloaded in Envoy at runtime.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;On startup, Envoy&amp;#x27;s configuration is initialised using bootstrap. The xDS APIs in Envoy enable dynamic configuration loading and reloading during runtime. There are several sections in the Envoy configuration (e.g. LDS which is for configuring Listeners and CDS which is for configuring clusters). WASM plugins can be configured in each section (programs).&lt;/p&gt;&lt;h3&gt;Dynamically (Re)loadable Intelligence&lt;/h3&gt;&lt;p&gt; Data planes are powerful because they can dynamically load WASM programs to inspect, rewrite, and reroute packets carrying application requests. WASM applications can integrate business logic considerations when filtering application requests when using a management plane. The service mesh can implement business logic, as well as common application infrastructure logic: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;Subscription plan enforcement: rate limiting requests based on user’s subscription plan&lt;/li&gt;&lt;li&gt;Class of Service: directing requests to high performance clusters based on user demographics or activity&lt;/li&gt;&lt;li&gt;Multivariate testing: facilitating comparison a of high number of variables between deployments (service versions) and users&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;fact&quot;&gt;&lt;p&gt;To get a feel of these capabilities, try experimenting with the &lt;a href=&quot;/projects/image-hub&quot;&gt;Image Hub&lt;/a&gt;,a prototype application developed in Rust that runs on Consul and allows you to explore WebAssembly modules used as Envoy filters.&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;center&quot;&gt;&lt;img src=&quot;static/figure1-8ca07464d8d5a4cb657bed3daa70716e.png&quot; align=&quot;center&quot; alt=&quot;application infrastructure logic&quot;/&gt;&lt;p&gt;Figure 1:. How the intelligence of the cloud native management plane and the power of the service mesh data plane combine to deliver application infrastructure logic.  &lt;/p&gt;&lt;/div&gt;&lt;p&gt;WebAssembly is intriguing in part because of its performance characteristics, which vary depending on the program/filter used. For network filtering use cases, some have a 10% to 20% overhead as compared to natively executed code.  Given its high degree of portability, WebAssembly resembles Docker in certain ways. WASM&amp;#x27;s virtual stack machine, like the Java Virtual Machine (JVM), is evolving into a write once, run anywhere system (WORA). WASM executables are precompiled with a wide range of languages that support it as a compilation target (currently around 40 languages).&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Lua vs WebAssembly]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Lua vs WebAssembly",
  "thumbnail": "./lua-wasm.svg",
  "darkthumbnail": "./lua-wasm.svg",
  "date": "2021-10-28 10:30:05 -0530",
  "category": "WebAssembly Filters",
  "type": "Article",
  "technology": "WebAssembly",
  "tags": ["WebAssembly", "Envoy"],
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("div", {
    className: "intro"
  }, mdx("p", null, "Learn more about WebAssembly's use within service mesh data planes in ", mdx(Link, {
    className: "blog",
    to: "/learn/service-mesh-books/the-enterprise-path-to-service-mesh-architectures-2nd-edition",
    mdxType: "Link"
  }, "The Enterprise Path to Service Mesh Archictures (2nd Edition)"), " -  free book and excellent resource for anyone looking to understand WASM filters, Lua scripts, and other options available for extending the data plane.")), mdx("h3", null, "The Power of the Data Plane"), mdx("p", null, "Operators benefit from control planes because they provide much-needed element management. Data planes require control planes to apply service mesh-specific use cases to their fleet of service proxies. A control plane performs activities like configuration management, telemetry collecting, infrastructure-centric authorization, identity, etc. However, the service proxy is a massive source of power for them. Users frequently require customizing the chain of traffic filters (modules) that service proxies employ to perform much of their heavy lifting. Different technologies are used to provide data plane extensibility, and consequently, additional custom data plane intelligence, including:"), mdx("ul", null, mdx("li", null, "Lua - a scripting language for execution inside a Just-In-Time compiler, LuaJIT."), mdx("li", null, "WebAssembly (WASM) - a virtual stack machine as a compilation target for different languages to use as an execution environment.")), mdx("h3", null, "Lua and WebAssembly"), mdx("p", null, "People are discussing the merits of using a WebAssembly runtime since the introduction of WASM into service meshes. A\xA0 Lua runtime\xA0can be as little as 4 kb, with LuaJIT being surprisingly fast, having a runtime of only ~200 kb."), mdx("p", null, "The WebAssembly loader, not the runtime, is the source of complexity for the host software. When comparing the two, how do you weigh GCC or LLVM in terms of making optimized C or C++ faster or slower than LuaJIT?"), mdx("p", null, "The complexity of a WebAssembly runtime stems from the fact that it contains arch-specific optimizers as well as an Intermediate Representation to machine code translation stage that would usually be executed inside GCC or LLVM. Machine code can be created once and then cached on non-volatile storage until the input WASM file's hash changes (like the extracted contents of a Zip file). Since WASM has a similar approach to sandboxing (making the language/bytecode unable to describe accessing resources outside of what is granted), the result is lighter than Lua once the machine code is generated. However, WASM's compiled machine code does not require a garbage collector or JIT engine."), mdx("p", null, "WebAssembly follows the same flat, garbage-collected memory model as malloc and free. Suppose you want a garbage collector in a WebAssembly application. In that case, you can either compile it to WebAssembly and run it inside the sandbox or wait for extensions currently developing, such as \"opaque reference types,\" which allows WebAssembly applications to interact with objects managed by a Garbage Collector outside the sandbox."), mdx("h3", null, "NGINX and Lua"), mdx("p", null, "NGINX allows you to write\xA0dynamic modules that can be loaded at runtime based on\xA0configuration files. By modifying the configuration files and reloading NGINX, these modules can be unloaded. NGINX enables you to use Lua to embed custom logic into dynamic modules."), mdx("p", null, "Lua is a lightweight, embeddable scripting language that supports procedural, functional, and object-oriented programming. Lua is dynamically typed, and runs by interpreting bytecode with a register-based virtual machine."), mdx("p", null, "NGINX provides the ability to integrate dynamic Lua scripts using the ngx_lua module. Using NGINX with ngx_lua helps you offload logic from your services and hand their concerns off to an intelligent data plane. Leveraging NGINX's subrequests, the ngx_lua module allows the integration of Lua threads (or coroutines into the NGINX event model. Instead of passing logic to an upstream server, the Lua script can inspect and process service traffic. ngx_lua modules can be chained to be invoked at different phases of NGINX request processing.")));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/webassembly-filters/lua-vs-webassembly</link><guid isPermaLink="false">https://layer5.io/resources/webassembly-filters/lua-vs-webassembly</guid><pubDate>Thu, 28 Oct 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/e618b16625c039ca1840620451fc92dd/lua-wasm.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;div class=&quot;intro&quot;&gt;&lt;p&gt;Learn more about WebAssembly&amp;#x27;s use within service mesh data planes in &lt;a class=&quot;blog&quot; href=&quot;/learn/service-mesh-books/the-enterprise-path-to-service-mesh-architectures-2nd-edition&quot;&gt;The Enterprise Path to Service Mesh Archictures (2nd Edition)&lt;/a&gt; -  free book and excellent resource for anyone looking to understand WASM filters, Lua scripts, and other options available for extending the data plane.&lt;/p&gt;&lt;/div&gt;&lt;h3&gt;The Power of the Data Plane&lt;/h3&gt;&lt;p&gt;Operators benefit from control planes because they provide much-needed element management. Data planes require control planes to apply service mesh-specific use cases to their fleet of service proxies. A control plane performs activities like configuration management, telemetry collecting, infrastructure-centric authorization, identity, etc. However, the service proxy is a massive source of power for them. Users frequently require customizing the chain of traffic filters (modules) that service proxies employ to perform much of their heavy lifting. Different technologies are used to provide data plane extensibility, and consequently, additional custom data plane intelligence, including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Lua - a scripting language for execution inside a Just-In-Time compiler, LuaJIT.&lt;/li&gt;&lt;li&gt;WebAssembly (WASM) - a virtual stack machine as a compilation target for different languages to use as an execution environment.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;Lua and WebAssembly&lt;/h3&gt;&lt;p&gt;People are discussing the merits of using a WebAssembly runtime since the introduction of WASM into service meshes. A  Lua runtime can be as little as 4 kb, with LuaJIT being surprisingly fast, having a runtime of only ~200 kb.&lt;/p&gt;&lt;p&gt;The WebAssembly loader, not the runtime, is the source of complexity for the host software. When comparing the two, how do you weigh GCC or LLVM in terms of making optimized C or C++ faster or slower than LuaJIT?&lt;/p&gt;&lt;p&gt;The complexity of a WebAssembly runtime stems from the fact that it contains arch-specific optimizers as well as an Intermediate Representation to machine code translation stage that would usually be executed inside GCC or LLVM. Machine code can be created once and then cached on non-volatile storage until the input WASM file&amp;#x27;s hash changes (like the extracted contents of a Zip file). Since WASM has a similar approach to sandboxing (making the language/bytecode unable to describe accessing resources outside of what is granted), the result is lighter than Lua once the machine code is generated. However, WASM&amp;#x27;s compiled machine code does not require a garbage collector or JIT engine.&lt;/p&gt;&lt;p&gt;WebAssembly follows the same flat, garbage-collected memory model as malloc and free. Suppose you want a garbage collector in a WebAssembly application. In that case, you can either compile it to WebAssembly and run it inside the sandbox or wait for extensions currently developing, such as &amp;quot;opaque reference types,&amp;quot; which allows WebAssembly applications to interact with objects managed by a Garbage Collector outside the sandbox.&lt;/p&gt;&lt;h3&gt;NGINX and Lua&lt;/h3&gt;&lt;p&gt;NGINX allows you to write dynamic modules that can be loaded at runtime based on configuration files. By modifying the configuration files and reloading NGINX, these modules can be unloaded. NGINX enables you to use Lua to embed custom logic into dynamic modules.&lt;/p&gt;&lt;p&gt;Lua is a lightweight, embeddable scripting language that supports procedural, functional, and object-oriented programming. Lua is dynamically typed, and runs by interpreting bytecode with a register-based virtual machine.&lt;/p&gt;&lt;p&gt;NGINX provides the ability to integrate dynamic Lua scripts using the ngx_lua module. Using NGINX with ngx_lua helps you offload logic from your services and hand their concerns off to an intelligent data plane. Leveraging NGINX&amp;#x27;s subrequests, the ngx_lua module allows the integration of Lua threads (or coroutines into the NGINX event model. Instead of passing logic to an upstream server, the Lua script can inspect and process service traffic. ngx_lua modules can be chained to be invoked at different phases of NGINX request processing.&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Value of a Service Mesh]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Value of a Service Mesh",
  "thumbnail": "./service-mesh.svg",
  "darkthumbnail": "./service-mesh.svg",
  "date": "2021-10-20 10:30:05 -0530",
  "category": "Service Mesh",
  "type": "Article",
  "tags": ["Service mesh"],
  "featured": false,
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("div", {
    className: "intro"
  }, mdx("p", null, "Learn more about service mesh fundamentals in ", mdx(Link, {
    className: "blog",
    to: "/learn/service-mesh-books/the-enterprise-path-to-service-mesh-architectures-2nd-edition",
    mdxType: "Link"
  }, "The Enterprise Path to Service Mesh Archictures (2nd Edition)"), " -  free book and excellent resource which addresses how to evaluate your organization\u2019s readiness, provides factors to consider when building new applications and converting existing applications to best take advantage of a service mesh, and offers insight on deployment architectures used to get you there.")), mdx("p", null, "Service meshes provide visibility, resiliency, traffic, and security control of distributed application services."), mdx("h3", null, "Observability"), mdx("p", null, "Many organisations are attracted to the uniform observability that service meshes provide. There is no such thing as a fully healthy complex system. Service-level\xA0 t elemetry\xA0sheds light on difficult-to-answer questions like why your requests are slow\xA0to respond. It's quite simple to figure out when a service is down, but figuring out where it's slow and why is a different story."), mdx("p", null, "Service meshes allow both black-box (observing a system from the outside) and white-box (monitoring a system from the inside)\xA0monitoring of service-to-service communication. To provide white-box monitoring, some service meshes combine with a distributed tracing library. In contrast, other service meshes\xA0use protocol-specific filters as a capability of their proxies to provide a deeper level of visibility. The components of the data plane are well-positioned (transparently, in-band) to create metrics, logs, and traces, ensuring uniform and thorough observability across the mesh."), mdx("div", {
    className: "center"
  }, mdx("img", {
    src: Mixer,
    align: "right",
    alt: "Istio Mixer"
  }), mdx("p", null, "Figure 1: Istio\u2019s Mixer is capable of collecting multiple telemetric signals and sending those signals to backend monitoring, authentication, and quota systems via adapters")), mdx("p", null, "Service meshes centralize and assist in solving these observability challenges by providing the following:"), mdx("div", {
    className: "right"
  }, mdx("img", {
    src: Metrics,
    align: "right",
    alt: "Request Metrics"
  }), mdx("p", null, "Figure 2: Request metrics generated by Istio and visible in Meshery")), mdx("ul", null, mdx("li", null, mdx("strong", null, "Logging"), mdx("p", null, "Logs are used to baseline visibility for access requests to your entire fleet of services. Figure 1 illustrates how telemetry transmitted through service mesh logs include source and destination, request protocol, endpoint (URL), response time, size, and associated response code.")), mdx("li", null, mdx("strong", null, "Metrics"), mdx("p", null, "Metrics are used to eliminate the need for the development process to instrument code in order to emit metrics. When metrics are ubiquitous\xA0across your cluster, additional insights become available. Consistent metrics allow for things like autoscaling to be automated. Telemetry emitted by service mesh metrics include global request volume, global success rate, individual service responses by version, source and time.")), mdx("li", null, mdx("strong", null, "Tracing"), mdx("p", null, "Slow services (as opposed to services that simply fail) are the most difficult to debug without tracing. Imagine manually enumerating and tracking all of your service dependencies in a spreadsheet. Dependencies, request volumes, and failure rates are visualised using traces. Service meshes enable incorporating tracing functionality extremely simple with the help of\xA0automatically generated span identifiers. The mesh's individual services still must forward context headers.\xA0 Many application performance management (APM) solutions, on the other hand, need manual instrumentation to extract traces from your services."))), mdx("h3", null, "Traffic control"), mdx("p", null, "Service meshes provide for granular, declarative control over network traffic, such as determining where a request should be routed to perform\xA0canary release. Circuit breaking, latency-aware load balancing, eventually consistent service discovery, timeouts, deadlines, and retries are all common resiliency features."), mdx("p", null, "When a request does not return to the client within a certain amount of predefined\xA0time, a  ", mdx("strong", null, "timeout"), " is used to terminate it. They provide a time restriction on how much time can be spent on an individual\xA0request and are enforced at a point after which a response is considered invalid. ", mdx("strong", null, "Deadlines"), " are an advanced service mesh feature that helps minimise retry storms by facilitating feature-level timeouts rather than independent service timeouts. As a request travels through the mesh, deadlines deduct time remaining to handle it at each stage, propagating elapsed time with each downstream service call.\xA0 Timeouts and deadlines\xA0might be considered enforcers of your Service-Level Objectives (SLOs)."), mdx("p", null, "You can choose to retry a request if a service\xA0times out or is unsuccessfully returned. Retrying the same call to a service that is already under water (retry three times = 300 percent additional service load) can make things worse. Retry budgets (aka\xA0maximum retries) offer the benefit of multiple tries but come with a limit to avoid overloading an already a load-challenged\xA0service. Some service meshes go even further to reduce client contention by using jitter and an exponential back-off algorithm to calculate the timing of the\xA0next retry attempt."), mdx("div", {
    className: "left"
  }, mdx("img", {
    src: Timeouts,
    align: "right",
    alt: "Deadlines"
  }), mdx("p", null, "Figure 3:Deadlines, not ubiquitously supported by different service meshes, set feature-level timeouts")), mdx("p", null, "You can choose to fail fast and disconnect the service, prohibiting calls to it, rather than retrying and putting more load to the service. ", mdx("strong", null, "Circuit breaking"), " allows users to set\xA0configurable\xA0timeouts (or failure thresholds) to assure safe maximums and graceful failure, which is common for slow-responding services. When applications (services) are oversubscribed, using a service mesh as a distinct layer to implement circuit breaking minimises undue overhead."), mdx("p", null, mdx("strong", null, "Rate limiting"), "(throttling) is implemented to\xA0ensure service stability. When requests by\xA0one client\xA0surge, the service continues to function smoothly for others. The rate limits are calculated over a period of time. You can also utilise various algorithms, such as a fixed or sliding window, a sliding log, etc. The purpose of rate limits is to ensure that your services are not oversubscribed."), mdx("p", null, "When a limit is reached, well-implemented services commonly adhere to IETF RFC 6585, sending 429 Too Many Requests as the response code, including headers, such as the following, describing the request limit, number of requests remaining, and amount of time remaining until the request counter is reset:"), mdx("div", {
    className: "fact-left"
  }, mdx("p", null, "X-RateLimit-Limit: 60"), mdx("p", null, "X-RateLimit-Remaining: 0"), mdx("p", null, "X-RateLimit-Reset: 1372016266")), mdx("p", null, mdx("strong", null, "Quota management"), " (or conditional rate-limiting) accounts for requests based on business requirements instead of limiting rates based on operational concerns. It can be difficult to tell the difference between rate limiting and quota management because both features are handled by the same service mesh capability but are exposed to users in different ways."), mdx("p", null, "Configuring a policy setting a threshold for the number of client requests allowed to a service over time is the canonical example of quota management. User Lee, for example, is on the Free service plan and is allowed upto\xA010 requests per day. Quota policy imposes consumption limitations on services by keeping track of incoming requests in a distributed counter,often using\xA0an in-memory datastore like Redis\xA0 Conditional rate limits are a powerful service mesh capability when applied based on a user-defined set of arbitrary attributes."), mdx("h3", null, "Security"), mdx("div", {
    className: "right"
  }, mdx("img", {
    src: Communication,
    align: "right",
    alt: "Communication Paths"
  }), mdx("p", null, "Figure 4: An example of service mesh architecture. Secure communication paths in Istio")), mdx("p", null, "For securing service-to-service communication, most service meshes include a certificate authority that manages keys and certificates. Certificates are generated for each service and serve as the service's unique identifier. When sidecar proxies are employed, they assume the identity of the service and perform lifecycle management\xA0of certificates (creation, distribution, refresh, and revocation) on its behalf.\xA0\xA0 Local TCP connections are often established between the service and the sidecar proxy, whereas mutual Transport Layer Security (mTLS) connections are typically established between proxies in sidecar proxy deployments."), mdx("p", null, "Internal traffic within your application should be encrypted as a matter of security. The service calls in your application are no longer contained within a single monolith via localhost; they are now exposed over the network. Allowing service calls without TLS on the transport is a recipe for disaster in terms of security. When two mesh-enabled services communicate, they have strong cryptographic proof of their peers.\xA0\xA0 After identities have been established, they are used to create access control policies that determine whether or not a request should be serviced. Policy controls configuration of the key management system (e.g., certificate refresh interval) and operational access control are used to determine whether a request is accepted, based on service mesh employed. Approved and unapproved connection requests, as well as more granular access control parameters like time of day, are identified using white and blacklists."), mdx("h3", null, "Delay and fault injection"), mdx("p", null, "It's important to accept that your networks and/or systems will fail. Why not introduce failure and verify behaviour ahead of time? As proxies sit in line to service\xA0traffic, they frequently support protocol-specific fault injection, which allows you to configure\xA0the percentage of requests that should be subjected to faults or network delays. For example, generating HTTP 500 errors might be used to test the robustness of your distributed application's response behaviour."), mdx("p", null, "Injecting latency into requests without a service mesh is a time-consuming procedure, but it is probably a more prevalent problem encountered during\xA0 operation of an\xA0application. Users are far more irritated by slow replies that result in an HTTP 503 after a minute of waiting than by a 503 after a few seconds. The finest element of these resilience testing capabilities\xA0is that no application code needs to be changed to make these tests possible. The results of the tests, on the other hand, may prompt you to make changes to the application code."), mdx("p", null, "Using a service mesh, developers spend far less time creating code to cope with infrastructure issues\u2014code\xA0that could be commoditized by service meshes in the future. The separation of service and session-layer concerns from application code is manifested as a phenomenon I refer to as decoupling at Layer 5."), mdx("p", null, "A service mesh can be regarded of as surfacing the OSI model's session layer as a separately addressable, first-class citizen in your modern architecture. They are a secret weapon of cloud native systems, waiting to be exploited as a highly configurable work horse.")));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/service-mesh/value-of-a-service-mesh</link><guid isPermaLink="false">https://layer5.io/resources/service-mesh/value-of-a-service-mesh</guid><pubDate>Wed, 20 Oct 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/cb310234b6631abcabb632a85974a3dd/service-mesh.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;div class=&quot;intro&quot;&gt;&lt;p&gt;Learn more about service mesh fundamentals in &lt;a class=&quot;blog&quot; href=&quot;/learn/service-mesh-books/the-enterprise-path-to-service-mesh-architectures-2nd-edition&quot;&gt;The Enterprise Path to Service Mesh Archictures (2nd Edition)&lt;/a&gt; -  free book and excellent resource which addresses how to evaluate your organization’s readiness, provides factors to consider when building new applications and converting existing applications to best take advantage of a service mesh, and offers insight on deployment architectures used to get you there.&lt;/p&gt;&lt;/div&gt;&lt;p&gt;Service meshes provide visibility, resiliency, traffic, and security control of distributed application services.&lt;/p&gt;&lt;h3&gt;Observability&lt;/h3&gt;&lt;p&gt;Many organisations are attracted to the uniform observability that service meshes provide. There is no such thing as a fully healthy complex system. Service-level  t elemetry sheds light on difficult-to-answer questions like why your requests are slow to respond. It&amp;#x27;s quite simple to figure out when a service is down, but figuring out where it&amp;#x27;s slow and why is a different story.&lt;/p&gt;&lt;p&gt;Service meshes allow both black-box (observing a system from the outside) and white-box (monitoring a system from the inside) monitoring of service-to-service communication. To provide white-box monitoring, some service meshes combine with a distributed tracing library. In contrast, other service meshes use protocol-specific filters as a capability of their proxies to provide a deeper level of visibility. The components of the data plane are well-positioned (transparently, in-band) to create metrics, logs, and traces, ensuring uniform and thorough observability across the mesh.&lt;/p&gt;&lt;div class=&quot;center&quot;&gt;&lt;img src=&quot;static/figure1-dcc279844f5e980cd2e4eea5f8388b1a.png&quot; align=&quot;right&quot; alt=&quot;Istio Mixer&quot;/&gt;&lt;p&gt;Figure 1: Istio’s Mixer is capable of collecting multiple telemetric signals and sending those signals to backend monitoring, authentication, and quota systems via adapters&lt;/p&gt;&lt;/div&gt;&lt;p&gt;Service meshes centralize and assist in solving these observability challenges by providing the following:&lt;/p&gt;&lt;div class=&quot;right&quot;&gt;&lt;img src=&quot;static/figure2-390054d17df7bf42260a8df2f09c78f4.png&quot; align=&quot;right&quot; alt=&quot;Request Metrics&quot;/&gt;&lt;p&gt;Figure 2: Request metrics generated by Istio and visible in Meshery&lt;/p&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Logging&lt;/strong&gt;&lt;p&gt;Logs are used to baseline visibility for access requests to your entire fleet of services. Figure 1 illustrates how telemetry transmitted through service mesh logs include source and destination, request protocol, endpoint (URL), response time, size, and associated response code.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Metrics&lt;/strong&gt;&lt;p&gt;Metrics are used to eliminate the need for the development process to instrument code in order to emit metrics. When metrics are ubiquitous across your cluster, additional insights become available. Consistent metrics allow for things like autoscaling to be automated. Telemetry emitted by service mesh metrics include global request volume, global success rate, individual service responses by version, source and time.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Tracing&lt;/strong&gt;&lt;p&gt;Slow services (as opposed to services that simply fail) are the most difficult to debug without tracing. Imagine manually enumerating and tracking all of your service dependencies in a spreadsheet. Dependencies, request volumes, and failure rates are visualised using traces. Service meshes enable incorporating tracing functionality extremely simple with the help of automatically generated span identifiers. The mesh&amp;#x27;s individual services still must forward context headers.  Many application performance management (APM) solutions, on the other hand, need manual instrumentation to extract traces from your services.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;Traffic control&lt;/h3&gt;&lt;p&gt;Service meshes provide for granular, declarative control over network traffic, such as determining where a request should be routed to perform canary release. Circuit breaking, latency-aware load balancing, eventually consistent service discovery, timeouts, deadlines, and retries are all common resiliency features.&lt;/p&gt;&lt;p&gt;When a request does not return to the client within a certain amount of predefined time, a  &lt;strong&gt;timeout&lt;/strong&gt; is used to terminate it. They provide a time restriction on how much time can be spent on an individual request and are enforced at a point after which a response is considered invalid. &lt;strong&gt;Deadlines&lt;/strong&gt; are an advanced service mesh feature that helps minimise retry storms by facilitating feature-level timeouts rather than independent service timeouts. As a request travels through the mesh, deadlines deduct time remaining to handle it at each stage, propagating elapsed time with each downstream service call.  Timeouts and deadlines might be considered enforcers of your Service-Level Objectives (SLOs).&lt;/p&gt;&lt;p&gt;You can choose to retry a request if a service times out or is unsuccessfully returned. Retrying the same call to a service that is already under water (retry three times = 300 percent additional service load) can make things worse. Retry budgets (aka maximum retries) offer the benefit of multiple tries but come with a limit to avoid overloading an already a load-challenged service. Some service meshes go even further to reduce client contention by using jitter and an exponential back-off algorithm to calculate the timing of the next retry attempt.&lt;/p&gt;&lt;div class=&quot;left&quot;&gt;&lt;img src=&quot;static/figure3-d1eb6e4c19a25c29b8e465646eaa644b.png&quot; align=&quot;right&quot; alt=&quot;Deadlines&quot;/&gt;&lt;p&gt;Figure 3:Deadlines, not ubiquitously supported by different service meshes, set feature-level timeouts&lt;/p&gt;&lt;/div&gt;&lt;p&gt;You can choose to fail fast and disconnect the service, prohibiting calls to it, rather than retrying and putting more load to the service. &lt;strong&gt;Circuit breaking&lt;/strong&gt; allows users to set configurable timeouts (or failure thresholds) to assure safe maximums and graceful failure, which is common for slow-responding services. When applications (services) are oversubscribed, using a service mesh as a distinct layer to implement circuit breaking minimises undue overhead.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rate limiting&lt;/strong&gt;(throttling) is implemented to ensure service stability. When requests by one client surge, the service continues to function smoothly for others. The rate limits are calculated over a period of time. You can also utilise various algorithms, such as a fixed or sliding window, a sliding log, etc. The purpose of rate limits is to ensure that your services are not oversubscribed.&lt;/p&gt;&lt;p&gt;When a limit is reached, well-implemented services commonly adhere to IETF RFC 6585, sending 429 Too Many Requests as the response code, including headers, such as the following, describing the request limit, number of requests remaining, and amount of time remaining until the request counter is reset:&lt;/p&gt;&lt;div class=&quot;fact-left&quot;&gt;&lt;p&gt;X-RateLimit-Limit: 60&lt;/p&gt;&lt;p&gt;X-RateLimit-Remaining: 0&lt;/p&gt;&lt;p&gt;X-RateLimit-Reset: 1372016266&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Quota management&lt;/strong&gt; (or conditional rate-limiting) accounts for requests based on business requirements instead of limiting rates based on operational concerns. It can be difficult to tell the difference between rate limiting and quota management because both features are handled by the same service mesh capability but are exposed to users in different ways.&lt;/p&gt;&lt;p&gt;Configuring a policy setting a threshold for the number of client requests allowed to a service over time is the canonical example of quota management. User Lee, for example, is on the Free service plan and is allowed upto 10 requests per day. Quota policy imposes consumption limitations on services by keeping track of incoming requests in a distributed counter,often using an in-memory datastore like Redis  Conditional rate limits are a powerful service mesh capability when applied based on a user-defined set of arbitrary attributes.&lt;/p&gt;&lt;h3&gt;Security&lt;/h3&gt;&lt;div class=&quot;right&quot;&gt;&lt;img src=&quot;static/figure4-42e3faa6d38a8c21b7584ee807ee0dec.png&quot; align=&quot;right&quot; alt=&quot;Communication Paths&quot;/&gt;&lt;p&gt;Figure 4: An example of service mesh architecture. Secure communication paths in Istio&lt;/p&gt;&lt;/div&gt;&lt;p&gt;For securing service-to-service communication, most service meshes include a certificate authority that manages keys and certificates. Certificates are generated for each service and serve as the service&amp;#x27;s unique identifier. When sidecar proxies are employed, they assume the identity of the service and perform lifecycle management of certificates (creation, distribution, refresh, and revocation) on its behalf.   Local TCP connections are often established between the service and the sidecar proxy, whereas mutual Transport Layer Security (mTLS) connections are typically established between proxies in sidecar proxy deployments.&lt;/p&gt;&lt;p&gt;Internal traffic within your application should be encrypted as a matter of security. The service calls in your application are no longer contained within a single monolith via localhost; they are now exposed over the network. Allowing service calls without TLS on the transport is a recipe for disaster in terms of security. When two mesh-enabled services communicate, they have strong cryptographic proof of their peers.   After identities have been established, they are used to create access control policies that determine whether or not a request should be serviced. Policy controls configuration of the key management system (e.g., certificate refresh interval) and operational access control are used to determine whether a request is accepted, based on service mesh employed. Approved and unapproved connection requests, as well as more granular access control parameters like time of day, are identified using white and blacklists.&lt;/p&gt;&lt;h3&gt;Delay and fault injection&lt;/h3&gt;&lt;p&gt;It&amp;#x27;s important to accept that your networks and/or systems will fail. Why not introduce failure and verify behaviour ahead of time? As proxies sit in line to service traffic, they frequently support protocol-specific fault injection, which allows you to configure the percentage of requests that should be subjected to faults or network delays. For example, generating HTTP 500 errors might be used to test the robustness of your distributed application&amp;#x27;s response behaviour.&lt;/p&gt;&lt;p&gt;Injecting latency into requests without a service mesh is a time-consuming procedure, but it is probably a more prevalent problem encountered during  operation of an application. Users are far more irritated by slow replies that result in an HTTP 503 after a minute of waiting than by a 503 after a few seconds. The finest element of these resilience testing capabilities is that no application code needs to be changed to make these tests possible. The results of the tests, on the other hand, may prompt you to make changes to the application code.&lt;/p&gt;&lt;p&gt;Using a service mesh, developers spend far less time creating code to cope with infrastructure issues—code that could be commoditized by service meshes in the future. The separation of service and session-layer concerns from application code is manifested as a phenomenon I refer to as decoupling at Layer 5.&lt;/p&gt;&lt;p&gt;A service mesh can be regarded of as surfacing the OSI model&amp;#x27;s session layer as a separately addressable, first-class citizen in your modern architecture. They are a secret weapon of cloud native systems, waiting to be exploited as a highly configurable work horse.&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Swappable Sidecars]]></title><description><![CDATA[var _excluded = ["components"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Swappable Sidecars",
  "thumbnail": "./figure1.png",
  "darkthumbnail": "./figure1.png",
  "category": "Service Mesh",
  "date": "2021-10-17 10:30:05 -0530",
  "type": "Article",
  "tags": ["Service Mesh"],
  "published": true,
  "resource": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, _excluded);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(ResourcesWrapper, {
    mdxType: "ResourcesWrapper"
  }, mdx("div", {
    className: "intro"
  }, mdx("p", null, "Learn more about WebAssembly's use within service mesh data planes in ", mdx(Link, {
    className: "blog",
    to: "/learn/service-mesh-books/the-enterprise-path-to-service-mesh-architectures-2nd-edition",
    mdxType: "Link"
  }, "The Enterprise Path to Service Mesh Archictures (2nd Edition)"), " -  free book and excellent resource for anyone looking to understand WASM filters, Lua scripts, and other options available for extending the data plane.")), mdx("p", null, "One of the most significant\xA0considerations to make when establishing a service mesh is the proxy's functionality. From the standpoint of a developer, a proxy's cloud native integrations (e.g., with OpenTelemetry / OpenTracing, Prometheus, and so on) are extremely important. Surprisingly, a developer may be uninterested in the APIs of a proxy. The control plane for the service mesh is the point of control for managing proxy settings. A developer, however, will be interested in the APIs of a management plane. Protocol support is at the top of the developers' wish list for proxies. Protocol considerations can be divided into two categories:"), mdx("ul", null, mdx("li", null, "TCP, UDP, HTTP: Network team-centric consideration in which efficiency, performance, offload, and load balancing algorithm support are evaluated. Support for HTTP2 often takes top billing."), mdx("li", null, "gRPC, NATS, Kafka: A developer-centric consideration in which the top item on the list is application-level protocols, specifically those commonly used in modern distributed application designs.")), mdx("p", null, "The reality is that selecting the perfect proxy involves more than protocol support. Your proxy should meet all key criteria:"), mdx("ul", null, mdx("li", null, "High performance and low latency"), mdx("li", null, "High scalability and small memory footprint"), mdx("li", null, "Deep observability at all layers of the network stack"), mdx("li", null, "Programmatic configuration and ecosystem integration"), mdx("li", null, "Thorough documentation to facilitate an understanding of expected proxy behavior")), mdx("p", null, "Envoy is used as a service proxy by a variety of service meshes. Within Istio, Envoy is the default service proxy. Using Envoy\u2019s APIs, various projects have demonstrated the ability to displace Envoy as the default service proxy with the choice of an alternative."), mdx("div", {
    className: "intro"
  }, mdx("h3", {
    align: "center"
  }, "Standardizing Data Plane APIs"), mdx("p", null, "The xDS APIs are a collection of Envoy's APIs. The Universal Data Plane API (UDPA) working group attempts to create a set of APIs that will serve as the de facto standard for L4/L7 data plane configuration (similar to OpenFlow's role in SDN at L2/L3/L4). The Envoy xDS APIs are being evolved to address service discovery, load balancing assignments, routing discovery, listener configuration, secret discovery, load reporting, health check delegation, and more, in combination with a well-defined, stable API versioning policy.")), mdx("p", null, "In early versions of Istio, Linkerd exhibited an integration in which Istio was the control plane, supplying configuration to Linkerd proxies.\xA0 NGINX also hosted a project called nginMesh, in which Istio served as the control plane and NGINX proxies operated as the data plane."), mdx("p", null, "With many service proxies in the ecosystem, outside of Envoy, only two have currently demonstrated integration with Istio . Linkerd is not yet intended to be a general-purpose proxy; instead, it is focused on being lightweight, placing extensibility as a secondary concern by offering extensions via gRPC plug-in.\xA0 Consul makes use of Envoy as a proxy. Why would you want to use another\xA0service proxy?"), mdx("strong", null, "NGINX"), mdx("p", null, "While you won't be able to use NGINX as a proxy to replace Envoy, you could wish to employ NGINX based on your operational expertise, the necessity for a battle-tested proxy, or the integration of an F5 load balancer. You might also be looking for caching, a web application firewall (WAF), or other features in NGINX Plus. The service proxy used in the NGINX Service Mesh data plane is an enhanced version of NGINX Plus that interfaces natively with Kubernetes."), mdx("strong", null, "CPX"), mdx("p", null, "If you already have Citrix Application Delivery Controllers and want to use them across your diverse infrastructure, you might choose to use the Citrix Service Mesh (which is an Istio control plane with a CPX data plane).With infrastructure diversity, holistic control, and monitoring for operational consistency across all your workloads (new microservices and existing monoliths)."), mdx("strong", null, "MOSN"), mdx("p", null, "MOSN can deploy as an Istio data plane. You might choose to deploy MOSN if you need to highly customize your service proxy and are a Golang shop. MOSN supports a multi-protocol framework, and you access private protocols with a unified routing framework. It has a multi-process plug-in mechanism, which can easily extend the plug-ins of independent MOSN processes through the plug-in framework, and do some other management, bypass and other functional module extensions."), mdx("div", {
    className: "fact"
  }, "You might find this article on ", mdx("a", {
    href: "https://www.oreilly.com/content/how-to-customize-an-istio-service-mesh/"
  }, "How to customize an Istio service mesh and its adjoining webcast"), " helpful in further understanding Istio\u2019s extensibility with respect to swappable service proxies."), mdx("p", null, "Without configuration, proxies are without instructions to perform their tasks. Pilot is the head of the ship in an Istio mesh, keeping synchronized with the underlying platform by tracking and representing its services to istio-proxy. istio-proxy contains the proxy of choice (e.g. Envoy). Typically, the same istio-proxy Docker image is used by Istio sidecar and Istio ingress gateway, which contains not only the service proxy but also the Istio Pilot agent.  At regular intervals, the Istio Pilot agent pulls configuration from Pilot to the service proxy, so that each proxy knows where to route traffic."), mdx("div", {
    className: "center"
  }, mdx("img", {
    src: Swappingproxy,
    align: "center",
    alt: "Swapping Proxy"
  }), mdx("p", null, "Figure 1: Example of swapping proxies\u2014Istio + nginMesh."))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/resources/service-mesh/swappable-sidecars</link><guid isPermaLink="false">https://layer5.io/resources/service-mesh/swappable-sidecars</guid><pubDate>Sun, 17 Oct 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/cfb74577108949bc2ca373257e95e16c/figure1.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Resourcesstyle__ResourcesWrapper-sc-1y33ukx-0 sfJrc&quot;&gt;&lt;div class=&quot;intro&quot;&gt;&lt;p&gt;Learn more about WebAssembly&amp;#x27;s use within service mesh data planes in &lt;a class=&quot;blog&quot; href=&quot;/learn/service-mesh-books/the-enterprise-path-to-service-mesh-architectures-2nd-edition&quot;&gt;The Enterprise Path to Service Mesh Archictures (2nd Edition)&lt;/a&gt; -  free book and excellent resource for anyone looking to understand WASM filters, Lua scripts, and other options available for extending the data plane.&lt;/p&gt;&lt;/div&gt;&lt;p&gt;One of the most significant considerations to make when establishing a service mesh is the proxy&amp;#x27;s functionality. From the standpoint of a developer, a proxy&amp;#x27;s cloud native integrations (e.g., with OpenTelemetry / OpenTracing, Prometheus, and so on) are extremely important. Surprisingly, a developer may be uninterested in the APIs of a proxy. The control plane for the service mesh is the point of control for managing proxy settings. A developer, however, will be interested in the APIs of a management plane. Protocol support is at the top of the developers&amp;#x27; wish list for proxies. Protocol considerations can be divided into two categories:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;TCP, UDP, HTTP: Network team-centric consideration in which efficiency, performance, offload, and load balancing algorithm support are evaluated. Support for HTTP2 often takes top billing.&lt;/li&gt;&lt;li&gt;gRPC, NATS, Kafka: A developer-centric consideration in which the top item on the list is application-level protocols, specifically those commonly used in modern distributed application designs.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The reality is that selecting the perfect proxy involves more than protocol support. Your proxy should meet all key criteria:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;High performance and low latency&lt;/li&gt;&lt;li&gt;High scalability and small memory footprint&lt;/li&gt;&lt;li&gt;Deep observability at all layers of the network stack&lt;/li&gt;&lt;li&gt;Programmatic configuration and ecosystem integration&lt;/li&gt;&lt;li&gt;Thorough documentation to facilitate an understanding of expected proxy behavior&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Envoy is used as a service proxy by a variety of service meshes. Within Istio, Envoy is the default service proxy. Using Envoy’s APIs, various projects have demonstrated the ability to displace Envoy as the default service proxy with the choice of an alternative.&lt;/p&gt;&lt;div class=&quot;intro&quot;&gt;&lt;h3 align=&quot;center&quot;&gt;Standardizing Data Plane APIs&lt;/h3&gt;&lt;p&gt;The xDS APIs are a collection of Envoy&amp;#x27;s APIs. The Universal Data Plane API (UDPA) working group attempts to create a set of APIs that will serve as the de facto standard for L4/L7 data plane configuration (similar to OpenFlow&amp;#x27;s role in SDN at L2/L3/L4). The Envoy xDS APIs are being evolved to address service discovery, load balancing assignments, routing discovery, listener configuration, secret discovery, load reporting, health check delegation, and more, in combination with a well-defined, stable API versioning policy.&lt;/p&gt;&lt;/div&gt;&lt;p&gt;In early versions of Istio, Linkerd exhibited an integration in which Istio was the control plane, supplying configuration to Linkerd proxies.  NGINX also hosted a project called nginMesh, in which Istio served as the control plane and NGINX proxies operated as the data plane.&lt;/p&gt;&lt;p&gt;With many service proxies in the ecosystem, outside of Envoy, only two have currently demonstrated integration with Istio . Linkerd is not yet intended to be a general-purpose proxy; instead, it is focused on being lightweight, placing extensibility as a secondary concern by offering extensions via gRPC plug-in.  Consul makes use of Envoy as a proxy. Why would you want to use another service proxy?&lt;/p&gt;&lt;strong&gt;NGINX&lt;/strong&gt;&lt;p&gt;While you won&amp;#x27;t be able to use NGINX as a proxy to replace Envoy, you could wish to employ NGINX based on your operational expertise, the necessity for a battle-tested proxy, or the integration of an F5 load balancer. You might also be looking for caching, a web application firewall (WAF), or other features in NGINX Plus. The service proxy used in the NGINX Service Mesh data plane is an enhanced version of NGINX Plus that interfaces natively with Kubernetes.&lt;/p&gt;&lt;strong&gt;CPX&lt;/strong&gt;&lt;p&gt;If you already have Citrix Application Delivery Controllers and want to use them across your diverse infrastructure, you might choose to use the Citrix Service Mesh (which is an Istio control plane with a CPX data plane).With infrastructure diversity, holistic control, and monitoring for operational consistency across all your workloads (new microservices and existing monoliths).&lt;/p&gt;&lt;strong&gt;MOSN&lt;/strong&gt;&lt;p&gt;MOSN can deploy as an Istio data plane. You might choose to deploy MOSN if you need to highly customize your service proxy and are a Golang shop. MOSN supports a multi-protocol framework, and you access private protocols with a unified routing framework. It has a multi-process plug-in mechanism, which can easily extend the plug-ins of independent MOSN processes through the plug-in framework, and do some other management, bypass and other functional module extensions.&lt;/p&gt;&lt;div class=&quot;fact&quot;&gt;You might find this article on &lt;a href=&quot;https://www.oreilly.com/content/how-to-customize-an-istio-service-mesh/&quot;&gt;How to customize an Istio service mesh and its adjoining webcast&lt;/a&gt; helpful in further understanding Istio’s extensibility with respect to swappable service proxies.&lt;/div&gt;&lt;p&gt;Without configuration, proxies are without instructions to perform their tasks. Pilot is the head of the ship in an Istio mesh, keeping synchronized with the underlying platform by tracking and representing its services to istio-proxy. istio-proxy contains the proxy of choice (e.g. Envoy). Typically, the same istio-proxy Docker image is used by Istio sidecar and Istio ingress gateway, which contains not only the service proxy but also the Istio Pilot agent.  At regular intervals, the Istio Pilot agent pulls configuration from Pilot to the service proxy, so that each proxy knows where to route traffic.&lt;/p&gt;&lt;div class=&quot;center&quot;&gt;&lt;img src=&quot;static/figure1-4af4feafa8c502823390ae35112b891f.png&quot; align=&quot;center&quot; alt=&quot;Swapping Proxy&quot;/&gt;&lt;p&gt;Figure 1: Example of swapping proxies—Istio + nginMesh.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded></item></channel></rss>